{
  "name": "hubspot_crm",
  "spec_source": "openapi_spec",
  "token_for_http_testing": "",
  "package_name": "hubspot_crm_api",
  "package_dir_path": "/Users/rb/arcade/arcade-ai/toolkits/hubspot_crm_api/arcade_hubspot_crm_api",
  "project_dir_path": "/Users/rb/arcade/arcade-ai/toolkits/hubspot_crm_api",
  "arcade_new_cmd_executed": true,
  "api_endpoint_selection_customized": false,
  "api_endpoint_for_http_testing": "",
  "authorization_type": "oauth",
  "auth_provider_id": "arcade-hubspot",
  "where_to_provide_token": "header",
  "token_key_name": "Authorization",
  "token_value": "Bearer {authorization}",
  "secrets": [],
  "global_base_url": "https://api.hubapi.com",
  "global_headers": {},
  "edit_operations": [],
  "uuid": "848630f0-4ffa-4696-a2ce-06c193644ec0",
  "api_endpoints": [
    {
      "name": "post-/crm/objects/v3/{objectType}/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_hubspot_crm_records",
        "description": {
          "tagline": "Retrieve HubSpot CRM records by ID or unique property.",
          "detailed": "Use this tool to fetch HubSpot CRM records by specifying a record ID or a custom unique value property using the `idProperty` parameter."
        },
        "return_annotation": "Retrieved CRM records data.",
        "arguments": [
          {
            "name": "crm_object_type",
            "alternative_names": [
              "hubspot_object_type",
              "crm_record_type"
            ],
            "description": "The type of CRM object to retrieve (e.g., contacts, companies).",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "record_retrieval_details",
            "alternative_names": [
              "crm_record_details",
              "hubspot_record_query"
            ],
            "description": "A JSON object with properties, idProperty, inputs, and propertiesWithHistory for specifying record retrieval details.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_only_archived_records",
            "alternative_names": [
              "fetch_archived_only",
              "include_archived_only"
            ],
            "description": "Set true to return only archived records; false to return unarchived records.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/objects/v3/{objectType}/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of appointments by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "put-/crm/objects/v3/{objectType}/{objectId}/associations/{toObjectType}/{toObjectId}/{associationType}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_object_association",
        "description": {
          "tagline": "Create an association between two CRM objects in HubSpot.",
          "detailed": "Use this tool to link two objects in HubSpot CRM by specifying their types, IDs, and the type of association. This is useful for connecting related records, such as associating a contact with a specific company or deal."
        },
        "return_annotation": "Information about the created association.",
        "arguments": [
          {
            "name": "source_object_type",
            "alternative_names": [
              "primary_object_type",
              "initial_object_type"
            ],
            "description": "Type of the source object. Specify the CRM object type, such as 'contact', 'company', or 'deal'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "source_object_id",
            "alternative_names": [
              "primary_object_id",
              "base_object_id"
            ],
            "description": "The ID of the primary object to associate in HubSpot. This should be a valid string representing the CRM object's unique identifier.",
            "endpoint_argument_name": "objectId"
          },
          {
            "name": "target_object_type",
            "alternative_names": [
              "related_object_type",
              "destination_object_type"
            ],
            "description": "The type of the target object to associate. Examples include 'contact', 'company', or 'deal'.",
            "endpoint_argument_name": "toObjectType"
          },
          {
            "name": "target_object_id",
            "alternative_names": [
              "destination_object_id",
              "linked_object_id"
            ],
            "description": "The ID of the target object to associate with. This is the object you want to link to the main object in HubSpot CRM.",
            "endpoint_argument_name": "toObjectId"
          },
          {
            "name": "association_type",
            "alternative_names": [
              "type_of_association",
              "association_kind"
            ],
            "description": "Specifies the type of association to create between the objects, such as 'contact_to_company'.",
            "endpoint_argument_name": "associationType"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/objects/v3/{objectType}/{objectId}/associations/{toObjectType}/{toObjectId}/{associationType}",
      "tags": [
        "Associations"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "objectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "associationType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/objects/v3/{objectType}/{objectId}/associations/{toObjectType}/{toObjectId}/{associationType}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_crm_association",
        "description": {
          "tagline": "Remove associations between CRM objects.",
          "detailed": "This tool removes the association between two CRM objects based on specified types and IDs. Use it when you need to delete a relationship or link between specific CRM entities."
        },
        "return_annotation": "Indication of association removal success.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "entity_type",
              "primary_object_type"
            ],
            "description": "Specifies the type of the primary CRM object (e.g., 'contact', 'company').",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "source_object_id",
            "alternative_names": [
              "origin_object_id",
              "initial_object_id"
            ],
            "description": "The unique identifier of the source object whose association is to be removed.",
            "endpoint_argument_name": "objectId"
          },
          {
            "name": "target_object_type",
            "alternative_names": [
              "target_entity_type",
              "linked_object_type"
            ],
            "description": "Specifies the type of the target CRM object to unlink. Examples include 'contact', 'company', etc.",
            "endpoint_argument_name": "toObjectType"
          },
          {
            "name": "target_object_id",
            "alternative_names": [
              "linked_object_id",
              "destination_object_id"
            ],
            "description": "The ID of the target object to unlink from the source object. This must be a string representing the unique identifier.",
            "endpoint_argument_name": "toObjectId"
          },
          {
            "name": "association_type",
            "alternative_names": [
              "relationship_type",
              "linkage_kind"
            ],
            "description": "The type of association between the CRM objects to be removed. Specify the nature of the relationship, such as 'contact-to-company'.",
            "endpoint_argument_name": "associationType"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/objects/v3/{objectType}/{objectId}/associations/{toObjectType}/{toObjectId}/{associationType}",
      "tags": [
        "Associations"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "objectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "associationType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/objects/v3/{objectType}/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_multiple_hubspot_appointments",
        "description": {
          "tagline": "Update multiple appointments in HubSpot CRM.",
          "detailed": "Use this tool to update multiple appointments by their internal IDs or unique property values within HubSpot CRM."
        },
        "return_annotation": "Confirmation of updated appointments.",
        "arguments": [
          {
            "name": "hubspot_object_type",
            "alternative_names": [
              "entity_type",
              "crm_entity_type"
            ],
            "description": "Specify the type of HubSpot CRM object to update, e.g., 'appointments'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "appointment_updates",
            "alternative_names": [
              "appointments_payload",
              "update_data"
            ],
            "description": "A JSON object containing an array of appointment updates, each with properties like 'id', 'idProperty', 'objectWriteTraceId', and 'properties'.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/objects/v3/{objectType}/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of appointments by internal ID, or unique property values",
      "description": "Update multiple appointments using their internal IDs or unique property values.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/objects/v3/{objectType}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_appointments_data",
        "description": {
          "tagline": "Retrieve a page of appointments from HubSpot CRM.",
          "detailed": "Fetches appointment details using the specified properties to control the data returned. Useful for accessing and managing CRM appointment information."
        },
        "return_annotation": "A page of appointment details from HubSpot CRM.",
        "arguments": [
          {
            "name": "appointment_object_type",
            "alternative_names": [
              "appointment_type",
              "object_type"
            ],
            "description": "The type of HubSpot object to be queried, specifically for appointments.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "results_limit",
            "alternative_names": [
              "max_results_per_page",
              "page_size_limit"
            ],
            "description": "Specify the maximum number of results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "continuation_token"
            ],
            "description": "Token indicating the last successfully read resource to continue pagination.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "appointment_properties_to_return",
            "alternative_names": [
              "properties_list",
              "response_properties"
            ],
            "description": "A list of property names to include in the response. Properties not present on the requested objects are ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "property_history_list"
            ],
            "description": "List properties to return with their history of values. Reduces max results per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associated_object_types",
            "alternative_names": [
              "get_associated_ids_for_objects",
              "associated_object_types"
            ],
            "description": "A list of object types to retrieve associated IDs for. If specified associations don't exist, they will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "only_archived_results",
            "alternative_names": [
              "fetch_only_archived_results",
              "return_only_archived_data"
            ],
            "description": "Set to true to return only results that have been archived.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/objects/v3/{objectType}",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of appointments. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of appointments that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of appointments that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/objects/v3/{objectType}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_crm_appointment",
        "description": {
          "tagline": "Create an appointment in the CRM with specified properties.",
          "detailed": "Use this tool to schedule a new appointment within the CRM system. It requires the necessary properties for the appointment and returns the created appointment object along with its ID."
        },
        "return_annotation": "A copy of the created appointment object, including its ID.",
        "arguments": [
          {
            "name": "appointment_object_type",
            "alternative_names": [
              "crm_object_type",
              "appointment_type"
            ],
            "description": "Specifies the type of CRM object to create. For appointments, this should be 'appointment'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "appointment_details",
            "alternative_names": [
              "appointment_data",
              "appointment_info"
            ],
            "description": "A JSON object containing key-value pairs for appointment properties and associations details like category and type ID.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/objects/v3/{objectType}",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a appointment with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard appointments is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "associations",
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"associations\",\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/objects/v3/{objectType}/batch/create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_appointments",
        "description": {
          "tagline": "Create multiple appointments in one request.",
          "detailed": "This tool facilitates the creation of multiple appointments in a single API call. Use it when you need to schedule several appointments efficiently without making multiple requests."
        },
        "return_annotation": "Confirmation of created appointments.",
        "arguments": [
          {
            "name": "appointment_object_type",
            "alternative_names": [
              "appointment_type",
              "object_type_for_appointments"
            ],
            "description": "Specify the type of CRM object for the appointments, typically 'appointments'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "appointment_details",
            "alternative_names": [
              "appointments_data",
              "batch_appointments_input"
            ],
            "description": "A JSON object containing details for multiple appointments. Includes properties like associations, object trace ID, and other appointment specifics.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/objects/v3/{objectType}/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of appointments",
      "description": "Create multiple appointments in a single request.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/objects/v3/{objectType}/{objectId}/associations/{toObjectType}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_associations_in_hubspot",
        "description": {
          "tagline": "Retrieve associations between HubSpot CRM objects.",
          "detailed": "This tool is used to get the associations between specified HubSpot CRM objects. Useful for identifying relationships between different objects in the CRM, such as contacts, deals, or companies."
        },
        "return_annotation": "Details of the associations between HubSpot CRM objects.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "crm_object_type",
              "source_object_type"
            ],
            "description": "Specifies the type of HubSpot CRM object (e.g., contact, deal, company) whose associations you want to retrieve.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "hubspot_object_id",
            "alternative_names": [
              "crm_object_id",
              "entity_object_id"
            ],
            "description": "The unique identifier for the HubSpot CRM object whose associations are being requested.",
            "endpoint_argument_name": "objectId"
          },
          {
            "name": "target_object_type",
            "alternative_names": [
              "destination_object_type",
              "related_object_type"
            ],
            "description": "The type of the target object to which the association is being found. Specify the object type like 'contact', 'deal', 'company', etc.",
            "endpoint_argument_name": "toObjectType"
          },
          {
            "name": "paging_offset_after",
            "alternative_names": [
              "pagination_after_cursor",
              "continue_from_after"
            ],
            "description": "A string used for pagination to get the next set of results after the specified cursor. Leave empty or omit for the first set of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "max_results",
            "alternative_names": [
              "results_limit",
              "number_of_results"
            ],
            "description": "Specifies the maximum number of associations to return. Provide an integer value to limit the results.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "include_full_associations",
            "alternative_names": [
              "include_all_associations",
              "add_detailed_associations"
            ],
            "description": "Set to true to include full associations in the response, otherwise only basic associations will be returned.",
            "endpoint_argument_name": "includeFA"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/objects/v3/{objectType}/{objectId}/associations/{toObjectType}",
      "tags": [
        "Associations"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": 500,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "includeFA",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "objectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/objects/v3/{objectType}/batch/upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_hubspot_records",
        "description": {
          "tagline": "Create or update HubSpot CRM records in batch mode.",
          "detailed": "Use this tool to create or update records in HubSpot CRM by specifying a unique property value. The `idProperty` parameter helps identify records uniquely for batch operations."
        },
        "return_annotation": "Confirmation of record creation or update in HubSpot CRM.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "hubspot_object_type",
              "crm_object_type"
            ],
            "description": "The type of object in HubSpot CRM (e.g., contacts, companies) to create or update. Specify the object type relevant to your operation.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "batch_records_data",
            "alternative_names": [
              "records_payload",
              "upsert_data"
            ],
            "description": "JSON array of records to create or update. Each record must include 'idProperty', 'objectWriteTraceId', 'id', and 'properties'.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/objects/v3/{objectType}/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of appointments by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/objects/v3/{objectType}/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_appointments",
        "description": {
          "tagline": "Search for appointments based on specified criteria.",
          "detailed": "Use this tool to search for appointments in the CRM by specifying various criteria. It is useful for finding specific appointments or lists based on search conditions."
        },
        "return_annotation": "Appointment search results based on criteria.",
        "arguments": [
          {
            "name": "appointment_search_criteria_type",
            "alternative_names": [
              "criteria_object_type",
              "appointment_object_type"
            ],
            "description": "Specify the type of object for the appointment search, such as 'appointments'. This determines the domain within the CRM to be searched.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "appointment_search_criteria",
            "alternative_names": [
              "appointment_search_filters",
              "appointment_query_parameters"
            ],
            "description": "JSON object containing search filters like query string, result limit, pagination, sorting, properties to include, and filter groups.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/objects/v3/{objectType}/search",
      "tags": [
        "Search"
      ],
      "summary": "Search for appointments using filters, sorting, and pagination to retrieve specific records.",
      "description": "Search for appointments based on specified criteria.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              },
              "required": [
                "after",
                "filterGroups",
                "limit",
                "properties",
                "sorts"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"after\",\n          \"filterGroups\",\n          \"limit\",\n          \"properties\",\n          \"sorts\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/objects/v3/{objectType}/batch/archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_multiple_appointments",
        "description": {
          "tagline": "Archive multiple appointments using their IDs.",
          "detailed": ""
        },
        "return_annotation": "Confirmation of archived appointments.",
        "arguments": [
          {
            "name": "appointment_object_type",
            "alternative_names": [
              "appointment_type_identifier",
              "appointment_category"
            ],
            "description": "The type of object to be archived, typically 'appointments' for this endpoint.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "appointments_to_archive",
            "alternative_names": [
              "appointments_ids",
              "appointments_list"
            ],
            "description": "A JSON array of appointment objects, each containing an 'id' field, representing the IDs of appointments to be archived.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/objects/v3/{objectType}/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of appointments by ID",
      "description": "Archive multiple appointments using their IDs.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/objects/v3/{objectType}/gdpr-delete",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "gdpr_delete_object",
        "description": {
          "tagline": "Delete CRM objects in compliance with GDPR.",
          "detailed": "This tool removes specified CRM objects in accordance with GDPR regulations. It's used when you need to ensure data is deleted to comply with GDPR requests."
        },
        "return_annotation": "Confirmation of GDPR-related object deletion.",
        "arguments": [
          {
            "name": "object_type_for_gdpr_deletion",
            "alternative_names": [
              "gdpr_deletion_object_type",
              "crm_object_type_for_gdpr"
            ],
            "description": "Specify the type of CRM object to delete (e.g., contacts, companies) for GDPR compliance.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "object_id",
            "alternative_names": [
              "crm_object_id",
              "entity_id"
            ],
            "description": "The unique identifier for the CRM object to be deleted under GDPR compliance.",
            "endpoint_argument_name": "objectId"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "distinct_property_name"
            ],
            "description": "Specify a unique property name for the object to be deleted under GDPR.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/objects/v3/{objectType}/gdpr-delete",
      "tags": [
        "GDPR"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "The name of a property whose values are unique for this object"
            },
            "schema_required": false
          },
          {
            "name": "objectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"objectId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"The name of a property whose values are unique for this object\"\n          },\n          \"objectId\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "get-/crm/objects/v3/{objectType}/{objectId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_crm_object",
        "description": {
          "tagline": "Fetch CRM object details by ID or unique property.",
          "detailed": "Use this tool to retrieve details of a CRM object by specifying the object type and ID. You can control the properties returned using query parameters."
        },
        "return_annotation": "Details of the CRM object requested.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "crm_object_type",
              "entity_type"
            ],
            "description": "Specifies the type of CRM object to retrieve, such as \"contacts\", \"companies\", or \"deals\".",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "object_id",
            "alternative_names": [
              "crm_object_id",
              "identifier"
            ],
            "description": "The ID of the CRM object to retrieve. This can be the internal object ID or a unique property value specified by the id_property.",
            "endpoint_argument_name": "objectId"
          },
          {
            "name": "properties_list",
            "alternative_names": [
              "return_properties",
              "properties_to_retrieve"
            ],
            "description": "An array of property names to be returned in the response. If any specified properties are not present, they will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_with_past_values"
            ],
            "description": "List properties to be returned with their historical values. If a property doesn't exist, it'll be ignored.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "Comma-separated list of object types to retrieve associated IDs for. Missing associations are ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_identifier_name"
            ],
            "description": "Specify the name of a property with unique values for this object to identify it instead of the default ID.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "fetch_only_archived",
              "include_archived_only"
            ],
            "description": "Set to true to return only archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/objects/v3/{objectType}/{objectId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{appointmentId}`. `{appointmentId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "objectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/objects/v3/{objectType}/{objectId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_crm_object",
        "description": {
          "tagline": "Delete a CRM object and move it to the recycling bin.",
          "detailed": "Use this tool to delete an object in HubSpot CRM by specifying the object type and ID. The object will be moved to the recycling bin."
        },
        "return_annotation": "Confirmation of object deletion.",
        "arguments": [
          {
            "name": "crm_object_type",
            "alternative_names": [
              "crm_entity_type",
              "crm_item_type"
            ],
            "description": "Specify the type of CRM object to delete, such as 'contact', 'deal', or 'company'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "crm_object_id",
            "alternative_names": [
              "object_id_reference",
              "crm_item_id"
            ],
            "description": "The unique identifier for the CRM object to be deleted. This ID specifies which object will be moved to the recycling bin.",
            "endpoint_argument_name": "objectId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/objects/v3/{objectType}/{objectId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{appointmentId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "objectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/objects/v3/{objectType}/{objectId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_hubspot_object",
        "description": {
          "tagline": "Update specific properties of a HubSpot CRM object.",
          "detailed": "This tool performs a partial update of an object in HubSpot CRM, identified by the internal object ID or a unique property value. It overwrites provided property values, errors out on read-only or non-existent properties, and allows clearing values by passing an empty string."
        },
        "return_annotation": "Confirmation of the object's partial update status.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "crm_object_type",
              "object_category"
            ],
            "description": "The type of CRM object to update (e.g., contacts, companies).",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "object_identifier",
            "alternative_names": [
              "identifier",
              "crm_object_id"
            ],
            "description": "A string representing the internal object ID or unique property value used to identify the HubSpot CRM object for updating.",
            "endpoint_argument_name": "objectId"
          },
          {
            "name": "properties_to_update",
            "alternative_names": [
              "crm_object_properties",
              "hubspot_properties_update"
            ],
            "description": "A JSON object with key-value pairs representing the properties of the HubSpot CRM object to be updated. Key names should match the property's unique names in the CRM system.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "unique_value_property"
            ],
            "description": "The name of a property whose values are unique for the object, used to identify the object for the update.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/objects/v3/{objectType}/{objectId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{appointmentId}`or optionally a unique property value as specified by the `idProperty` query param. `{appointmentId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "objectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/objects/v3/{objectType}/merge",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "merge_hubspot_crm_objects",
        "description": {
          "tagline": "Merge two HubSpot CRM objects into a single entity.",
          "detailed": "Use this tool to merge two CRM objects of a specified type within HubSpot. It combines duplicate records into a single object, streamlining the data management process."
        },
        "return_annotation": "Confirmation of merged HubSpot CRM objects.",
        "arguments": [
          {
            "name": "hubspot_object_type",
            "alternative_names": [
              "crm_object_type",
              "record_type"
            ],
            "description": "Specify the type of HubSpot CRM object to merge, such as contact, company, or deal.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "object_id_to_merge",
            "alternative_names": [
              "id_to_merge",
              "secondary_object_id"
            ],
            "description": "The ID of the HubSpot CRM object to be merged into the primary object. This should be a string identifier.",
            "endpoint_argument_name": "objectIdToMerge"
          },
          {
            "name": "primary_object_id",
            "alternative_names": [
              "main_object_id",
              "target_object_id"
            ],
            "description": "The ID of the primary HubSpot CRM object to retain post-merge.",
            "endpoint_argument_name": "primaryObjectId"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/objects/v3/{objectType}/merge",
      "tags": [
        "Public_Object"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "objectIdToMerge",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "primaryObjectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"objectIdToMerge\",\n          \"primaryObjectId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"objectIdToMerge\": {\n            \"type\": \"string\"\n          },\n          \"primaryObjectId\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "post-/crm/v3/associations/{fromObjectType}/{toObjectType}/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_associations_hubspot",
        "description": {
          "tagline": "Batch create associations between object types in HubSpot CRM.",
          "detailed": "This tool is used to batch create associations between two specified object types in HubSpot CRM, such as associating multiple contacts with companies in one request."
        },
        "return_annotation": "Confirmation of batch associations creation.",
        "arguments": [
          {
            "name": "from_object_type",
            "alternative_names": [
              "source_object_type",
              "initial_object_type"
            ],
            "description": "The type of the source object for the association (e.g., 'contact', 'company').",
            "endpoint_argument_name": "fromObjectType"
          },
          {
            "name": "target_object_type",
            "alternative_names": [
              "destination_object_type",
              "associated_object_type"
            ],
            "description": "The type of the object that the associations will point to (e.g., 'contacts', 'companies').",
            "endpoint_argument_name": "toObjectType"
          },
          {
            "name": "batch_associations_request",
            "alternative_names": [
              "associations_request_body",
              "hubspot_associations_data"
            ],
            "description": "JSON object containing an array of associations. Each entry should specify 'from' and 'to' object IDs and association 'type'.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/associations/{fromObjectType}/{toObjectType}/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "fromObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "from": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    },
                    "type": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "from",
                      "to",
                      "type"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"from\",\n                \"to\",\n                \"type\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"from\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"type\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"example\": {\n                \"from\": {\n                  \"id\": \"53628\"\n                },\n                \"to\": {\n                  \"id\": \"12726\"\n                },\n                \"type\": \"contact_to_company\"\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/associations/{fromObjectType}/{toObjectType}/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "batch_read_associations",
        "description": {
          "tagline": "Retrieve batch associations between CRM object types in HubSpot.",
          "detailed": "This tool retrieves a batch of association data between specified CRM object types in HubSpot, such as contacts to companies. Use it to efficiently access multiple associations at once."
        },
        "return_annotation": "Batch of association data between object types.",
        "arguments": [
          {
            "name": "source_object_type",
            "alternative_names": [
              "origin_object_type",
              "initial_object_type"
            ],
            "description": "The CRM object type from which the associations originate, such as 'contacts' or 'deals'. Specify a valid CRM object type.",
            "endpoint_argument_name": "fromObjectType"
          },
          {
            "name": "destination_object_type",
            "alternative_names": [
              "target_object_type",
              "associated_object_type"
            ],
            "description": "Specify the CRM object type to associate with, such as 'contacts' or 'companies'.",
            "endpoint_argument_name": "toObjectType"
          },
          {
            "name": "batch_association_requests",
            "alternative_names": [
              "association_requests_batch",
              "batch_of_association_queries"
            ],
            "description": "A JSON array containing objects with IDs to retrieve the associations for. This enables batch retrieval of association data between specified CRM object types.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/associations/{fromObjectType}/{toObjectType}/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "fromObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/associations/{fromObjectType}/{toObjectType}/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "hubspot_batch_archive_associations",
        "description": {
          "tagline": "Batch archive associations in HubSpot CRM.",
          "detailed": "This tool is used to archive multiple associations between specified object types in HubSpot CRM in a single batch operation. Call this tool when you need to efficiently remove associations between records, such as contacts and companies, or deals and tickets, in bulk."
        },
        "return_annotation": "Confirmation of batch association archive in CRM.",
        "arguments": [
          {
            "name": "source_object_type",
            "alternative_names": [
              "source_type",
              "initial_object_type"
            ],
            "description": "The type of the source object for the associations to be archived (e.g., 'contacts', 'companies').",
            "endpoint_argument_name": "fromObjectType"
          },
          {
            "name": "target_object_type",
            "alternative_names": [
              "destination_object_type",
              "related_object_type"
            ],
            "description": "Specify the type of the object to which the association is directed, e.g., 'company', 'deal'.",
            "endpoint_argument_name": "toObjectType"
          },
          {
            "name": "association_batches",
            "alternative_names": [
              "batch_association_inputs",
              "hubspot_association_entries"
            ],
            "description": "JSON array containing objects with 'from', 'to', and 'type' for each association to archive. Each object in the array should specify the 'from' and 'to' object IDs and the type of association as strings.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/associations/{fromObjectType}/{toObjectType}/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "fromObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "from": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    },
                    "type": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "from",
                      "to",
                      "type"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"from\",\n                \"to\",\n                \"type\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"from\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"type\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"example\": {\n                \"from\": {\n                  \"id\": \"53628\"\n                },\n                \"to\": {\n                  \"id\": \"12726\"\n                },\n                \"type\": \"contact_to_company\"\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/associations/{fromObjectType}/{toObjectType}/types_getAll",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_association_types",
        "description": {
          "tagline": "Get association types between two object types in HubSpot CRM.",
          "detailed": "Use this tool to retrieve all association types between specified object types in HubSpot CRM. This is useful when needing to understand the relationships between different entities in the CRM system."
        },
        "return_annotation": "The association types between two object types in HubSpot CRM.",
        "arguments": [
          {
            "name": "source_object_type",
            "alternative_names": [
              "origin_object_type",
              "initial_object_type"
            ],
            "description": "Specifies the source object type in HubSpot CRM from which associations are retrieved (e.g., 'contact', 'deal').",
            "endpoint_argument_name": "fromObjectType"
          },
          {
            "name": "target_object_type",
            "alternative_names": [
              "object_type_to_associate",
              "relationship_target_object_type"
            ],
            "description": "Specify the type of the destination object to retrieve association types for. These are the related entities in HubSpot CRM.",
            "endpoint_argument_name": "toObjectType"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/associations/{fromObjectType}/{toObjectType}/types",
      "tags": [
        "Types"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "fromObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/calls/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_of_calls",
        "description": {
          "tagline": "Create a batch of calls with specified properties and associations.",
          "detailed": "This tool is used to create multiple calls at once in HubSpot CRM, specifying properties for each call and defining associations with other CRM records as needed."
        },
        "return_annotation": "Confirmation and details of the created calls batch.",
        "arguments": [
          {
            "name": "batch_call_data",
            "alternative_names": [
              "call_batch_details",
              "call_entries"
            ],
            "description": "JSON object containing details for each call, including properties and associations. The `inputs` array specifies each call with its properties and any associations to CRM records.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/calls/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of calls",
      "description": "Create a batch of calls. The `inputs` array can contain a `properties` object to define property values for each record, along with an `associations` array to define [associations](https://developers.hubspot.com/docs/guides/api/crm/associations/associations-v4) with other CRM records.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/calls/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_call_records",
        "description": {
          "tagline": "Create or update call records in HubSpot CRM.",
          "detailed": "This tool allows you to create or update call records in HubSpot CRM. It uses a unique property value specified by the `idProperty` query parameter to identify records that need to be updated or created. Use this tool when you need to batch upsert call records."
        },
        "return_annotation": "Confirmation of call records creation or update.",
        "arguments": [
          {
            "name": "call_records_payload",
            "alternative_names": [
              "calls_data",
              "call_records_data"
            ],
            "description": "A JSON array of call records to be upserted, including unique identifiers and properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/calls/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of calls by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/calls/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_calls_batch",
        "description": {
          "tagline": "Retrieve a batch of calls by ID from HubSpot CRM.",
          "detailed": "Use this tool to fetch details of multiple calls from HubSpot CRM by providing their IDs. It returns information about each call in the batch."
        },
        "return_annotation": "Batch of call details.",
        "arguments": [
          {
            "name": "calls_request_body",
            "alternative_names": [
              "batch_calls_payload",
              "calls_batch_data"
            ],
            "description": "A JSON object containing arrays for properties, inputs, and settings for retrieving calls. It includes propertiesWithHistory for key-value pairs to set call properties and their histories, idProperty for custom unique identifiers, inputs array with call IDs, and properties array for additional settings.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_only_archived",
            "alternative_names": [
              "only_archived_calls",
              "archived_calls_only"
            ],
            "description": "Set to 'true' to return only archived calls, 'false' to exclude them.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/calls/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of calls by internal ID, or unique property values",
      "description": "Retrieve a batch of calls by ID.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/calls/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_batch_calls",
        "description": {
          "tagline": "Update multiple calls in HubSpot CRM by ID.",
          "detailed": "This tool updates a batch of call records in HubSpot CRM using their IDs. Use it to modify details of multiple calls efficiently."
        },
        "return_annotation": "Confirmation of batch calls update.",
        "arguments": [
          {
            "name": "batch_update_request",
            "alternative_names": [
              "update_request_data",
              "batch_calls_data"
            ],
            "description": "JSON object containing an array of call updates with 'id', 'idProperty', 'objectWriteTraceId', and 'properties'.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/calls/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of calls by internal ID, or unique property values",
      "description": "Update a batch of calls by ID.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/calls_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_calls_page",
        "description": {
          "tagline": "Retrieve a page of call records from HubSpot CRM.",
          "detailed": "This tool is used to retrieve a page of call records from the HubSpot CRM. The response can be customized by specifying the desired call properties through the `properties` query parameter."
        },
        "return_annotation": "A page of call details from the CRM system.",
        "arguments": [
          {
            "name": "results_per_page",
            "alternative_names": [
              "max_results_page",
              "results_limit"
            ],
            "description": "The maximum number of call records to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "paging_token"
            ],
            "description": "The paging cursor token from the last successfully read resource for retrieving the next page of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "call_properties",
            "alternative_names": [
              "call_fields",
              "call_attributes"
            ],
            "description": "A list of properties to include in the response, such as call date, duration, etc.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_history"
            ],
            "description": "A list of properties to return with historical values. Note: Reduces max calls per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "Specify object types to retrieve associated IDs for. Comma-separated list. Non-existing associations are ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "archived_results_only",
              "fetch_only_archived"
            ],
            "description": "Set to true to return only archived call records. False will include non-archived records.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/calls",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of calls. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of calls that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of calls that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/calls_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_call",
        "description": {
          "tagline": "Create a call in HubSpot with specified properties.",
          "detailed": "Use this tool to create a call in HubSpot CRM with specified properties. It returns the newly created call details, including its ID."
        },
        "return_annotation": "Details of the created call, including its ID.",
        "arguments": [
          {
            "name": "call_properties",
            "alternative_names": [
              "call_details",
              "call_data"
            ],
            "description": "JSON object specifying call properties and associations. Includes key-value pairs for call settings and association details like types and IDs.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/calls",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a call with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard calls is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/calls/{callId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_call_details",
        "description": {
          "tagline": "Retrieve details of a call using its ID in HubSpot CRM.",
          "detailed": "This tool fetches the details of a call object in HubSpot CRM using the call ID. It allows optional control over which properties of the call are returned. Use this tool to retrieve specific information on call objects by their unique identification."
        },
        "return_annotation": "Call details by specified ID.",
        "arguments": [
          {
            "name": "call_identifier",
            "alternative_names": [
              "unique_call_id",
              "call_reference"
            ],
            "description": "The unique identifier for the call. This can be an internal object ID or a unique property value as specified.",
            "endpoint_argument_name": "callId"
          },
          {
            "name": "return_properties",
            "alternative_names": [
              "fetch_properties",
              "select_properties"
            ],
            "description": "Comma-separated list of properties to return in the response. Ignored if not present on requested object.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "history_properties",
              "historical_properties"
            ],
            "description": "Comma-separated list of properties to return with history. Ignores non-existent properties.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "Specify object types to retrieve associated IDs for. Use comma-separated values.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "identifier_property",
              "unique_identifier"
            ],
            "description": "Unique property name used to identify the call object in HubSpot CRM.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "only_archived_results",
            "alternative_names": [
              "archived_results_only",
              "filter_to_archived"
            ],
            "description": "Specify `True` to return only archived results, otherwise `False`.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/calls/{callId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{callId}`. `{callId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "callId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/calls/{callId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_call_in_hubspot",
        "description": {
          "tagline": "Archive a call in HubSpot CRM by moving it to the recycle bin.",
          "detailed": "Use this tool to move a specific call, identified by its `callId`, to the recycling bin in HubSpot CRM."
        },
        "return_annotation": "Confirmation that the call has been archived.",
        "arguments": [
          {
            "name": "call_identifier",
            "alternative_names": [
              "call_id",
              "call_reference"
            ],
            "description": "The unique identifier for the call to be archived in HubSpot CRM.",
            "endpoint_argument_name": "callId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/calls/{callId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{callId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "callId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/calls/{callId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_call_info",
        "description": {
          "tagline": "Update details of a specific call record in the CRM.",
          "detailed": "Use this tool to perform a partial update of a call object in the HubSpot CRM using its `{callId}` or a unique property. Only provided properties will be updated. Read-only and non-existent properties will cause errors."
        },
        "return_annotation": "Details of the updated call object.",
        "arguments": [
          {
            "name": "call_identifier",
            "alternative_names": [
              "call_unique_id",
              "call_object_id"
            ],
            "description": "The identifier for the call object you wish to update. This can be the internal call ID or a unique value defined by the `idProperty`.",
            "endpoint_argument_name": "callId"
          },
          {
            "name": "call_update_properties",
            "alternative_names": [
              "call_update_fields",
              "call_update_data"
            ],
            "description": "JSON object with key-value pairs for call property updates. Use property names as keys.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "distinct_property_key"
            ],
            "description": "The name of a unique property for identifying the call object, other than the default ID.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/calls/{callId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{callId}`or optionally a unique property value as specified by the `idProperty` query param. `{callId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "callId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/calls/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_calls_batch",
        "description": {
          "tagline": "Archive a batch of calls by their IDs.",
          "detailed": "Use this tool to archive multiple calls in HubSpot CRM by providing their IDs. Archived calls can be restored within 90 days, but call recordings are permanently deleted. Refer to HubSpot's documentation for more details on restoring activities."
        },
        "return_annotation": "Confirmation of call batch archiving.",
        "arguments": [
          {
            "name": "call_ids_to_archive",
            "alternative_names": [
              "ids_of_calls_to_archive",
              "calls_to_delete_ids"
            ],
            "description": "A JSON array of objects, each containing the \"id\" key with the call's ID as a string. These are the IDs of calls to be archived.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/calls/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of calls by ID",
      "description": "Archive a batch of calls by ID. Deleted calls can be restored within 90 days of being deleted, but call recordings recording will be permanently deleted. Learn more about [restoring activity records](https://knowledge.hubspot.com/records/restore-deleted-activity-in-a-record).",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/calls/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_calls_hubspot",
        "description": {
          "tagline": "Search and filter call records in HubSpot CRM.",
          "detailed": "Use this tool to search for calls in HubSpot CRM by applying filters on properties, searching through associations, and sorting the results. Ideal for retrieving specific call records from your HubSpot CRM."
        },
        "return_annotation": "Results of the call search from HubSpot CRM.",
        "arguments": [
          {
            "name": "search_criteria",
            "alternative_names": [
              "call_search_parameters",
              "query_parameters"
            ],
            "description": "JSON object containing query, limit, sorting, filters, and properties for searching calls. Specify max results, properties to include, and sort order. Use filters to narrow down results.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/calls/search",
      "tags": [
        "Search"
      ],
      "summary": "Search for calls",
      "description": "Search for calls by filtering on properties, searching through associations, and sorting results. Learn more about [CRM search](https://developers.hubspot.com/docs/guides/api/crm/search#make-a-search-request).",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/carts/batch/archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_carts_batch",
        "description": {
          "tagline": "Archive multiple carts by ID in a batch operation.",
          "detailed": "Use this tool to archive a batch of shopping carts by their IDs in HubSpot CRM. This is useful for managing and organizing outdated or completed carts."
        },
        "return_annotation": "Confirmation of carts archived successfully.",
        "arguments": [
          {
            "name": "cart_ids_to_archive",
            "alternative_names": [
              "carts_to_archive",
              "cart_ids_batch"
            ],
            "description": "A JSON array of cart IDs to be archived. Each item should be an object with the key 'id' and its value as a string representing the cart ID.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/carts/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of carts by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/carts/batch/create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_of_carts",
        "description": {
          "tagline": "Create a batch of carts efficiently in HubSpot CRM.",
          "detailed": "Use this tool to create multiple shopping carts at once within HubSpot CRM. Ideal for managing cart data in bulk efficiently."
        },
        "return_annotation": "Details of the created carts batch.",
        "arguments": [
          {
            "name": "carts_batch_data",
            "alternative_names": [
              "cart_creation_data",
              "batch_cart_input"
            ],
            "description": "JSON array detailing the carts to create. Includes associations, object IDs, and properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/carts/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of carts",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/carts",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_cart_details",
        "description": {
          "tagline": "Retrieve detailed information about shopping carts.",
          "detailed": "Use this tool to get information about shopping carts, with options to specify which details to retrieve via query parameters."
        },
        "return_annotation": "Returns details about a page of shopping carts.",
        "arguments": [
          {
            "name": "max_results_per_page",
            "alternative_names": [
              "results_display_limit",
              "page_results_count"
            ],
            "description": "Maximum number of results to display per page when retrieving cart details.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "pagination_token"
            ],
            "description": "The paging cursor token for retrieving the next set of results. Use the `paging.next.after` from the previous response for more results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "cart_properties_to_return",
            "alternative_names": [
              "cart_attributes_to_fetch",
              "returned_cart_details"
            ],
            "description": "List of properties to include in the response for each cart. Ignored if missing on objects.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history_list",
            "alternative_names": [
              "properties_history_list",
              "historical_properties_list"
            ],
            "description": "List of properties to return with their history in the response. Reduces max number of carts per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_ids",
              "linked_object_types"
            ],
            "description": "List object types to retrieve associated IDs for. Ignored if associations don't exist.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived",
            "alternative_names": [
              "show_archived_results",
              "include_archived_carts"
            ],
            "description": "Set to true to return only archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/carts",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of carts. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of carts that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of carts that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/carts",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_cart_hubspot_crm",
        "description": {
          "tagline": "Create a cart and retrieve its details including ID.",
          "detailed": "Use this tool to create a new cart in HubSpot CRM with specified properties. It returns a detailed cart object including its unique ID. Ideal for setting up new customer carts."
        },
        "return_annotation": "Cart object with details and ID.",
        "arguments": [
          {
            "name": "cart_details",
            "alternative_names": [
              "cart_properties",
              "cart_information"
            ],
            "description": "JSON object containing associations and properties for the new cart. Includes optional associations with categories and types, and required key-value properties for the cart itself.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/carts",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a cart with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard carts is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/carts/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_cart_records",
        "description": {
          "tagline": "Retrieve cart records by record ID or custom property.",
          "detailed": "Use this tool to fetch cart records from HubSpot CRM by specifying record IDs or using a custom unique value property. Ideal for accessing detailed cart information."
        },
        "return_annotation": "Details of cart records based on provided IDs.",
        "arguments": [
          {
            "name": "cart_record_request",
            "alternative_names": [
              "cart_query_body",
              "cart_data_parameters"
            ],
            "description": "JSON object containing 'inputs' with record IDs or 'idProperty' for custom retrieval, 'properties' to set values.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "only_archived_results",
            "alternative_names": [
              "fetch_only_archived",
              "retrieve_archived_records"
            ],
            "description": "Set to true to return only archived results. Default is false.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/carts/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of carts by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/carts/batch/upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_cart_records",
        "description": {
          "tagline": "Create or update cart records in HubSpot CRM.",
          "detailed": "Use this tool to create or update cart records based on a unique property value specified by the `idProperty`. Ideal for managing cart data in bulk within the HubSpot CRM."
        },
        "return_annotation": "Confirmation of cart records creation or update.",
        "arguments": [
          {
            "name": "cart_records_data",
            "alternative_names": [
              "carts_upsert_data",
              "batch_carts_payload"
            ],
            "description": "JSON object containing cart records to be created or updated, including unique `idProperty`, `objectWriteTraceId`, `id`, and key-value `properties`.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/carts/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of carts by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/carts/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_carts_batch",
        "description": {
          "tagline": "Update a batch of carts by internal ID or unique properties.",
          "detailed": "Use this tool to update multiple carts in HubSpot CRM by their internal IDs or unique property values. Useful for synchronizing cart information in bulk."
        },
        "return_annotation": "Information about the updated carts.",
        "arguments": [
          {
            "name": "carts_update_data",
            "alternative_names": [
              "update_cart_payload",
              "cart_update_details"
            ],
            "description": "JSON object containing an array of cart updates. Each update includes an `id` (either internal ID or unique property), `idProperty` (name of the unique property), `objectWriteTraceId` (request identifier), and `properties` (key-value pairs for cart properties).",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/carts/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of carts by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/carts/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_hubspot_carts",
        "description": {
          "tagline": "Search for carts in HubSpot CRM.",
          "detailed": "This tool performs a search query to retrieve cart information from HubSpot CRM. It can be used to find specific carts using various search parameters."
        },
        "return_annotation": "Search results for HubSpot CRM carts.",
        "arguments": [
          {
            "name": "search_parameters",
            "alternative_names": [
              "query_parameters",
              "search_filters"
            ],
            "description": "JSON object containing search query, limit, paging token, sorting order, properties to retrieve, and filter groups for cart search.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/carts/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/carts/{cartId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_cart_details",
        "description": {
          "tagline": "Retrieve detailed information of a cart by ID.",
          "detailed": "Use this tool to get detailed information about a specific cart in the HubSpot CRM by providing the cart ID. It allows for optional specification of unique property values and controlled return data."
        },
        "return_annotation": "Detailed information about a specific cart.",
        "arguments": [
          {
            "name": "cart_identifier",
            "alternative_names": [
              "cart_id_value",
              "cart_reference_id"
            ],
            "description": "The unique identifier for the cart. This can be the internal ID or a unique property value specified by the `idProperty` parameter.",
            "endpoint_argument_name": "cartId"
          },
          {
            "name": "return_properties",
            "alternative_names": [
              "response_attributes",
              "output_fields"
            ],
            "description": "List of specific properties to retrieve for the cart. Ignored if properties don't exist.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_past_values",
              "properties_with_value_changes"
            ],
            "description": "Specify properties to retrieve alongside their history of previous values, separated by commas.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "A list of object types to retrieve associated IDs for, such as 'deals' or 'contacts'.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_with_unique_values"
            ],
            "description": "Specify a property name with unique values for the cart object, if not using the default internal ID.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "only_return_archived_results",
            "alternative_names": [
              "archived_items_only",
              "filter_for_archived"
            ],
            "description": "Set to `true` to return only archived results; `false` includes all.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/carts/{cartId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{cartId}`. `{cartId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "cartId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/carts/{cartId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_shopping_cart",
        "description": {
          "tagline": "Delete a shopping cart from HubSpot CRM.",
          "detailed": "Use this tool to move a shopping cart, identified by its `cartId`, to the recycling bin in HubSpot CRM."
        },
        "return_annotation": "Confirmation of cart deletion from CRM.",
        "arguments": [
          {
            "name": "cart_identifier",
            "alternative_names": [
              "cart_id_number",
              "shopping_cart_id"
            ],
            "description": "The unique identifier of the shopping cart to delete from HubSpot CRM. It should be a string.",
            "endpoint_argument_name": "cartId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/carts/{cartId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{cartId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "cartId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/carts/{cartId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_cart_properties",
        "description": {
          "tagline": "Update specific properties of a cart in HubSpot CRM.",
          "detailed": "This tool updates specified properties of a cart identified by `cartId` within HubSpot CRM. It's used to perform partial updates, where provided property values are overwritten, and any attempt to modify read-only or non-existent properties will result in an error. Properties can be cleared by passing an empty string."
        },
        "return_annotation": "Confirmation of cart property updates.",
        "arguments": [
          {
            "name": "cart_identifier",
            "alternative_names": [
              "cart_id",
              "cart_unique_id"
            ],
            "description": "The unique identifier of the cart to be updated. This is required to specify which cart's properties will be modified.",
            "endpoint_argument_name": "cartId"
          },
          {
            "name": "cart_property_updates",
            "alternative_names": [
              "cart_attributes",
              "cart_field_changes"
            ],
            "description": "JSON object with key-value pairs representing the cart properties to update. Keys are property names and values are the new values, or an empty string to clear.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_identifier_property",
            "alternative_names": [
              "unique_property_name",
              "specific_id_property"
            ],
            "description": "The name of the property with unique values for this cart object to identify it.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/carts/{cartId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{cartId}`or optionally a unique property value as specified by the `idProperty` query param. `{cartId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "cartId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/commerce_payments/batch/upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_commerce_payments",
        "description": {
          "tagline": "Create or update unique commerce payment records in HubSpot.",
          "detailed": "Use this tool to create new commerce payment records or update existing ones in HubSpot CRM. The tool identifies records by a unique property value specified by the `idProperty` query parameter."
        },
        "return_annotation": "Confirmation of created or updated payment records.",
        "arguments": [
          {
            "name": "commerce_payment_records",
            "alternative_names": [
              "payment_data_records",
              "batch_payment_records"
            ],
            "description": "A JSON array of records, each with a unique idProperty, including tracing ID, object ID, and key-value properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/commerce_payments/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of commerce payments by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.commercepayments.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/commerce_payments/batch/create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_commerce_payments",
        "description": {
          "tagline": "Create a batch of commerce payments in HubSpot CRM.",
          "detailed": "This tool is used to create a batch of commerce payments in the HubSpot CRM system. It should be called when there's a need to process multiple payment entries at once."
        },
        "return_annotation": "Details of the created commerce payments batch.",
        "arguments": [
          {
            "name": "commerce_payments_batch_data",
            "alternative_names": [
              "batch_payment_data",
              "commerce_payment_inputs"
            ],
            "description": "A JSON object containing an array of payment entries to process. Each entry requires specifics such as 'associations', 'objectWriteTraceId', and 'properties'.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/commerce_payments/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of commerce payments",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.commercepayments.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/commerce_payments/{commercePaymentId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_commerce_payment_details",
        "description": {
          "tagline": "Retrieve details of a specific commerce payment using its ID.",
          "detailed": "Use this tool to obtain detailed information about a commerce payment by specifying its unique ID. This can include any details specified by the `properties` query parameter, if required."
        },
        "return_annotation": "Detailed information about a specific commerce payment.",
        "arguments": [
          {
            "name": "commerce_payment_id",
            "alternative_names": [
              "payment_id",
              "transaction_id"
            ],
            "description": "The unique identifier for the commerce payment to retrieve details for. It corresponds to the internal object ID by default.",
            "endpoint_argument_name": "commercePaymentId"
          },
          {
            "name": "return_properties",
            "alternative_names": [
              "properties_to_return",
              "response_properties"
            ],
            "description": "A list of property names to be included in the response. Irrelevant properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_property_values",
              "property_history_list"
            ],
            "description": "List of properties to retrieve along with their historical values. Specify as comma-separated values.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_types",
              "linked_objects"
            ],
            "description": "List of object types to retrieve associated IDs for. If any specified associations do not exist, they are ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "identifier_property",
              "unique_id_property"
            ],
            "description": "The property name used as a unique identifier for the commerce payment object.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "only_return_archived_results",
            "alternative_names": [
              "archived_results_only",
              "show_only_archived"
            ],
            "description": "Specify `true` to return only archived results. Default is `false`.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/commerce_payments/{commercePaymentId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{commercePaymentId}`. `{commercePaymentId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.commercepayments.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "commercePaymentId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/commerce_payments/{commercePaymentId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_commerce_payment",
        "description": {
          "tagline": "Delete a commerce payment from the CRM system.",
          "detailed": "Use this tool to move a specified commerce payment to the recycling bin by providing the payment ID."
        },
        "return_annotation": "Confirmation of payment deletion.",
        "arguments": [
          {
            "name": "commerce_payment_id",
            "alternative_names": [
              "payment_id",
              "commerce_payment_identifier"
            ],
            "description": "The unique identifier for the commerce payment to be moved to the recycling bin.",
            "endpoint_argument_name": "commercePaymentId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/commerce_payments/{commercePaymentId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{commercePaymentId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.commercepayments.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "commercePaymentId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/commerce_payments/{commercePaymentId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_commerce_payment",
        "description": {
          "tagline": "Partially update a commerce payment by ID or unique property.",
          "detailed": "Use this tool to perform a partial update of a commerce payment object identified by its internal ID or a unique property specified by `idProperty`. Ensure provided property values exist and are not read-only; this will overwrite them. To clear a value, pass an empty string."
        },
        "return_annotation": "Confirmation of commerce payment update.",
        "arguments": [
          {
            "name": "commerce_payment_id",
            "alternative_names": [
              "payment_id",
              "transaction_id"
            ],
            "description": "The internal ID of the commerce payment to update. This ID identifies the specific payment object within the system.",
            "endpoint_argument_name": "commercePaymentId"
          },
          {
            "name": "commerce_payment_update_properties",
            "alternative_names": [
              "payment_update_data",
              "update_fields"
            ],
            "description": "A JSON object containing key-value pairs for properties to update in the commerce payment. Include only existing and writable properties. Use empty strings to clear values.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "property_identifier",
              "unique_field_name"
            ],
            "description": "The name of a unique property for identifying the object. Use this if not using the default internal ID.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/commerce_payments/{commercePaymentId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{commercePaymentId}`or optionally a unique property value as specified by the `idProperty` query param. `{commercePaymentId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.commercepayments.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "commercePaymentId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/commerce_payments/batch/archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_commerce_payments_batch",
        "description": {
          "tagline": "Archive a batch of commerce payments by ID.",
          "detailed": "Use this tool to archive multiple commerce payments at once by their IDs. Ideal for managing and organizing payment data efficiently by removing outdated or unnecessary records in batches."
        },
        "return_annotation": "Confirmation of archived commerce payments batch.",
        "arguments": [
          {
            "name": "commerce_payment_ids_to_archive",
            "alternative_names": [
              "payment_ids_batch",
              "payments_to_archive"
            ],
            "description": "A JSON array of commerce payment IDs to be archived. Include each ID as a string in the array.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/commerce_payments/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of commerce payments by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.commercepayments.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/commerce_payments/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_commerce_payments_batch",
        "description": {
          "tagline": "Update a batch of commerce payments by internal ID or unique values.",
          "detailed": "Use this tool to update multiple commerce payments in HubSpot CRM by providing their internal IDs or unique property values, allowing for efficient bulk modifications."
        },
        "return_annotation": "Batch update confirmation for commerce payments.",
        "arguments": [
          {
            "name": "commerce_payments_update_batch",
            "alternative_names": [
              "payments_batch_update",
              "batch_payment_update"
            ],
            "description": "JSON array containing objects with 'id', 'idProperty', and 'properties' to specify updates for each payment. Include 'objectWriteTraceId' for tracing.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/commerce_payments/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of commerce payments by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.commercepayments.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/commerce_payments/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_commerce_payment_records",
        "description": {
          "tagline": "Retrieve commerce payment records by ID or unique property.",
          "detailed": "This tool is used to fetch commerce payment records from HubSpot CRM by specifying record IDs or using a custom unique property for retrieval."
        },
        "return_annotation": "Commerce payment records based on IDs or custom properties.",
        "arguments": [
          {
            "name": "commerce_payment_request_body",
            "alternative_names": [
              "payment_records_payload",
              "payment_data_input"
            ],
            "description": "Provide JSON data with properties, idProperty, and record IDs to fetch payment records.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_results_only",
            "alternative_names": [
              "archived_records_only",
              "fetch_only_archived_records"
            ],
            "description": "Return only archived commerce payment records if set to true.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/commerce_payments/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of commerce payments by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.commercepayments.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/commerce_payments/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_commerce_payments",
        "description": {
          "tagline": "Search for commerce payments in HubSpot CRM.",
          "detailed": "Use this tool to search for commerce payments within the HubSpot CRM. It should be called when you need to retrieve payment information from the CRM database."
        },
        "return_annotation": "Search results for commerce payments.",
        "arguments": [
          {
            "name": "commerce_payment_search_request",
            "alternative_names": [
              "payment_search_request",
              "payment_query_details"
            ],
            "description": "JSON body containing search parameters for commerce payments, including query, limit, pagination, sorting, and filters.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/commerce_payments/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.commercepayments.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/commerce_payments",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_commerce_payments",
        "description": {
          "tagline": "Retrieve a page of commerce payments from HubSpot CRM.",
          "detailed": "This tool allows you to retrieve a page of commerce payments from HubSpot CRM, with customizable properties."
        },
        "return_annotation": "A page of commerce payment data with specified properties.",
        "arguments": [
          {
            "name": "results_per_page",
            "alternative_names": [
              "max_results_per_page",
              "page_size"
            ],
            "description": "Specify the maximum number of results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "after_token",
              "next_page_token"
            ],
            "description": "The paging cursor token from the last successfully read resource. Used for paginating through results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "returned_properties",
            "alternative_names": [
              "response_properties",
              "output_properties"
            ],
            "description": "List the properties to return in the response. Non-present properties are ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_history",
              "properties_with_previous_values"
            ],
            "description": "A list of properties to be returned with their historical values. Reduces the maximum payments per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associations_to_retrieve",
            "alternative_names": [
              "associated_object_types",
              "related_association_ids"
            ],
            "description": "List of object types to retrieve associated IDs for. Non-existing associations are ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "show_only_archived",
            "alternative_names": [
              "only_archived_results",
              "retrieve_archived_only"
            ],
            "description": "Set to true to return only archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/commerce_payments",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of commerce payments. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.commercepayments.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of commerce payments that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of commerce payments that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/commerce_payments",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_commerce_payment",
        "description": {
          "tagline": "Create a commerce payment and return its details.",
          "detailed": "Use this tool to create a new commerce payment in the HubSpot CRM. It returns the details of the payment, including the unique ID."
        },
        "return_annotation": "Details of the created commerce payment, including the ID.",
        "arguments": [
          {
            "name": "commerce_payment_properties",
            "alternative_names": [
              "payment_properties",
              "new_commerce_payment_data"
            ],
            "description": "JSON object containing key-value pairs to set properties for the new commerce payment, including associations and their details.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/commerce_payments",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a commerce payment with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard commerce payments is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.commercepayments.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/subscriptions/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_subscription_batch",
        "description": {
          "tagline": "Update multiple subscriptions by ID or property values.",
          "detailed": "This tool updates a batch of subscriptions using their internal IDs or unique property values in HubSpot CRM. Use it when you need to modify details for multiple subscriptions simultaneously."
        },
        "return_annotation": "Confirmation of subscription updates.",
        "arguments": [
          {
            "name": "subscription_update_details",
            "alternative_names": [
              "update_details_payload",
              "batch_subscription_data"
            ],
            "description": "A JSON array of subscription details to update. Each item must include 'id', 'idProperty', 'objectWriteTraceId', and 'properties'. Use 'id' for the object or unique property ID.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/subscriptions/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of subscriptions by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/subscriptions/batch/archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_subscriptions_batch",
        "description": {
          "tagline": "Archive a batch of subscriptions by ID in HubSpot CRM.",
          "detailed": "Use this tool to archive multiple subscriptions at once by providing their IDs. This is useful for managing bulk subscription updates in HubSpot CRM."
        },
        "return_annotation": "Confirmation of archived subscriptions.",
        "arguments": [
          {
            "name": "subscription_ids_to_archive",
            "alternative_names": [
              "ids_for_archiving",
              "archive_ids"
            ],
            "description": "A JSON array of subscription IDs to archive. Each entry should include an 'id' field as a string.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/subscriptions/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of subscriptions by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/subscriptions/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_hubspot_subscriptions",
        "description": {
          "tagline": "Search for subscriptions in HubSpot CRM.",
          "detailed": "Use this tool to search and retrieve details of specific subscriptions from HubSpot CRM based on given criteria."
        },
        "return_annotation": "Details of matching HubSpot subscriptions.",
        "arguments": [
          {
            "name": "search_criteria",
            "alternative_names": [
              "subscription_search_criteria",
              "hubspot_search_parameters"
            ],
            "description": "A JSON object containing query, filters, sorting options, and properties to refine the subscription search in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/subscriptions/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.subscriptions.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/subscriptions",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_subscription_data",
        "description": {
          "tagline": "Fetch a page of subscription data from HubSpot CRM.",
          "detailed": "This tool retrieves a page of subscription data from HubSpot CRM. Use this tool to access subscription information, with options to control the returned data via query parameters."
        },
        "return_annotation": "A list of subscription data objects.",
        "arguments": [
          {
            "name": "max_results_per_page",
            "alternative_names": [
              "page_result_limit",
              "results_limit"
            ],
            "description": "The maximum number of subscription results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "pagination_token",
              "next_page_cursor"
            ],
            "description": "The token indicating the last successfully read resource, used for pagination in subsequent requests.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "requested_properties",
            "alternative_names": [
              "returned_properties",
              "subscription_properties"
            ],
            "description": "A list of property names to be included in the response. If a specified property is not present in the requested objects, it will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_history_list",
              "historical_properties"
            ],
            "description": "List of property names for retrieving their values and history. Reduces max subscriptions per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "associated_ids",
              "linked_objects"
            ],
            "description": "List of object types to retrieve associated IDs for. Ignored if not existing.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived",
            "alternative_names": [
              "show_archived_only",
              "include_only_archived"
            ],
            "description": "Set to true to return only archived results. Set to false to include active results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/subscriptions",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of subscriptions. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.subscriptions.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of subscriptions that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of subscriptions that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/subscriptions",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_subscription",
        "description": {
          "tagline": "Create a new subscription in HubSpot CRM.",
          "detailed": "This tool creates a subscription in HubSpot CRM using specified properties and returns a copy of the object with its ID included. Use it to add new subscriptions to the CRM system."
        },
        "return_annotation": "Details of the created subscription, including its ID.",
        "arguments": [
          {
            "name": "subscription_details",
            "alternative_names": [
              "subscription_data",
              "subscription_payload"
            ],
            "description": "JSON object containing key-value pairs for subscription properties and associations. Use it to define the subscription attributes and related entities.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/subscriptions",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a subscription with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard subscriptions is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/subscriptions/batch/upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_subscriptions_in_hubspot_crm",
        "description": {
          "tagline": "Batch create or update subscription records in HubSpot CRM.",
          "detailed": "Use this tool to create or update subscription records based on a unique property value in HubSpot CRM. It's ideal for ensuring your subscription data is up-to-date by specifying an `idProperty` for uniquely identifying existing records."
        },
        "return_annotation": "Confirmation of batch upsert operation for subscriptions.",
        "arguments": [
          {
            "name": "subscription_records",
            "alternative_names": [
              "subscription_batch_data",
              "sub_records"
            ],
            "description": "A JSON array of objects representing subscription records to upsert. Each object must include `idProperty`, `objectWriteTraceId`, `id`, and `properties` with key-value pairs.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/subscriptions/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of subscriptions by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/subscriptions/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_subscription_records",
        "description": {
          "tagline": "Retrieve subscription records by ID or unique property.",
          "detailed": "Use this tool to fetch subscription records from HubSpot CRM by providing record IDs or a custom unique value property. Ideal for accessing specific subscription details quickly."
        },
        "return_annotation": "Subscription records based on specified IDs or properties.",
        "arguments": [
          {
            "name": "subscription_request_payload",
            "alternative_names": [
              "subscription_data_body",
              "retrieve_request_body"
            ],
            "description": "Payload containing properties and IDs for retrieving subscription records. Specify `idProperty` for custom unique value retrieval or use `inputs` for record IDs.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "only_archived_records",
            "alternative_names": [
              "archived_only",
              "retrieve_only_archived"
            ],
            "description": "Set to true to return only archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/subscriptions/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of subscriptions by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.subscriptions.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/subscriptions/batch/create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_subscriptions",
        "description": {
          "tagline": "Create a batch of subscriptions in HubSpot CRM.",
          "detailed": "This tool is used to create multiple subscriptions at once in HubSpot CRM. Call this tool when you need to add several subscriptions simultaneously."
        },
        "return_annotation": "Confirmation of subscriptions batch creation.",
        "arguments": [
          {
            "name": "subscription_batch_data",
            "alternative_names": [
              "batch_subscription_payload",
              "subscription_creation_data"
            ],
            "description": "A JSON payload containing arrays of subscription data, including associations and properties for each subscription to be created in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/subscriptions/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of subscriptions",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/subscriptions/{subscriptionId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_subscription_details",
        "description": {
          "tagline": "Retrieve details of a specific subscription by ID.",
          "detailed": "This tool is used to fetch the details of a subscription object identified by its subscription ID. It allows control over what is returned using query parameters."
        },
        "return_annotation": "Subscription object details based on the provided ID.",
        "arguments": [
          {
            "name": "subscription_id",
            "alternative_names": [
              "subscription_identifier",
              "id_for_subscription"
            ],
            "description": "The unique identifier for the subscription object to be retrieved. This can be the internal object ID or a unique property value specified by the idProperty query param.",
            "endpoint_argument_name": "subscriptionId"
          },
          {
            "name": "requested_properties",
            "alternative_names": [
              "properties_list",
              "return_properties"
            ],
            "description": "List of properties to return in the response. Properties not present in the object will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_history"
            ],
            "description": "A list of property names whose values and history are to be retrieved for the subscription. Properties not present on the object will be ignored.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "association_types_to_retrieve",
            "alternative_names": [
              "associated_object_types",
              "related_entity_types"
            ],
            "description": "A list of object types to retrieve associated IDs for. Non-existing associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "unique_field_name"
            ],
            "description": "The property name used to uniquely identify the subscription object instead of the default ID.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "only_archived_results",
            "alternative_names": [
              "archived_results_only",
              "return_only_archived"
            ],
            "description": "Set to true to return only archived items, false to exclude them.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/subscriptions/{subscriptionId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{subscriptionId}`. `{subscriptionId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.subscriptions.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "subscriptionId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/subscriptions/{subscriptionId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_subscription",
        "description": {
          "tagline": "Delete a specific subscription from HubSpot CRM.",
          "detailed": "This tool deletes a subscription identified by `subscriptionId` from HubSpot CRM, moving it to the recycling bin. Use this when you need to remove a subscription object from the system."
        },
        "return_annotation": "Confirms deletion of a subscription from HubSpot CRM.",
        "arguments": [
          {
            "name": "subscription_id",
            "alternative_names": [
              "subscription_identifier",
              "subscription_code"
            ],
            "description": "The unique identifier of the subscription to be deleted. This moves the subscription to the recycling bin in HubSpot CRM.",
            "endpoint_argument_name": "subscriptionId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/subscriptions/{subscriptionId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{subscriptionId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "subscriptionId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/subscriptions/{subscriptionId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_subscription",
        "description": {
          "tagline": "Update subscription details using provided property values.",
          "detailed": "Use this tool to perform a partial update of a subscription object in HubSpot CRM. Identify the object by its internal ID or a unique property value using the `idProperty` query parameter. Overwrite properties by providing new values; clear them by passing an empty string. Errors occur for read-only or non-existent properties."
        },
        "return_annotation": "Returns the result of the subscription update operation.",
        "arguments": [
          {
            "name": "subscription_id",
            "alternative_names": [
              "object_id",
              "unique_id"
            ],
            "description": "The identifier for the subscription to update, typically the internal object ID. Specify this to target the right subscription.",
            "endpoint_argument_name": "subscriptionId"
          },
          {
            "name": "subscription_properties",
            "alternative_names": [
              "subscription_updates",
              "update_properties"
            ],
            "description": "JSON object with key-value pairs representing properties to update for the subscription. Clear properties with an empty string.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_for_id"
            ],
            "description": "The name of a unique property to identify the subscription object for updating.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/subscriptions/{subscriptionId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{subscriptionId}`or optionally a unique property value as specified by the `idProperty` query param. `{subscriptionId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "subscriptionId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/communications/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_messages_batch",
        "description": {
          "tagline": "Update a batch of messages in HubSpot CRM.",
          "detailed": "Use this tool to update multiple messages at once in HubSpot CRM by specifying either the communication ID or a unique property value. Only provided property values will be updated, and non-existent properties or read-only fields will cause errors. Include empty strings to clear properties."
        },
        "return_annotation": "Confirmation of messages update operation.",
        "arguments": [
          {
            "name": "messages_batch_update_payload",
            "alternative_names": [
              "batch_update_payload",
              "update_messages_payload"
            ],
            "description": "A JSON object containing an array of messages to be updated. Each message specifies either a `communicationId` or `idProperty` with properties to update. Properties can be cleared with an empty string.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/communications/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of communications by internal ID, or unique property values",
      "description": "Update a batch of messages by ID (`communicationId`) or unique property value (`idProperty`). Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/communications/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_batch_messages",
        "description": {
          "tagline": "Delete a batch of messages by ID with restoration option.",
          "detailed": "Delete multiple messages by their IDs. Deleted messages can be restored within 90 days."
        },
        "return_annotation": "Confirmation of messages deleted with restoration details.",
        "arguments": [
          {
            "name": "message_ids_to_delete",
            "alternative_names": [
              "batch_ids_to_remove",
              "message_batch_deletion_ids"
            ],
            "description": "A JSON array of message IDs to delete. Each ID must be a string.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/communications/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of communications by ID",
      "description": "Delete a batch of messages by ID. A deleted message can be restored within 90 days of being deleted. Learn more about [restoring activity records](https://knowledge.hubspot.com/records/restore-deleted-activity-in-a-record).",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/communications/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_communications_records",
        "description": {
          "tagline": "Create or update communication records in bulk.",
          "detailed": "This tool allows you to batch create or update communication records in HubSpot CRM based on a unique property value. Utilize this tool when you need to synchronize communication data and ensure records are accurately up-to-date."
        },
        "return_annotation": "Details of the created or updated communication records.",
        "arguments": [
          {
            "name": "communication_records_data",
            "alternative_names": [
              "records_input_data",
              "communication_objects_data"
            ],
            "description": "A JSON array of objects, each containing 'idProperty', 'objectWriteTraceId', 'id', and 'properties' to define the records for upsertion.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/communications/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of communications by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/communications_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "read_communications_page",
        "description": {
          "tagline": "Retrieve a page of communications from HubSpot CRM.",
          "detailed": "Use this tool to read a page of communications. You can control the information returned using query parameters for specific properties."
        },
        "return_annotation": "Details of the communications page retrieved.",
        "arguments": [
          {
            "name": "results_per_page",
            "alternative_names": [
              "max_results_per_page",
              "page_size"
            ],
            "description": "The maximum number of results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_paging_cursor",
              "continuation_token"
            ],
            "description": "The paging cursor token for the next set of results to read from the previous request's `paging.next.after` JSON property.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "specified_properties",
            "alternative_names": [
              "desired_properties_list",
              "response_properties"
            ],
            "description": "List of communication properties to return in the response. Properties not present will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "property_history"
            ],
            "description": "A list of properties to return with their history. Reduces the maximum number of communications per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associations",
            "alternative_names": [
              "retrieve_associated_ids",
              "get_associations_list"
            ],
            "description": "Comma-separated list of object types to get associated IDs for. Ignored if the association doesn't exist.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "retrieve_archived_only",
              "fetch_only_archived"
            ],
            "description": "Set to true to return only archived results. False includes all results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/communications",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of communications. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of communications that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of communications that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/communications_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_communication",
        "description": {
          "tagline": "Create a new communication entry in HubSpot CRM.",
          "detailed": "This tool creates a communication in HubSpot CRM with specified properties and returns the created object, including its ID. Use this when you need to log or track communications within the CRM."
        },
        "return_annotation": "Returns the created communication object with its ID.",
        "arguments": [
          {
            "name": "communication_details",
            "alternative_names": [
              "communication_data",
              "communication_payload"
            ],
            "description": "JSON object containing associations and properties for creating the communication. 'associations' involves details on related entities, 'properties' includes key-value pairs for setting the new communication's attributes.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/communications",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a communication with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard communications is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/communications/{communicationId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_communication_by_id",
        "description": {
          "tagline": "Retrieve details of a communication by its ID.",
          "detailed": "Use this tool to obtain the details of a communication object by specifying its unique ID. The ID can be the internal object ID or any unique property value. You can control the returned data using query parameters."
        },
        "return_annotation": "Details of the specified communication object.",
        "arguments": [
          {
            "name": "communication_identifier",
            "alternative_names": [
              "communication_id",
              "communication_unique_id"
            ],
            "description": "Specify the unique ID or property value for the communication object to retrieve.",
            "endpoint_argument_name": "communicationId"
          },
          {
            "name": "properties_to_return",
            "alternative_names": [
              "properties_list",
              "return_properties"
            ],
            "description": "Comma-separated list of properties to include in the response. Missing properties are ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_previous_values",
              "property_history_list"
            ],
            "description": "List the properties whose history of values should be returned. Comma-separated values are expected.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associated_object_types",
            "alternative_names": [
              "fetch_associated_object_types",
              "get_associated_object_types"
            ],
            "description": "A list of object types for retrieving associated IDs. Non-existing associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "id_property_name"
            ],
            "description": "The property name used to uniquely identify the communication object. Allows retrieval by non-default identifiers.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_only_archived",
            "alternative_names": [
              "fetch_archived_items_only",
              "retrieve_only_archived"
            ],
            "description": "Set to true to return only results that have been archived. Defaults to false to include non-archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/communications/{communicationId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{communicationId}`. `{communicationId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "communicationId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/communications/{communicationId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_communication",
        "description": {
          "tagline": "Archive a communication by its ID.",
          "detailed": "Use this tool to move a communication object to the recycling bin by specifying its ID."
        },
        "return_annotation": "Confirms the communication has been archived.",
        "arguments": [
          {
            "name": "communication_id",
            "alternative_names": [
              "communication_id_number",
              "comm_id"
            ],
            "description": "The unique identifier for the communication object to be archived. It must be a valid string representing an existing communication ID.",
            "endpoint_argument_name": "communicationId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/communications/{communicationId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{communicationId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "communicationId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/communications/{communicationId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_communication_details",
        "description": {
          "tagline": "Update communication object details in HubSpot CRM.",
          "detailed": "Perform a partial update of a HubSpot CRM communication object using its `communicationId` or a unique property value. This tool overwrites provided property values, with errors for read-only or non-existent properties."
        },
        "return_annotation": "Details of the updated communication object.",
        "arguments": [
          {
            "name": "communication_id",
            "alternative_names": [
              "comms_id",
              "comm_unique_identifier"
            ],
            "description": "The internal object ID of the communication. Used to identify which communication object to update.",
            "endpoint_argument_name": "communicationId"
          },
          {
            "name": "update_properties",
            "alternative_names": [
              "properties_to_update",
              "communication_properties"
            ],
            "description": "JSON key-value pairs representing the properties of the communication object to be updated. Read-only and non-existent properties will result in an error. Pass an empty string to clear a property value.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "distinct_property_name"
            ],
            "description": "The unique property name used to identify the communication object if not using `communicationId`. It must refer to a property with unique values for the object.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/communications/{communicationId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{communicationId}`or optionally a unique property value as specified by the `idProperty` query param. `{communicationId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "communicationId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/communications/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_crm_messages",
        "description": {
          "tagline": "Search and filter CRM messages based on various criteria.",
          "detailed": "Use this tool to search for messages in the CRM by applying filters on properties, checking associations, and sorting the results. Ideal for retrieving specific communications data within the HubSpot CRM."
        },
        "return_annotation": "Filtered and sorted list of CRM messages.",
        "arguments": [
          {
            "name": "search_parameters",
            "alternative_names": [
              "query_parameters",
              "crm_message_filters"
            ],
            "description": "A JSON object defining the search query, limit, paging cursor token, sorting order, properties to include, and filter groups for HubSpot CRM messages.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/communications/search",
      "tags": [
        "Search"
      ],
      "summary": "Search for messages",
      "description": "Search for messages by filtering on properties, searching through associations, and sorting results. Learn more about [CRM search](https://developers.hubspot.com/docs/guides/api/crm/search#make-a-search-request).",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/communications/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_batch_communications",
        "description": {
          "tagline": "Retrieve a batch of communication messages by ID.",
          "detailed": "This tool retrieves a batch of communication messages from the HubSpot CRM using either the message ID or a unique property value. It should be called when you need to access multiple messages simultaneously."
        },
        "return_annotation": "Batch of retrieved communication messages.",
        "arguments": [
          {
            "name": "communication_batch_request_body",
            "alternative_names": [
              "message_batch_request_body",
              "batch_communications_request_body"
            ],
            "description": "JSON object with properties: 'propertiesWithHistory' (key-value pairs with histories), 'idProperty' (custom unique property name), 'inputs' (array with 'id' strings), 'properties' (key-value pairs).",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "archived_results_only",
              "fetch_only_archived"
            ],
            "description": "Set to True to return only archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/communications/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of communications by internal ID, or unique property values",
      "description": "Retrieve a batch of messages by ID (`communicationId`) or unique property value (`idProperty`). ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/communications/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_messages_batch",
        "description": {
          "tagline": "Create a batch of messages in HubSpot CRM.",
          "detailed": "Use this tool to create multiple messages in HubSpot CRM simultaneously. Ideal for handling bulk message creation with optional properties and associations with other CRM records."
        },
        "return_annotation": "Details of the created batch of messages.",
        "arguments": [
          {
            "name": "messages_batch_input",
            "alternative_names": [
              "communications_batch_input",
              "batch_messages_payload"
            ],
            "description": "JSON object containing the `inputs` array for message properties and associations. Each element should specify message details and CRM associations.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/communications/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of communications",
      "description": "Create a batch of messages. The `inputs` array can contain a `properties` object to define property values for each message, along with an `associations` array to define [associations](https://developers.hubspot.com/docs/guides/api/crm/associations/associations-v4) with other CRM records.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/companies/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_batch_companies_hubspot",
        "description": {
          "tagline": "Retrieve a batch of company records from HubSpot CRM.",
          "detailed": "Use this tool to retrieve multiple companies from HubSpot CRM by specifying their IDs or unique properties. You can customize the returned data using the `properties` query parameter."
        },
        "return_annotation": "A batch of company data based on IDs or unique properties.",
        "arguments": [
          {
            "name": "batch_companies_request_body",
            "alternative_names": [
              "company_batch_request_body",
              "retrieve_companies_request_body"
            ],
            "description": "JSON object containing 'propertiesWithHistory', 'idProperty', 'inputs', and 'properties' to specify company retrieval criteria.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "fetch_archived_companies",
              "include_archived_companies"
            ],
            "description": "Set to true to return only archived companies in the results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/companies/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Retrieve a batch of companies",
      "description": "Retrieve a batch of companies by ID (`companyId`) or by a unique property (`idProperty`). You can specify what is returned using the `properties` query parameter.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.companies.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/companies_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_all_companies",
        "description": {
          "tagline": "Retrieve all companies from HubSpot CRM.",
          "detailed": "This tool retrieves all companies from the HubSpot CRM. It uses query parameters to control the information that gets returned, such as filtering or specifying fields. Useful for getting a comprehensive list of companies stored in the CRM."
        },
        "return_annotation": "Information on all companies from the CRM.",
        "arguments": [
          {
            "name": "results_per_page_limit",
            "alternative_names": [
              "max_results_page",
              "number_of_results_page"
            ],
            "description": "The maximum number of results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "continuation_token"
            ],
            "description": "The cursor token to fetch the next set of results in a paginated response.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "properties_to_return",
            "alternative_names": [
              "fields_to_include",
              "selected_properties"
            ],
            "description": "List of properties to include in the response. Ignore if not present on the object.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "property_history_fields",
              "historical_properties"
            ],
            "description": "A list of properties to return with their history of previous values. This reduces max companies per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "A list of object types to retrieve associated IDs for. Non-existent associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "archived_results_only",
              "fetch_archived_only"
            ],
            "description": "Set to true to return only archived results in the response.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/companies",
      "tags": [
        "Basic"
      ],
      "summary": "Retrieve companies",
      "description": "Retrieve all companies, using query parameters to control the information that gets returned.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.companies.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of companies that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of companies that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/companies_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_company_hubspot",
        "description": {
          "tagline": "Create a new company in HubSpot CRM.",
          "detailed": "Use this tool to create a single company in HubSpot CRM. It allows you to define property values for the company and specify associations with other CRM records. Ideal for organizing and managing company information efficiently."
        },
        "return_annotation": "Details about the created company in HubSpot CRM.",
        "arguments": [
          {
            "name": "company_data",
            "alternative_names": [
              "company_details",
              "company_information"
            ],
            "description": "JSON object containing company properties and associations. Include a 'properties' object for company property values and an 'associations' array for linking with other CRM records.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/companies",
      "tags": [
        "Basic"
      ],
      "summary": "Create a company",
      "description": "Create a single company. Include a `properties` object to define [property values](https://developers.hubspot.com/docs/guides/api/crm/properties) for the company, along with an `associations` array to define [associations](https://developers.hubspot.com/docs/guides/api/crm/associations/associations-v4) with other CRM records.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.companies.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The company property values to set."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "The company property values to set.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The company property values to set.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/companies/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_companies_in_hubspot",
        "description": {
          "tagline": "Search for companies in HubSpot CRM using filters and sorting.",
          "detailed": "This tool allows you to search for companies in HubSpot CRM by applying filters, associating searches, and sorting the results. It is useful for retrieving company information based on specific criteria quickly."
        },
        "return_annotation": "Search results for companies with specified filters.",
        "arguments": [
          {
            "name": "company_search_criteria",
            "alternative_names": [
              "companies_query_parameters",
              "firm_search_parameters"
            ],
            "description": "JSON object containing search parameters like query, filters, property inclusion, sorting, and pagination for finding companies in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/companies/search",
      "tags": [
        "Search"
      ],
      "summary": "Search for companies",
      "description": "Search for companies by filtering on properties, searching through associations, and sorting results. Learn more about [CRM search](https://developers.hubspot.com/docs/guides/api/crm/search#make-a-search-request).",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.companies.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/companies/{companyId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_company_by_id",
        "description": {
          "tagline": "Retrieve detailed company information using its ID.",
          "detailed": "Use this tool to get detailed information about a company by providing its ID or a unique property. You can specify which properties to retrieve."
        },
        "return_annotation": "Details of a specific company by ID or unique property.",
        "arguments": [
          {
            "name": "company_identifier",
            "alternative_names": [
              "company_id",
              "unique_company_id"
            ],
            "description": "A unique identifier for the company, such as its ID or a unique property name, used to retrieve its details.",
            "endpoint_argument_name": "companyId"
          },
          {
            "name": "company_properties_to_retrieve",
            "alternative_names": [
              "properties_list",
              "requested_company_properties"
            ],
            "description": "List the specific company properties to retrieve, separated by commas. Ignored if properties are unavailable.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "retrieve_properties_with_history",
            "alternative_names": [
              "fetch_properties_history",
              "get_properties_with_history"
            ],
            "description": "List of properties to return with their history of previous values. Ignored if properties aren't present.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_entities",
              "linked_ids"
            ],
            "description": "A list of object types to retrieve associated IDs for. Ignores non-existent associations.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "identifier_property",
              "unique_identifier"
            ],
            "description": "The name of a unique property to identify the company. Used instead of company ID.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_only_archived",
            "alternative_names": [
              "show_archived_exclusively",
              "fetch_archived_only"
            ],
            "description": "Set to true to return only archived results. If false, non-archived results will be returned.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/companies/{companyId}",
      "tags": [
        "Basic"
      ],
      "summary": "Retrieve a company",
      "description": "Retrieve a company by its ID (`companyId`) or by a unique property (`idProperty`). You can specify what is returned using the `properties` query parameter.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.companies.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "companyId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/companies/{companyId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_company",
        "description": {
          "tagline": "Delete a company by ID in HubSpot CRM.",
          "detailed": "Use this tool to delete a company by its ID in HubSpot CRM. Deleted companies can be restored within 90 days if needed."
        },
        "return_annotation": "Confirmation of the company's deletion.",
        "arguments": [
          {
            "name": "company_id",
            "alternative_names": [
              "company_identifier",
              "company_id_number"
            ],
            "description": "The unique identifier of the company to be deleted in HubSpot CRM. This ID is required to specify the company.",
            "endpoint_argument_name": "companyId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/companies/{companyId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive a company",
      "description": "Delete a company by ID. Deleted companies can be restored within 90 days of deletion. Learn more about [restoring records](https://knowledge.hubspot.com/records/restore-deleted-records).",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.companies.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "companyId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/companies/{companyId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_hubspot_company",
        "description": {
          "tagline": "Update a company's details in HubSpot CRM using its ID.",
          "detailed": "Use this tool to update a company's information in HubSpot CRM by specifying the `companyId` or a unique property. Only existing and writable properties can be updated. Properties can be cleared by passing an empty string."
        },
        "return_annotation": "Confirmation of the company's updated information.",
        "arguments": [
          {
            "name": "company_unique_identifier",
            "alternative_names": [
              "hubspot_company_id",
              "company_unique_key"
            ],
            "description": "The unique identifier for the company to be updated, either the companyId or a unique property value.",
            "endpoint_argument_name": "companyId"
          },
          {
            "name": "company_properties_update",
            "alternative_names": [
              "company_info_update",
              "company_details_update"
            ],
            "description": "A JSON object specifying the company property values to set or clear. Only existing and writable properties can be updated. Pass an empty string to clear a property.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_id_property",
              "unique_identifier_property"
            ],
            "description": "Specify the name of the unique property used to identify the company.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/companies/{companyId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update a company",
      "description": "Update a company by ID (`companyId`) or unique property value (`idProperty`). Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.companies.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "companyId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The company property values to set."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "The company property values to set.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The company property values to set.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/companies/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_or_update_companies",
        "description": {
          "tagline": "Create or update companies in HubSpot CRM using a unique identifier.",
          "detailed": "This tool creates or updates companies in the HubSpot CRM based on a unique identifier property. It should be called when you need to batch upsert company records identified by a unique property."
        },
        "return_annotation": "Confirmation of companies created or updated in HubSpot CRM.",
        "arguments": [
          {
            "name": "company_data_batch",
            "alternative_names": [
              "batch_company_data",
              "company_records"
            ],
            "description": "A JSON array of objects, each containing 'idProperty', 'objectWriteTraceId', 'id', and 'properties', to specify unique company identifiers and their details for upserting.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/companies/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of companies by unique property values",
      "description": "Create or update companies identified by a unique property value as specified by the `idProperty` query parameter. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.companies.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/companies/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_batch_of_companies",
        "description": {
          "tagline": "Update multiple company records in HubSpot by ID.",
          "detailed": "This tool allows batch updating of company records in the HubSpot CRM. It should be called when there is a need to update information for multiple companies at once, using their unique IDs."
        },
        "return_annotation": "Confirmation of updated companies' information.",
        "arguments": [
          {
            "name": "companies_update_payload",
            "alternative_names": [
              "companies_update_data",
              "batch_update_payload"
            ],
            "description": "JSON array of company objects, each with 'id', 'idProperty', 'objectWriteTraceId', and 'properties' to update.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/companies/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of companies",
      "description": "Update a batch of companies by ID.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.companies.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/companies/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_of_companies",
        "description": {
          "tagline": "Create a batch of companies with properties and associations.",
          "detailed": "This tool allows you to create multiple companies in one request. Each company can have specific property values and can be associated with other CRM records. Use this when needing to add several companies at once along with their details and relationships."
        },
        "return_annotation": "Confirmation of created companies and any associations.",
        "arguments": [
          {
            "name": "company_batch_data",
            "alternative_names": [
              "companies_input_data",
              "batch_company_details"
            ],
            "description": "JSON array containing company data, each with `properties` for company details and `associations` to link with other CRM records.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/companies/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of companies",
      "description": "Create a batch of companies. The `inputs` array can contain a `properties` object to define property values for each company, along with an `associations` array to define [associations](https://developers.hubspot.com/docs/guides/api/crm/associations/associations-v4) with other CRM records.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.companies.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/companies/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_companies_batch",
        "description": {
          "tagline": "Delete a batch of companies by ID in HubSpot CRM.",
          "detailed": "This tool deletes a batch of companies in HubSpot CRM using their IDs. Deleted companies can be restored within 90 days."
        },
        "return_annotation": "Confirmation of deletion request submission for companies batch.",
        "arguments": [
          {
            "name": "companies_batch_ids",
            "alternative_names": [
              "company_ids_batch",
              "batch_ids"
            ],
            "description": "JSON array of company IDs to delete. Each entry should include an 'id' key with the company's ID as a string.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/companies/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of companies",
      "description": "Delete a batch of companies by ID. Deleted companies can be restored within 90 days of deletion. Learn more about [restoring records](https://knowledge.hubspot.com/records/restore-deleted-records).",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.companies.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/companies/merge_merge",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "merge_company_records",
        "description": {
          "tagline": "Merge two company records in HubSpot CRM.",
          "detailed": "Use this tool to merge two company records into a single record in HubSpot CRM, ensuring data consistency."
        },
        "return_annotation": "Result of merging two company records.",
        "arguments": [
          {
            "name": "company_id_to_merge",
            "alternative_names": [
              "merge_company_id",
              "secondary_company_id"
            ],
            "description": "The ID of the company to merge into the primary company.",
            "endpoint_argument_name": "objectIdToMerge"
          },
          {
            "name": "primary_company_id",
            "alternative_names": [
              "main_company_id",
              "target_company_id"
            ],
            "description": "The ID of the primary company into which the other company will be merged.",
            "endpoint_argument_name": "primaryObjectId"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/companies/merge",
      "tags": [
        "Basic"
      ],
      "summary": "Merge two companies",
      "description": "Merge two company records. Learn more about [merging records](https://knowledge.hubspot.com/records/merge-records).",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.companies.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "objectIdToMerge",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the company to merge into the primary."
            },
            "description": "The ID of the company to merge into the primary.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "The ID of the company to merge into the primary."
            },
            "schema_required": true
          },
          {
            "name": "primaryObjectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the primary company, which the other will merge into."
            },
            "description": "The ID of the primary company, which the other will merge into.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "The ID of the primary company, which the other will merge into."
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"objectIdToMerge\",\n          \"primaryObjectId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"objectIdToMerge\": {\n            \"type\": \"string\",\n            \"description\": \"The ID of the company to merge into the primary.\"\n          },\n          \"primaryObjectId\": {\n            \"type\": \"string\",\n            \"description\": \"The ID of the primary company, which the other will merge into.\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "post-/crm/v3/objects/contacts/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "batch_read_contacts",
        "description": {
          "tagline": "Retrieve multiple contacts using internal IDs or unique properties.",
          "detailed": "Use this tool to read a batch of contacts from HubSpot CRM by providing their internal IDs or unique property values. Ideal for situations where multiple contact details are needed simultaneously."
        },
        "return_annotation": "Batch of contact details from HubSpot CRM.",
        "arguments": [
          {
            "name": "contacts_request_body",
            "alternative_names": [
              "contacts_payload",
              "contacts_input_data"
            ],
            "description": "JSON object containing contact read parameters: properties, propertiesWithHistory, idProperty, and inputs.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "fetch_archived_contacts",
              "include_archived_contacts"
            ],
            "description": "Set to True to return only archived contacts. False excludes them.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/contacts/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of contacts by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string"
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/contacts/{contactId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_contact_details",
        "description": {
          "tagline": "Retrieve detailed information about a specific contact.",
          "detailed": "This tool fetches detailed information about a contact from HubSpot CRM, identified by `contactId`. It provides an option to specify which properties to return using query parameters. Use this tool when you need to access in-depth details about a contact, such as their internal object ID or any unique property value."
        },
        "return_annotation": "Details of a contact from HubSpot CRM.",
        "arguments": [
          {
            "name": "contact_identifier",
            "alternative_names": [
              "contact_id_value",
              "unique_contact_key"
            ],
            "description": "The ID or unique property value used to identify the contact in HubSpot CRM.",
            "endpoint_argument_name": "contactId"
          },
          {
            "name": "return_properties",
            "alternative_names": [
              "properties_to_return",
              "requested_properties"
            ],
            "description": "List of properties to include in the response for the contact. If absent on the object, they will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_past_values",
              "historical_properties"
            ],
            "description": "A list of properties to return with their history of previous values. Ignored if properties are not present.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "linked_object_types",
              "related_object_types"
            ],
            "description": "A list of object types to retrieve associated IDs for. Ignored if associations do not exist.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "distinct_property_identifier"
            ],
            "description": "The property name with unique values for the contact type, used to identify the object.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "only_return_archived",
              "show_only_archived"
            ],
            "description": "Set to true to return only results that have been archived.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/contacts/{contactId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{contactId}`. `{contactId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object type"
            },
            "description": "The name of a property whose values are unique for this object type",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "contactId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/contacts/{contactId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_contact",
        "description": {
          "tagline": "Delete a contact and move it to the recycling bin.",
          "detailed": "Use this tool to delete a contact in HubSpot CRM, identified by `contactId`, moving it to the recycling bin."
        },
        "return_annotation": "Confirmation of contact deletion.",
        "arguments": [
          {
            "name": "contact_id",
            "alternative_names": [
              "contact_identifier",
              "contact_key"
            ],
            "description": "The unique identifier of the contact to be deleted and moved to the recycling bin.",
            "endpoint_argument_name": "contactId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/contacts/{contactId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{contactId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "contactId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/contacts/{contactId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_contact_information",
        "description": {
          "tagline": "Update specific fields of a contact in HubSpot CRM.",
          "detailed": "Use this tool to perform a partial update of a contact's information in HubSpot CRM. Identify the contact by `{contactId}` and specify fields to update. Properties not intended for update are ignored. Pass an empty string to clear values."
        },
        "return_annotation": "Confirmation of contact update in HubSpot CRM.",
        "arguments": [
          {
            "name": "contact_id",
            "alternative_names": [
              "contact_identifier",
              "contact_unique_id"
            ],
            "description": "The unique ID or property value used to identify the contact for the update.",
            "endpoint_argument_name": "contactId"
          },
          {
            "name": "contact_properties_update",
            "alternative_names": [
              "properties_update_data",
              "contact_fields_update"
            ],
            "description": "JSON object containing key-value pairs of contact properties to update. Use empty strings to clear values.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_with_unique_values"
            ],
            "description": "Specify the property name with unique values for identifying the contact, such as email or phone number.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/contacts/{contactId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{contactId}`. `{contactId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object type"
            },
            "description": "The name of a property whose values are unique for this object type",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "contactId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"example\": {\n              \"property_date\": \"1572480000000\",\n              \"property_radio\": \"option_1\",\n              \"property_number\": \"17\",\n              \"property_string\": \"value\",\n              \"property_checkbox\": \"false\",\n              \"property_dropdown\": \"choice_b\",\n              \"property_multiple_checkboxes\": \"chocolate;strawberry\"\n            }\n          }\n        },\n        \"example\": {\n          \"properties\": {\n            \"email\": \"bcooper@biglytics.net\",\n            \"phone\": \"(877) 929-0687\",\n            \"company\": \"Biglytics\",\n            \"website\": \"biglytics.net\",\n            \"lastname\": \"Cooper\",\n            \"firstname\": \"Bryan\"\n          },\n          \"associations\": []\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/contacts/merge",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "merge_contacts",
        "description": {
          "tagline": "Merges two contacts into one in HubSpot CRM.",
          "detailed": "Use this tool to merge two existing contacts within HubSpot CRM. It consolidates contact information, ensuring that no duplicate entries exist for the same individual."
        },
        "return_annotation": "Confirmation of contact merge operation.",
        "arguments": [
          {
            "name": "contact_id_to_merge",
            "alternative_names": [
              "secondary_contact_id",
              "merge_contact_id"
            ],
            "description": "The ID of the contact object that will be merged into the primary contact.",
            "endpoint_argument_name": "objectIdToMerge"
          },
          {
            "name": "primary_contact_id",
            "alternative_names": [
              "main_contact_id",
              "leading_contact_id"
            ],
            "description": "The unique identifier of the primary contact that will remain after merging. This contact's information will be retained.",
            "endpoint_argument_name": "primaryObjectId"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/contacts/merge",
      "tags": [
        "Public_Object"
      ],
      "summary": "Merge two contacts with same type",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "objectIdToMerge",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "primaryObjectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"objectIdToMerge\",\n          \"primaryObjectId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"objectIdToMerge\": {\n            \"type\": \"string\"\n          },\n          \"primaryObjectId\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "post-/crm/v3/objects/contacts/batch/archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_contacts_batch",
        "description": {
          "tagline": "Archive a batch of contacts by ID in HubSpot CRM.",
          "detailed": "Use this tool to archive multiple contacts simultaneously in HubSpot CRM by providing their IDs. This can be useful for managing or cleaning up contact lists efficiently."
        },
        "return_annotation": "Status of the batch archive operation.",
        "arguments": [
          {
            "name": "contact_ids_to_archive",
            "alternative_names": [
              "ids_of_contacts_to_archive",
              "contacts_batch_ids"
            ],
            "description": "A list of contact IDs to archive in HubSpot CRM. Each ID should be a string representing a unique contact.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/contacts/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of contacts by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/contacts/batch/create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_contacts",
        "description": {
          "tagline": "Create a batch of contacts in HubSpot CRM.",
          "detailed": "Use this tool to create multiple contacts in HubSpot CRM at once. Ideal for bulk uploading contact information."
        },
        "return_annotation": "Batch creation confirmation for contacts.",
        "arguments": [
          {
            "name": "contacts_data",
            "alternative_names": [
              "contact_records",
              "bulk_contact_entries"
            ],
            "description": "JSON array containing details for each contact to be created, with key-value pairs for properties and optional associations.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/contacts/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of contacts",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs for setting properties for the new object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs for setting properties for the new object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs for setting properties for the new object.\"\n                }\n              },\n              \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/contacts/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_batch_contacts",
        "description": {
          "tagline": "Update a batch of contacts in HubSpot CRM.",
          "detailed": "Use this tool to update multiple contacts simultaneously in HubSpot CRM. It is helpful when you need to make changes to several contact records at once."
        },
        "return_annotation": "Confirms the batch update status for contacts.",
        "arguments": [
          {
            "name": "contacts_batch_update_data",
            "alternative_names": [
              "batch_contacts_data",
              "update_contacts_payload"
            ],
            "description": "JSON array of contact objects with unique identifiers and properties to update in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/contacts/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of contacts",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/contacts/gdpr-delete",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "gdpr_delete_contact",
        "description": {
          "tagline": "Permanently delete a contact for GDPR compliance.",
          "detailed": "Use this tool to permanently delete a contact and all associated content to comply with GDPR. You can identify the contact by email address using the 'idProperty'. If the email isn't found, it will be added to a blocklist to avoid future use."
        },
        "return_annotation": "Confirmation of contact deletion or blocklisting.",
        "arguments": [
          {
            "name": "contact_identifier",
            "alternative_names": [
              "contact_id",
              "identifier"
            ],
            "description": "The unique ID or email used to identify the contact for deletion. Use 'email' in conjunction with 'id_property' if identifying by email.",
            "endpoint_argument_name": "objectId"
          },
          {
            "name": "contact_identifier_property",
            "alternative_names": [
              "contact_id_property",
              "identifier_property"
            ],
            "description": "Specify 'email' to identify the contact by email address. If not using email, specify another unique identifier property.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/contacts/gdpr-delete",
      "tags": [
        "GDPR"
      ],
      "summary": "GDPR DELETE",
      "description": "Permanently delete a contact and all associated content to follow GDPR. Use optional property 'idProperty' set to 'email' to identify contact by email address. If email address is not found, the email address will be added to a blocklist and prevent it from being used in the future.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "objectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"objectId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"objectId\": {\n            \"type\": \"string\"\n          },\n          \"idProperty\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "get-/crm/v3/objects/contacts",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_contacts",
        "description": {
          "tagline": "Retrieve a page of contacts from HubSpot CRM.",
          "detailed": "This tool retrieves a page of contacts from the HubSpot CRM. You can specify which properties you want to be returned by controlling the `properties` query parameter."
        },
        "return_annotation": "A page of contacts with specified properties.",
        "arguments": [
          {
            "name": "max_results_per_page",
            "alternative_names": [
              "results_per_page",
              "contacts_per_page"
            ],
            "description": "The maximum number of contact results to return per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "cursor_token",
              "next_page_token"
            ],
            "description": "The token indicating the last read resource, used for pagination to retrieve more results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "contact_properties_to_retrieve",
            "alternative_names": [
              "contact_fields",
              "contact_attributes"
            ],
            "description": "A list of properties to include in the response. Non-existent properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historic_properties",
              "properties_with_past_values"
            ],
            "description": "Specify properties to return with their history of previous values, reducing the max number of objects per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associated_ids",
            "alternative_names": [
              "fetch_associated_objects",
              "get_associations"
            ],
            "description": "A list of object types to retrieve associated IDs for. If associations do not exist, they will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "archived_only",
              "include_archived"
            ],
            "description": "Whether to return only results that have been archived. Use 'true' for archived only.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/contacts",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of contacts. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/contacts",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_contact",
        "description": {
          "tagline": "Create a contact in HubSpot CRM and retrieve its details.",
          "detailed": "Use this tool to add a new contact to HubSpot CRM by specifying the desired properties. It returns a copy of the contact, including its unique ID."
        },
        "return_annotation": "The created contact details including ID.",
        "arguments": [
          {
            "name": "contact_properties",
            "alternative_names": [
              "contact_details",
              "contact_info"
            ],
            "description": "A JSON object containing properties for the new contact, including associations and other relevant data.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/contacts",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a contact with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard contacts is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "associations",
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"associations\",\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"example\": {\n          \"properties\": {\n            \"email\": \"bcooper@biglytics.net\",\n            \"phone\": \"(877) 929-0687\",\n            \"company\": \"Biglytics\",\n            \"website\": \"biglytics.net\",\n            \"lastname\": \"Cooper\",\n            \"firstname\": \"Bryan\"\n          },\n          \"associations\": []\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/contacts/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_contacts",
        "description": {
          "tagline": "Search contacts in HubSpot CRM.",
          "detailed": "Use this tool to search for contacts within the HubSpot CRM. It is useful for retrieving contact information based on search criteria."
        },
        "return_annotation": "Returns contact search results from HubSpot CRM.",
        "arguments": [
          {
            "name": "contact_search_criteria",
            "alternative_names": [
              "find_contacts_parameters",
              "contacts_query_parameters"
            ],
            "description": "Search criteria for finding contacts, including filters, properties, and sorting options.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/contacts/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string"
                },
                "limit": {
                  "type": "integer",
                  "format": "int32"
                },
                "after": {
                  "type": "string"
                },
                "sorts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              },
              "required": [
                "after",
                "filterGroups",
                "limit",
                "properties",
                "sorts"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"after\",\n          \"filterGroups\",\n          \"limit\",\n          \"properties\",\n          \"sorts\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/contacts/batch/upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_contact_batch",
        "description": {
          "tagline": "Upsert a batch of contacts in HubSpot CRM.",
          "detailed": "This tool is used to upsert a batch of contacts in HubSpot CRM. It allows you to define property values for each contact record, making it ideal for updating or creating multiple contacts at once."
        },
        "return_annotation": "Confirmation of upserted contacts and details.",
        "arguments": [
          {
            "name": "contact_batch_data",
            "alternative_names": [
              "contact_upsert_payload",
              "batch_contact_info"
            ],
            "description": "JSON object containing an array of contact data for upsert. Each contact should have `idProperty`, `objectWriteTraceId`, `id`, and `properties` defined.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/contacts/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of contacts",
      "description": "Upsert a batch of contacts. The `inputs` array can contain a `properties` object to define property values for each record.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/contracts/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['oauth2_legacy'], ['private_apps_legacy']]",
      "wrapper_tool": null,
      "method": "POST",
      "path": "/crm/v3/objects/contracts/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "oauth2_legacy",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/contracts/{contractId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['oauth2_legacy'], ['private_apps_legacy']]",
      "wrapper_tool": null,
      "method": "GET",
      "path": "/crm/v3/objects/contracts/{contractId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{contractId}`. `{contractId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "oauth2_legacy",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "contractId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/contracts/{contractId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['oauth2_legacy'], ['private_apps_legacy']]",
      "wrapper_tool": null,
      "method": "DELETE",
      "path": "/crm/v3/objects/contracts/{contractId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{contractId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "oauth2_legacy",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "contractId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/contracts/{contractId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['oauth2_legacy'], ['private_apps_legacy']]",
      "wrapper_tool": null,
      "method": "PATCH",
      "path": "/crm/v3/objects/contracts/{contractId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{contractId}`or optionally a unique property value as specified by the `idProperty` query param. `{contractId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "oauth2_legacy",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "contractId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/contracts/batch/upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['oauth2_legacy'], ['private_apps_legacy']]",
      "wrapper_tool": null,
      "method": "POST",
      "path": "/crm/v3/objects/contracts/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of contracts by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "oauth2_legacy",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/contracts/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['oauth2_legacy'], ['private_apps_legacy']]",
      "wrapper_tool": null,
      "method": "POST",
      "path": "/crm/v3/objects/contracts/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of contracts by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "oauth2_legacy",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/contracts/batch/create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['oauth2_legacy'], ['private_apps_legacy']]",
      "wrapper_tool": null,
      "method": "POST",
      "path": "/crm/v3/objects/contracts/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of contracts",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "oauth2_legacy",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/contracts/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['oauth2_legacy'], ['private_apps_legacy']]",
      "wrapper_tool": null,
      "method": "POST",
      "path": "/crm/v3/objects/contracts/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of contracts by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "oauth2_legacy",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/contracts",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['oauth2_legacy'], ['private_apps_legacy']]",
      "wrapper_tool": null,
      "method": "GET",
      "path": "/crm/v3/objects/contracts",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of contracts. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "oauth2_legacy",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of contracts that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of contracts that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/contracts",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['oauth2_legacy'], ['private_apps_legacy']]",
      "wrapper_tool": null,
      "method": "POST",
      "path": "/crm/v3/objects/contracts",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a contract with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard contracts is provided.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "oauth2_legacy",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/contracts/batch/archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['oauth2_legacy'], ['private_apps_legacy']]",
      "wrapper_tool": null,
      "method": "POST",
      "path": "/crm/v3/objects/contracts/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of contracts by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "oauth2_legacy",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/0-410",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_courses",
        "description": {
          "tagline": "Fetch a page of courses from HubSpot CRM.",
          "detailed": "Use this tool to read and retrieve information about a page of courses from HubSpot CRM. The response can be tailored using the `properties` query parameter to control what specific data is returned."
        },
        "return_annotation": "Returns details of a page of courses.",
        "arguments": [
          {
            "name": "maximum_results_per_page",
            "alternative_names": [
              "results_page_limit",
              "page_size_limit"
            ],
            "description": "Specify the maximum number of courses to display in a single page of results.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "cursor_token",
              "page_token"
            ],
            "description": "The paging cursor token of the last successfully read resource, used to fetch the next page of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "properties_to_return",
            "alternative_names": [
              "return_properties",
              "properties_list"
            ],
            "description": "Comma separated list of properties to include in the response. Ignored if not present on requested objects.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_past",
              "property_history_inclusion"
            ],
            "description": "List of properties to return with their history. This can reduce the number of courses per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_objects",
              "linked_objects"
            ],
            "description": "Comma-separated list of object types to retrieve associated IDs for; ignored if non-existent.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "include_archived_only",
              "show_archived_only"
            ],
            "description": "Set to true to return only archived results. False includes non-archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/0-410",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of courses. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.courses.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of courses that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of courses that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-410",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_course",
        "description": {
          "tagline": "Create a course in HubSpot CRM and return its details.",
          "detailed": "Use this tool to create a new course in HubSpot CRM with specified properties. It returns the course details, including the generated ID, upon successful creation."
        },
        "return_annotation": "Details of the created course, including its ID.",
        "arguments": [
          {
            "name": "course_properties",
            "alternative_names": [
              "course_data",
              "course_details"
            ],
            "description": "JSON object containing key-value pairs for setting properties and associations for the new course. Includes fields like `properties` for course-specific attributes and `associations` for related entities.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-410",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a course with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard courses is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.courses.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-410/batch/archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_courses_batch",
        "description": {
          "tagline": "Archive a batch of courses by ID.",
          "detailed": "Use this tool to archive multiple courses at once by providing their IDs. This simplifies the management of courses by automating the archiving process."
        },
        "return_annotation": "Confirmation of courses archived successfully.",
        "arguments": [
          {
            "name": "courses_ids_to_archive",
            "alternative_names": [
              "course_ids_list",
              "archive_courses_ids"
            ],
            "description": "A list of course IDs to be archived. Each ID should be a string representing a course to be archived.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-410/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of courses by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.courses.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/0-410/{courseId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_course_details",
        "description": {
          "tagline": "Fetch details of a course using the course ID.",
          "detailed": "Use this tool to retrieve detailed information about a course identified by its ID. The tool provides access to all course-related data, leveraging the course ID or any unique property value specified."
        },
        "return_annotation": "Course details for a given course ID.",
        "arguments": [
          {
            "name": "course_id",
            "alternative_names": [
              "course_identifier",
              "course_unique_id"
            ],
            "description": "The unique identifier for the course. Use this to specify which course details to retrieve.",
            "endpoint_argument_name": "courseId"
          },
          {
            "name": "include_properties",
            "alternative_names": [
              "return_properties",
              "fetch_properties"
            ],
            "description": "A list of property names to include in the response. Any missing properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "include_properties_with_history",
            "alternative_names": [
              "properties_with_past_values",
              "historical_properties"
            ],
            "description": "Specify properties to retrieve with their history of changes. Input as a list, each entry being a property name.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associated_object_types",
            "alternative_names": [
              "associated_object_types_list",
              "get_associated_objects"
            ],
            "description": "A list of object types for retrieving associated IDs. Non-existent associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "identifier_property_name",
              "unique_identifier_property"
            ],
            "description": "Specify the name of a unique property for the course object.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_only_archived",
            "alternative_names": [
              "fetch_archived_only",
              "retrieve_only_archived"
            ],
            "description": "Set to true to return only results that have been archived.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/0-410/{courseId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{courseId}`. `{courseId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.courses.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "courseId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/0-410/{courseId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_course",
        "description": {
          "tagline": "Delete a course by moving it to the recycling bin.",
          "detailed": "This tool deletes a specific course in the CRM by moving it to the recycling bin, identified by the provided `courseId`. Use this when you need to remove a course from the CRM records."
        },
        "return_annotation": "Confirmation of course deletion or error message.",
        "arguments": [
          {
            "name": "course_id",
            "alternative_names": [
              "course_identifier",
              "course_reference"
            ],
            "description": "The unique identifier for the course to be deleted. This identifier is used to locate the specific course in the CRM system.",
            "endpoint_argument_name": "courseId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/0-410/{courseId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{courseId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.courses.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "courseId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/0-410/{courseId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_hubspot_course",
        "description": {
          "tagline": "Update specific properties of a HubSpot course object.",
          "detailed": "Use this tool to perform a partial update on a course object in HubSpot CRM. Update is identified by either the `{courseId}` or a unique property via `idProperty`. Only properties provided will be changed, while read-only or non-existent properties will cause an error. Properties can be cleared by providing an empty string."
        },
        "return_annotation": "Confirmation of course object update.",
        "arguments": [
          {
            "name": "course_identifier",
            "alternative_names": [
              "course_id_value",
              "object_identifier"
            ],
            "description": "The unique identifier for the HubSpot course. It can be the internal course ID or a unique property value specified by `idProperty`.",
            "endpoint_argument_name": "courseId"
          },
          {
            "name": "course_update_properties",
            "alternative_names": [
              "course_properties_update",
              "update_properties_for_course"
            ],
            "description": "A JSON object containing key-value pairs of course properties to update. Only include properties that need to be changed. Keys should be valid property names in HubSpot CRM, and values should be the new values to set. Clear a property by setting its value to an empty string.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_field_name",
              "unique_identifier_property"
            ],
            "description": "The property name with unique values for identifying the object to update. Use it if not using `courseId`.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/0-410/{courseId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{courseId}`or optionally a unique property value as specified by the `idProperty` query param. `{courseId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.courses.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "courseId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-410/batch/create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_of_courses",
        "description": {
          "tagline": "Create a batch of courses in CRM.",
          "detailed": "Use this tool to add multiple courses at once to HubSpot CRM. Ideal for instances where you need to create several course entries simultaneously."
        },
        "return_annotation": "Confirmation of batch course creation.",
        "arguments": [
          {
            "name": "courses_batch_data",
            "alternative_names": [
              "courses_data_payload",
              "batch_courses_input"
            ],
            "description": "A JSON array with each item detailing a course to create, including associations, objectWriteTraceId, and properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-410/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of courses",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.courses.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-410/batch/upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "batch_upsert_records",
        "description": {
          "tagline": "Create or update HubSpot CRM records via unique identifier.",
          "detailed": "This tool creates or updates HubSpot CRM records based on a unique property identifier specified by the `idProperty` parameter. It is useful for ensuring records are maintained accurately in the CRM."
        },
        "return_annotation": "Confirmation of records being created or updated.",
        "arguments": [
          {
            "name": "crm_records_payload",
            "alternative_names": [
              "crm_entries_payload",
              "hubspot_data_payload"
            ],
            "description": "A JSON object containing an array of records, each with a unique `idProperty` and related properties for upsert operation.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-410/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of courses by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.courses.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-410/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "hubspot_crm_search_objects",
        "description": {
          "tagline": "Search and retrieve objects from HubSpot CRM.",
          "detailed": "Use this tool to perform a search for specific objects within the HubSpot CRM. It should be called when you need to find and retrieve detailed information about CRM objects based on search criteria."
        },
        "return_annotation": "Search results from HubSpot CRM.",
        "arguments": [
          {
            "name": "search_request",
            "alternative_names": [
              "search_parameters",
              "query_body"
            ],
            "description": "JSON containing search details. Includes query, limit, sorts, properties, and filterGroups for HubSpot CRM object search.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-410/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.courses.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-410/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_courses_batch",
        "description": {
          "tagline": "Update multiple courses in a batch by ID or unique properties.",
          "detailed": "Use this tool to update a batch of courses in the CRM system by specifying their internal IDs or unique property values. This is useful for making bulk updates efficiently."
        },
        "return_annotation": "Confirmation of batch update for courses.",
        "arguments": [
          {
            "name": "courses_batch_update_payload",
            "alternative_names": [
              "bulk_courses_update_data",
              "courses_update_entries"
            ],
            "description": "JSON object specifying the batch of courses to update, including IDs and properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-410/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of courses by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.courses.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-410/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_hubspot_records",
        "description": {
          "tagline": "Retrieve HubSpot CRM records by ID or unique property.",
          "detailed": "This tool retrieves HubSpot CRM records using either the record ID or a custom unique value property specified by the `idProperty`. It's useful for accessing multiple records within the CRM at once."
        },
        "return_annotation": "Batch of HubSpot records retrieved by ID or unique property.",
        "arguments": [
          {
            "name": "hubspot_record_request",
            "alternative_names": [
              "hubspot_batch_request",
              "hubspot_records_input"
            ],
            "description": "JSON object containing parameters to retrieve HubSpot CRM records. Includes `idProperty` for unique property lookup, `inputs` for record IDs, optional `properties` for field selection, and `propertiesWithHistory` for field histories.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_records",
            "alternative_names": [
              "include_archived_records",
              "fetch_only_archived_records"
            ],
            "description": "Set to true to return only archived records; false to exclude archived records in HubSpot CRM.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-410/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of courses by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.courses.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/owners/",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_owners_list",
        "description": {
          "tagline": "Retrieve a list of owners from the HubSpot CRM account.",
          "detailed": "Use this tool to obtain a paginated list of all owners available in a HubSpot CRM account. This can be useful for managing owner-related data or assignments."
        },
        "return_annotation": "A list of owners from the account.",
        "arguments": [
          {
            "name": "filter_by_email",
            "alternative_names": [
              "owner_email_filter",
              "email_query"
            ],
            "description": "Specify an email address to filter the list of owners returned. Only the owner with this exact email will be retrieved.",
            "endpoint_argument_name": "email"
          },
          {
            "name": "pagination_cursor_after",
            "alternative_names": [
              "next_page_after",
              "page_token_after"
            ],
            "description": "A cursor to get the next page of results, indicating the last result shown from the previous request.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "owners_list_limit",
            "alternative_names": [
              "owners_fetch_limit",
              "max_owners_per_page"
            ],
            "description": "The maximum number of owners to return per page. Provide an integer value.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "include_archived",
            "alternative_names": [
              "show_archived",
              "retrieve_archived_owners"
            ],
            "description": "Set to true to include archived owners in the retrieved list.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/owners/",
      "tags": [
        "Owners"
      ],
      "summary": "Retrieve a paginated list of owners available in the account.",
      "description": "Retrieve a paginated list of owners available in the account.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.owners.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "email",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": 100,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/owners/{ownerId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_owner_details",
        "description": {
          "tagline": "Retrieve details of a specific CRM owner by ID.",
          "detailed": "This tool retrieves details of a specific owner in the HubSpot CRM using either their 'id' or 'userId'. Use it when you need comprehensive information about a particular CRM owner."
        },
        "return_annotation": "Details of a specific CRM owner.",
        "arguments": [
          {
            "name": "owner_id",
            "alternative_names": [
              "owner_identifier",
              "owner_user_id"
            ],
            "description": "The unique ID of the CRM owner. Use this to retrieve the owner's details.",
            "endpoint_argument_name": "ownerId"
          },
          {
            "name": "owner_id_type",
            "alternative_names": [
              "id_type",
              "owner_identifier_type"
            ],
            "description": "Specify whether the 'ownerId' refers to an 'id' or 'userId'.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "include_archived",
            "alternative_names": [
              "show_archived",
              "retrieve_archived"
            ],
            "description": "Set to true to include archived owners in the retrieved details.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/owners/{ownerId}",
      "tags": [
        "Owners"
      ],
      "summary": "Retrieve a paginated list of owners available in the account.",
      "description": "Retrieve details of a specific owner using either their 'id' or 'userId'.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.owners.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": [
                "id",
                "userId"
              ],
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": "id",
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string",
              "enum": [
                "id",
                "userId"
              ]
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "ownerId",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/{objectType}/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "batch_retrieve_hubspot_records",
        "description": {
          "tagline": "Retrieve HubSpot CRM records using batch read.",
          "detailed": "This tool retrieves records from HubSpot CRM by record ID or custom unique property in a batch. Use it when you need to access multiple entities by their specific identifiers."
        },
        "return_annotation": "Batch of HubSpot CRM records based on the specified IDs.",
        "arguments": [
          {
            "name": "crm_object_type",
            "alternative_names": [
              "hubspot_object_type",
              "record_object_type"
            ],
            "description": "Specify the type of CRM object to retrieve, such as 'contact', 'deal', or 'company'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "hubspot_record_batch_request",
            "alternative_names": [
              "record_batch_payload",
              "crm_batch_request_body"
            ],
            "description": "A JSON object containing 'idProperty' for custom property retrieval, 'inputs' with record IDs or custom properties, 'properties' for new object properties, and 'propertiesWithHistory' for property histories. Use 'idProperty' only for custom unique value property retrieval, otherwise omit it.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_results",
            "alternative_names": [
              "include_archived_only",
              "get_archived_only"
            ],
            "description": "Set to true to return only archived results. Use false to include active records.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/{objectType}/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of objects by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/{objectType}/{objectId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "fetch_hubspot_object_by_id",
        "description": {
          "tagline": "Retrieve a HubSpot CRM object using its unique ID.",
          "detailed": "Use this tool to fetch the details of a HubSpot CRM object by its unique ID. Specify the object type and optional parameters to control the returned data."
        },
        "return_annotation": "Details of the specified HubSpot CRM object.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "type_of_object",
              "crm_object_type"
            ],
            "description": "The type of the HubSpot CRM object you want to retrieve. Examples include 'contact', 'company', and 'deal'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "object_identifier",
            "alternative_names": [
              "hubspot_object_id",
              "crm_unique_id"
            ],
            "description": "The unique identifier of the HubSpot CRM object to retrieve. This can be the internal object ID or another unique property value if specified by the `id_property` parameter.",
            "endpoint_argument_name": "objectId"
          },
          {
            "name": "return_properties",
            "alternative_names": [
              "properties_to_return",
              "object_properties"
            ],
            "description": "List of properties to return for the object. Ignored if not present on the object.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_and_history"
            ],
            "description": "A list of properties to return along with their historical values. Ignored if properties are not present.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "Specify object types to retrieve associated IDs for, separated by commas. Non-existing associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "identifier_property_name"
            ],
            "description": "Specify the property name that uniquely identifies the object.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "fetch_only_archived",
              "include_only_archived"
            ],
            "description": "Set to true to return only archived results. Set to false to include all results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/{objectType}/{objectId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{objectId}`. `{objectId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "objectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/{objectType}/{objectId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "move_object_to_recycle_bin",
        "description": {
          "tagline": "Move a CRM object to the recycling bin.",
          "detailed": "Use this tool to move a specified CRM object to the recycling bin using its object type and ID. This is useful for archiving or removing unnecessary data in HubSpot CRM."
        },
        "return_annotation": "Confirmation of object being moved to recycling bin.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "crm_object_type",
              "hubspot_object_category"
            ],
            "description": "Type of the CRM object to be moved, such as 'contacts', 'companies', etc.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "object_id",
            "alternative_names": [
              "object_identifier",
              "crm_object_id"
            ],
            "description": "The unique identifier for the CRM object to be moved to the recycling bin. This ID specifies which object within the CRM will be affected.",
            "endpoint_argument_name": "objectId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/{objectType}/{objectId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{objectId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "objectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/{objectType}/{objectId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "modify_hubspot_object",
        "description": {
          "tagline": "Update specific properties of a HubSpot CRM object.",
          "detailed": "Use this tool to perform partial updates on HubSpot CRM objects by specifying the object type and ID. You can update properties by providing new values, but ensure they aren't read-only or non-existent. Clear properties by passing an empty string."
        },
        "return_annotation": "Details of the updated HubSpot CRM object.",
        "arguments": [
          {
            "name": "hubspot_object_type",
            "alternative_names": [
              "crm_object_type",
              "record_type"
            ],
            "description": "Specify the type of HubSpot CRM object (e.g., 'contacts', 'companies', 'deals').",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "object_identifier",
            "alternative_names": [
              "object_id",
              "record_id"
            ],
            "description": "The internal ID of the HubSpot object to update. Use a string format.",
            "endpoint_argument_name": "objectId"
          },
          {
            "name": "object_properties",
            "alternative_names": [
              "record_updates",
              "property_changes"
            ],
            "description": "JSON object with key-value pairs for properties to update. Non-existent or read-only properties will cause an error.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_key_name"
            ],
            "description": "The name of a unique property for identifying the object. Use when the default object ID isn't used.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/{objectType}/{objectId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{objectId}`or optionally a unique property value as specified by the `idProperty` query param. `{objectId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "objectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/{objectType}/merge_merge",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "merge_hubspot_objects",
        "description": {
          "tagline": "Merge two HubSpot CRM objects of the same type.",
          "detailed": "Use this tool to merge two objects within HubSpot CRM that have the same object type, such as contacts or companies. It is useful for consolidating duplicate records into a single, unified entry."
        },
        "return_annotation": "Confirmation of merged CRM objects.",
        "arguments": [
          {
            "name": "object_type_to_merge",
            "alternative_names": [
              "entity_type_to_combine",
              "record_type_to_unify"
            ],
            "description": "The type of HubSpot CRM object to merge, such as 'contacts' or 'companies'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "object_id_to_merge",
            "alternative_names": [
              "secondary_object_id",
              "merge_target_object_id"
            ],
            "description": "The ID of the object to be merged into the primary object. It must be of the same type as the primary object.",
            "endpoint_argument_name": "objectIdToMerge"
          },
          {
            "name": "primary_object_id",
            "alternative_names": [
              "main_object_id",
              "lead_object_id"
            ],
            "description": "The ID of the object that will remain after the merge. Provide as a string.",
            "endpoint_argument_name": "primaryObjectId"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/{objectType}/merge",
      "tags": [
        "Basic"
      ],
      "summary": "Merge two objects with same type",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "objectIdToMerge",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "primaryObjectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"objectIdToMerge\",\n          \"primaryObjectId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"objectIdToMerge\": {\n            \"type\": \"string\"\n          },\n          \"primaryObjectId\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "post-/crm/v3/objects/{objectType}/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_hubspot_objects_batch",
        "description": {
          "tagline": "Archive a batch of HubSpot CRM objects by ID.",
          "detailed": "Use this tool to archive multiple objects in HubSpot CRM by specifying their IDs and object type, such as 'contacts' or 'companies'."
        },
        "return_annotation": "Confirmation of archived HubSpot objects.",
        "arguments": [
          {
            "name": "hubspot_object_type",
            "alternative_names": [
              "object_type_name",
              "type_of_object"
            ],
            "description": "Specifies the type of HubSpot CRM objects to archive (e.g., 'contacts', 'companies').",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "batch_object_ids",
            "alternative_names": [
              "object_id_list",
              "objects_to_archive"
            ],
            "description": "A JSON array of objects with 'id' fields to specify which HubSpot CRM objects to archive. Each entry should contain an 'id' key with the object ID as a string.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/{objectType}/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of objects by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/{objectType}/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_hubspot_objects_batch",
        "description": {
          "tagline": "Update multiple HubSpot CRM objects in a batch.",
          "detailed": "Use this tool to update a batch of objects in HubSpot CRM using internal IDs or unique property values. Useful for synchronizing or modifying multiple CRM records at once."
        },
        "return_annotation": "Confirmation of the batch update operation.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "hubspot_object_type",
              "crm_object_type"
            ],
            "description": "The type of HubSpot CRM object to update, such as 'contacts', 'companies', 'deals', or 'tickets'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "batch_update_data",
            "alternative_names": [
              "update_data_payload",
              "objects_update_details"
            ],
            "description": "JSON object containing an array of objects with details such as idProperty, objectWriteTraceId, id, and properties for batch updating.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/{objectType}/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of objects by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/{objectType}/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_objects_batch",
        "description": {
          "tagline": "Create a batch of objects in HubSpot CRM.",
          "detailed": "Use this tool to create multiple objects at once in HubSpot CRM. Suitable for handling bulk operations where several objects need to be created simultaneously."
        },
        "return_annotation": "Confirmation of object batch creation in HubSpot CRM.",
        "arguments": [
          {
            "name": "hubspot_object_type",
            "alternative_names": [
              "crm_entity_type",
              "object_category"
            ],
            "description": "Specifies the type of object to create in HubSpot, such as 'contacts', 'deals', or 'companies'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "object_batch_creation_data",
            "alternative_names": [
              "batch_objects_data",
              "hubspot_objects_batch_info"
            ],
            "description": "A JSON object containing details of objects to create, including 'properties', 'associations', and 'objectWriteTraceId'. Each object can include associations with categories and ID types, and should specify trace IDs for tracking.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/{objectType}/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of objects",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/{objectType}/batch/upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_or_create_hubspot_records",
        "description": {
          "tagline": "Create or update HubSpot CRM records in bulk.",
          "detailed": "This tool is used to batch upsert records in HubSpot CRM based on a unique identifier. It's ideal for managing large datasets where records may need to be created or updated if they already exist."
        },
        "return_annotation": "Confirmation of records creation or update.",
        "arguments": [
          {
            "name": "crm_object_type",
            "alternative_names": [
              "hubspot_object_type",
              "record_object_type"
            ],
            "description": "Specifies the type of CRM object to act upon, such as 'contacts', 'companies', etc.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "hubspot_records_data",
            "alternative_names": [
              "records_payload",
              "objects_data"
            ],
            "description": "A JSON array of records with unique identifiers and properties for upsert. Each entry includes 'idProperty' (unique property name), 'objectWriteTraceId' (trace ID), 'id' (object ID), and 'properties' (key-value pairs for object properties).",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/{objectType}/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of objects by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/{objectType}_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_hubspot_objects_page",
        "description": {
          "tagline": "Retrieve a page of HubSpot CRM objects.",
          "detailed": "Use this tool to read a page of objects from HubSpot CRM. Specify the desired properties through the `properties` query parameter to control the returned data."
        },
        "return_annotation": "A page of CRM objects from HubSpot.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "crm_object_type",
              "object_category"
            ],
            "description": "Specify the type of CRM object to retrieve, such as 'contacts', 'companies', or 'deals'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "max_results_per_page",
            "alternative_names": [
              "results_limit",
              "per_page_maximum"
            ],
            "description": "Specify the maximum number of results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "cursor_after"
            ],
            "description": "The token used to retrieve the next page of results. Obtained from the `paging.next.after` property of a previous response.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "requested_properties",
            "alternative_names": [
              "object_properties_list",
              "response_properties"
            ],
            "description": "List of properties to include in the response. Ignored if not present on the object(s).",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_with_past_values"
            ],
            "description": "List the properties to return with their historical values in the CRM objects.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "associated_ids_list",
              "retrieve_association_ids"
            ],
            "description": "Comma-separated object types to retrieve associated IDs for. Ignored if associations do not exist.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_archived_results_only",
            "alternative_names": [
              "include_archived_only",
              "fetch_archived_only"
            ],
            "description": "Return only the archived results if set to true.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/{objectType}",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of objects. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/{objectType}_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_crm_object",
        "description": {
          "tagline": "Create a CRM object and retrieve its details.",
          "detailed": "This tool creates a new CRM object in HubSpot with specified properties and returns the object, including its ID. Use it to add contacts, companies, deals, etc., to your HubSpot CRM."
        },
        "return_annotation": "A copy of the created CRM object, including the ID.",
        "arguments": [
          {
            "name": "crm_object_type",
            "alternative_names": [
              "hubspot_crm_object_type",
              "crm_record_type"
            ],
            "description": "Specify the type of CRM object to create, such as 'contact', 'company', or 'deal'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "object_properties",
            "alternative_names": [
              "crm_object_data",
              "new_object_details"
            ],
            "description": "A JSON object containing key-value pairs that define the properties for the new CRM object, including any associations. Specify the properties and association details as needed.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/{objectType}",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a CRM object with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard objects is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/{objectType}/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_hubspot_objects",
        "description": {
          "tagline": "Perform a search on HubSpot CRM objects by type.",
          "detailed": "Use this tool to search for objects in HubSpot CRM by specifying the object type. It helps in locating contacts, companies, deals, and other entities based on defined criteria."
        },
        "return_annotation": "Search results for specified object type in HubSpot CRM.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "hubspot_object_type",
              "crm_entity_type"
            ],
            "description": "Specify the type of object to search for in HubSpot, such as contacts, companies, or deals.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "search_criteria",
            "alternative_names": [
              "search_parameters",
              "query_details"
            ],
            "description": "JSON object specifying the search query, filters, limits, sorting, and properties to include in the results for a HubSpot CRM search.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/{objectType}/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "oauth",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-3/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_multiple_deals",
        "description": {
          "tagline": "Update multiple deals in the CRM system.",
          "detailed": "This tool updates multiple deals using their internal IDs or unique property values in the CRM. It should be called when you need to modify several deals at once within the HubSpot CRM."
        },
        "return_annotation": "Confirmation of updated deals.",
        "arguments": [
          {
            "name": "deals_data",
            "alternative_names": [
              "deals_update_payload",
              "deals_properties_update"
            ],
            "description": "A JSON array of objects with deal details, including 'id', 'idProperty', 'objectWriteTraceId', and 'properties' to update multiple deals.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-3/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of deals by internal ID, or unique property values",
      "description": "Update multiple deals using their internal IDs or unique property values.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.deals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-3/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_deals",
        "description": {
          "tagline": "Search for deals using specified criteria and filters.",
          "detailed": "This tool searches for deals in the HubSpot CRM using the provided criteria and filters. It should be called when there's a need to find deals that match specific conditions."
        },
        "return_annotation": "Results of the deal search based on specified criteria.",
        "arguments": [
          {
            "name": "deal_search_criteria",
            "alternative_names": [
              "deal_search_parameters",
              "deal_filter_criteria"
            ],
            "description": "JSON containing search query, limits, filters, and sorting options.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-3/search",
      "tags": [
        "Search"
      ],
      "summary": "Search for deals using various filters and criteria to retrieve specific records.",
      "description": "Search for deals using specified criteria and filters.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.deals.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-3/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_or_update_hubspot_records",
        "description": {
          "tagline": "Create or update HubSpot CRM records using unique properties.",
          "detailed": "This tool is used to create or update HubSpot CRM records by leveraging unique property values for identification. It ensures that records are upserted based on the provided unique identifier."
        },
        "return_annotation": "Confirmation of record creation or update in HubSpot CRM.",
        "arguments": [
          {
            "name": "hubspot_records_data",
            "alternative_names": [
              "hubspot_records_payload",
              "records_upsert_data"
            ],
            "description": "JSON array of objects containing 'idProperty', 'objectWriteTraceId', 'id', and 'properties'. Each object represents a record to create or update in HubSpot CRM. 'idProperty' is the unique identifier.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-3/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of deals by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.deals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-3/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_multiple_deals",
        "description": {
          "tagline": "Archive multiple deals using their IDs in HubSpot CRM.",
          "detailed": "This tool is used to archive multiple deals in HubSpot CRM by providing their IDs. It should be called when there is a need to batch archive deals efficiently."
        },
        "return_annotation": "Confirmation of deal archival status.",
        "arguments": [
          {
            "name": "deal_ids",
            "alternative_names": [
              "deal_identifiers",
              "deal_id_list"
            ],
            "description": "A list of deal IDs that need to be archived. This should be an array of strings, each representing a deal ID in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-3/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of deals by ID",
      "description": "Archive multiple deals using their IDs.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.deals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-3/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_crm_records",
        "description": {
          "tagline": "Retrieve CRM records by ID or custom unique property.",
          "detailed": "This tool retrieves CRM records using either their record ID or a custom unique value property specified by the `idProperty` parameter. It is useful for accessing detailed information about specific records stored in the CRM system."
        },
        "return_annotation": "Retrieved CRM records based on specified IDs or properties.",
        "arguments": [
          {
            "name": "record_retrieval_request_body",
            "alternative_names": [
              "crm_request_body",
              "record_request_payload"
            ],
            "description": "A JSON object containing 'propertiesWithHistory', 'idProperty', 'inputs', and 'properties'. Used to specify how records should be retrieved based on IDs or a custom property.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "retrieve_only_archived_records",
            "alternative_names": [
              "only_archived_records",
              "archived_records_only"
            ],
            "description": "Set to true to retrieve only archived CRM records.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-3/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of deals by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.deals.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/0-3/{dealId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_hubspot_deal_by_id",
        "description": {
          "tagline": "Retrieve HubSpot CRM deal information by Deal ID.",
          "detailed": "Use this tool to fetch detailed information about a specific deal in HubSpot CRM using the deal's unique ID. The response includes properties specified by the user."
        },
        "return_annotation": "Details of the specified HubSpot deal.",
        "arguments": [
          {
            "name": "deal_id",
            "alternative_names": [
              "unique_deal_id",
              "crm_deal_id"
            ],
            "description": "The unique identifier of the deal to retrieve from HubSpot CRM.",
            "endpoint_argument_name": "dealId"
          },
          {
            "name": "return_properties",
            "alternative_names": [
              "response_properties",
              "output_properties"
            ],
            "description": "List of properties to be returned in the response. Ignored if not present on the object.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "property_with_history_list",
              "historical_properties"
            ],
            "description": "Specify properties to return with their history of values. Use a comma-separated list.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "List of object types to retrieve associated IDs for. Ignored if associations do not exist.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "identifier_property",
              "unique_identifier_property"
            ],
            "description": "Specify the unique property name used to identify the deal. It defaults to an internal object ID if not provided.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "show_archived",
              "view_only_archived"
            ],
            "description": "Set to true to return only results that have been archived.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/0-3/{dealId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{dealId}`. `{dealId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.deals.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "dealId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The unique identifier of the deal to be retrieved."
            },
            "description": "The unique identifier of the deal to be retrieved.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/0-3/{dealId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_deal_in_hubspot",
        "description": {
          "tagline": "Archives a specific deal in HubSpot CRM.",
          "detailed": "Use this tool to move a deal identified by `dealId` to the recycling bin in HubSpot CRM, effectively archiving it."
        },
        "return_annotation": "Confirmation of deal archiving in HubSpot CRM.",
        "arguments": [
          {
            "name": "deal_id",
            "alternative_names": [
              "deal_identifier",
              "deal_unique_id"
            ],
            "description": "The unique identifier of the deal to be archived in HubSpot CRM.",
            "endpoint_argument_name": "dealId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/0-3/{dealId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{dealId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.deals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "dealId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The unique identifier of the deal to be archived."
            },
            "description": "The unique identifier of the deal to be archived.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/0-3/{dealId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_hubspot_deal",
        "description": {
          "tagline": "Update a specific deal in HubSpot CRM.",
          "detailed": "Use this tool to perform a partial update on a deal in HubSpot CRM by specifying the deal's internal ID or a unique property value. Only existing properties can be updated, and read-only properties will not be accepted."
        },
        "return_annotation": "Confirmation of the deal update in HubSpot CRM.",
        "arguments": [
          {
            "name": "deal_identifier",
            "alternative_names": [
              "deal_id",
              "deal_unique_id"
            ],
            "description": "The unique identifier of the deal to be updated in HubSpot CRM. Can be internal ID or unique property value.",
            "endpoint_argument_name": "dealId"
          },
          {
            "name": "deal_properties_update",
            "alternative_names": [
              "update_deal_properties",
              "deal_attributes_update"
            ],
            "description": "JSON object containing key-value pairs of properties to update for the deal. Non-existent properties will cause an error.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_name_for_unique_id"
            ],
            "description": "The name of a unique property to identify the deal instead of `dealId`.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/0-3/{dealId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{dealId}`or optionally a unique property value as specified by the `idProperty` query param. `{dealId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.deals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "dealId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The unique identifier of the deal to be updated."
            },
            "description": "The unique identifier of the deal to be updated.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-3/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_multiple_deals",
        "description": {
          "tagline": "Create multiple deals in HubSpot CRM in one request.",
          "detailed": "Use this tool to batch create multiple deals in HubSpot CRM efficiently. It should be called when you need to add several deals at once, reducing the number of individual requests."
        },
        "return_annotation": "Confirmation of deals successfully created.",
        "arguments": [
          {
            "name": "deal_creation_requests",
            "alternative_names": [
              "deals_to_create",
              "batch_deal_data"
            ],
            "description": "A JSON array of deal objects, each containing properties, associations, and an optional write trace ID for creating multiple deals in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-3/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of deals",
      "description": "Create multiple deals in a single request.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.deals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/0-3_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_deals_page",
        "description": {
          "tagline": "Read a page of deals from the CRM system.",
          "detailed": "Use this tool to retrieve a page of deals from HubSpot CRM. You can control the information returned by specifying desired properties through query parameters."
        },
        "return_annotation": "A page of CRM deals with specified properties.",
        "arguments": [
          {
            "name": "results_limit_per_page",
            "alternative_names": [
              "max_results_per_page",
              "page_results_limit"
            ],
            "description": "The maximum number of deals to display per page, as an integer.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "page_cursor_token",
              "next_page_token"
            ],
            "description": "The token for the paging cursor to retrieve the next page of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "deal_properties",
            "alternative_names": [
              "properties_to_return",
              "deal_fields"
            ],
            "description": "List the properties to include in the response as a comma-separated string. Ignored if not present.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_historical_values",
              "properties_with_value_history"
            ],
            "description": "A list of deal properties for which historical values are returned. Usage reduces max results per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "associate_objects",
              "related_object_types"
            ],
            "description": "List of object types to retrieve associated IDs for, separated by commas. If associations don't exist, they're ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "show_archived",
              "archived_results_only"
            ],
            "description": "Set to true to return only archived results; false to include active results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/0-3",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of deals. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.deals.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of deals that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of deals that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-3_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_deal",
        "description": {
          "tagline": "Create a new deal in HubSpot CRM.",
          "detailed": "Use this tool to create a new deal in HubSpot CRM by specifying the necessary properties. It returns the created deal object along with its unique ID."
        },
        "return_annotation": "The created deal object including its ID.",
        "arguments": [
          {
            "name": "deal_properties",
            "alternative_names": [
              "deal_data",
              "crm_deal_details"
            ],
            "description": "JSON object containing key-value pairs for setting properties for the new deal, and optionally, associations with other objects.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-3",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a deal with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard deals is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.deals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-3/merge_merge",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "merge_deals",
        "description": {
          "tagline": "Combine two deals into a single unified deal in HubSpot CRM.",
          "detailed": "Use this tool to merge two deals of the same type into one within HubSpot CRM. It is useful when consolidating duplicate or related deals into a single entry."
        },
        "return_annotation": "Details of the newly merged deal.",
        "arguments": [
          {
            "name": "deal_id_to_merge",
            "alternative_names": [
              "merge_deal_id",
              "secondary_deal_id"
            ],
            "description": "The ID of the deal to be merged into the primary deal.",
            "endpoint_argument_name": "objectIdToMerge"
          },
          {
            "name": "primary_deal_id",
            "alternative_names": [
              "main_deal_id",
              "lead_deal_id"
            ],
            "description": "The ID of the primary deal that will remain after merging.",
            "endpoint_argument_name": "primaryObjectId"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-3/merge",
      "tags": [
        "Basic"
      ],
      "summary": "Merge two deals with same type",
      "description": "Combine two deals of the same type into a single deal.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.deals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "objectIdToMerge",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "primaryObjectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"objectIdToMerge\",\n          \"primaryObjectId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"objectIdToMerge\": {\n            \"type\": \"string\"\n          },\n          \"primaryObjectId\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "post-/crm/v3/objects/deals/splits/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "manage_deal_splits",
        "description": {
          "tagline": "Create or replace deal splits for specific deals.",
          "detailed": "This tool is used to create or update deal splits for the specified deal IDs. The deal split percentages must add up to 100% and can have up to 8 decimal places. It is useful for managing deal contributions among different stakeholders."
        },
        "return_annotation": "Confirmation of deal splits creation or update.",
        "arguments": [
          {
            "name": "deal_splits_data",
            "alternative_names": [
              "deal_splits_input",
              "splits_data"
            ],
            "description": "A JSON object containing an array of deal objects, each with an ID and a splits array. Each split should include an ownerId and a percentage. Percentages within each deal must sum up to 1.0 (100%).",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/deals/splits/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or replace deal splits for deals with the provided IDs. Deal split percentages for each deal must sum up to 1.0 (100%) and may have up to 8 decimal places",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.dealsplits.read_write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "splits": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "percentage": {
                          "val_type": "number",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        },
                        "ownerId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "id": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "splits": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "percentage": {
                              "type": "number"
                            },
                            "ownerId": {
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "ownerId",
                            "percentage"
                          ]
                        }
                      },
                      "id": {
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "required": [
                      "id",
                      "splits"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"splits\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"splits\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"ownerId\",\n                      \"percentage\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"percentage\": {\n                        \"type\": \"number\"\n                      },\n                      \"ownerId\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                      }\n                    }\n                  }\n                },\n                \"id\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/deals/splits/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "read_batch_deal_splits",
        "description": {
          "tagline": "Fetch a batch of deal split objects by deal ID.",
          "detailed": "This tool reads a batch of deal split objects using their associated deal object internal IDs, allowing access to multiple deal splits in one request."
        },
        "return_annotation": "Batch of deal split objects by deal ID.",
        "arguments": [
          {
            "name": "deal_object_internal_ids",
            "alternative_names": [
              "deal_ids",
              "deal_internal_ids"
            ],
            "description": "A JSON array of deal object internal IDs to fetch their split details. Each ID should be a string.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/deals/splits/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of deal split objects by their associated deal object internal ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.dealsplits.read_write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/discounts/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_discounts",
        "description": {
          "tagline": "Search for discounts in the HubSpot CRM.",
          "detailed": "Use this tool to search for discount records in the HubSpot CRM. It is useful when you need to find specific discounts based on certain criteria."
        },
        "return_annotation": "Information about discounts matching the search criteria.",
        "arguments": [
          {
            "name": "search_criteria",
            "alternative_names": [
              "discount_search_parameters",
              "discount_query_details"
            ],
            "description": "A JSON object containing search criteria such as query string, limit, paging cursor, sort order, property names, and filter groups to define the search parameters for discounts in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/discounts/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/discounts/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_discounts_batch",
        "description": {
          "tagline": "Update multiple discounts by ID or unique properties.",
          "detailed": "Use this tool to update a batch of discounts in HubSpot CRM by specifying internal IDs or unique property values. It is suitable for scenarios where multiple discount records need to be updated simultaneously."
        },
        "return_annotation": "Information about the update status of discounts.",
        "arguments": [
          {
            "name": "discount_update_requests",
            "alternative_names": [
              "discount_update_payload",
              "update_discounts_data"
            ],
            "description": "An array of objects, each with properties like 'id', 'idProperty', 'objectWriteTraceId', and 'properties'. These specify the discounts to update in the batch.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/discounts/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of discounts by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/discounts/{discountId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_discount_details",
        "description": {
          "tagline": "Retrieve details of a discount by its ID.",
          "detailed": "Use this tool to get detailed information about a specific discount object by providing its ID. The tool allows customization of returned properties through query parameters."
        },
        "return_annotation": "Details of the specified discount.",
        "arguments": [
          {
            "name": "discount_identifier",
            "alternative_names": [
              "discount_id",
              "discount_key"
            ],
            "description": "The unique identifier for the discount object to retrieve. This can either be the internal ID or a value of a unique property specified by `idProperty`.",
            "endpoint_argument_name": "discountId"
          },
          {
            "name": "return_properties",
            "alternative_names": [
              "properties_to_return",
              "requested_properties"
            ],
            "description": "Comma-separated list of properties to return in response. Ignored if not present on the object.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_previous_values",
              "historical_properties"
            ],
            "description": "List of properties to retrieve along with their value history. Ignored if properties are missing.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "Comma-separated list of object types to retrieve associated IDs for. Non-existent associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "unique_property_key"
            ],
            "description": "The property name for uniquely identifying the discount object. Use when the property value is not the default ID.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "archived_results_only",
            "alternative_names": [
              "return_only_archived",
              "get_only_archived"
            ],
            "description": "Set to true to return only results that have been archived.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/discounts/{discountId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{discountId}`. `{discountId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "discountId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/discounts/{discountId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_discount",
        "description": {
          "tagline": "Delete a discount and move it to the recycling bin.",
          "detailed": "Use this tool to delete a discount object in HubSpot CRM by moving it to the recycling bin. Call it when you need to remove discounts identified by a specific discount ID."
        },
        "return_annotation": "Confirmation of discount object deletion to recycling bin.",
        "arguments": [
          {
            "name": "discount_identifier",
            "alternative_names": [
              "discount_id",
              "identifier_for_discount"
            ],
            "description": "The unique identifier of the discount object to delete and move to the recycling bin.",
            "endpoint_argument_name": "discountId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/discounts/{discountId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{discountId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "discountId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/discounts/{discountId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_discount_details",
        "description": {
          "tagline": "Update specific properties of a discount in HubSpot CRM.",
          "detailed": "Use this tool to perform a partial update on a discount object in HubSpot CRM. Specify the discount using its internal ID or by a unique property using `idProperty`. Only overwrite existing properties. Errors occur with read-only or non-existent properties. Clear properties by passing an empty string."
        },
        "return_annotation": "Confirmation of discount update or error details.",
        "arguments": [
          {
            "name": "discount_identifier",
            "alternative_names": [
              "discount_id_value",
              "discount_reference"
            ],
            "description": "The unique identifier for the discount object. This can be the internal ID or a unique property specified by `idProperty`.",
            "endpoint_argument_name": "discountId"
          },
          {
            "name": "discount_properties_update",
            "alternative_names": [
              "update_discount_properties",
              "discount_update_payload"
            ],
            "description": "A JSON object containing key-value pairs representing the properties of the discount to update. Pass an empty string to clear a property.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_id_property",
              "identifier_property_name"
            ],
            "description": "The name of a unique property to identify the discount object. Use this instead of the internal discount ID if needed.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/discounts/{discountId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{discountId}`or optionally a unique property value as specified by the `idProperty` query param. `{discountId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "discountId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/discounts/batch/create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_discounts_hubspot",
        "description": {
          "tagline": "Create a batch of discounts in HubSpot.",
          "detailed": "Use this tool to create multiple discounts simultaneously in HubSpot CRM. It should be called when batch creation of discounts is needed, providing an efficient way to manage discount entries."
        },
        "return_annotation": "Information about the created batch of discounts.",
        "arguments": [
          {
            "name": "batch_discounts_data",
            "alternative_names": [
              "discounts_batch_payload",
              "batch_discounts_request"
            ],
            "description": "JSON data for creating a batch of discounts. It includes an array of discount entries, each with properties like associations, object write trace ID, and specific properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/discounts/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of discounts",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/discounts/batch/upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_discount_records",
        "description": {
          "tagline": "Create or update discount records in HubSpot CRM.",
          "detailed": "This tool allows the creation or update of discount records in HubSpot CRM using unique property values specified by the `idProperty` query parameter. It is useful for ensuring that discount data is up-to-date and accurately maintained."
        },
        "return_annotation": "Confirmation of discount records created or updated.",
        "arguments": [
          {
            "name": "discount_records_data",
            "alternative_names": [
              "discount_records_input",
              "discount_records_payload"
            ],
            "description": "A JSON object containing an array of discount records, each with a unique idProperty, objectWriteTraceId, id, and properties key-value pairs.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/discounts/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of discounts by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/discounts/batch/archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_discounts_batch",
        "description": {
          "tagline": "Archive a batch of discounts by their IDs in HubSpot CRM.",
          "detailed": "This tool is used to archive multiple discount objects in HubSpot CRM by providing their IDs. It should be called when there's a need to remove or deactivate several discounts at once for organizational or business purposes."
        },
        "return_annotation": "Batch discount archive status.",
        "arguments": [
          {
            "name": "discount_ids_to_archive",
            "alternative_names": [
              "discounts_to_archive",
              "ids_to_archive"
            ],
            "description": "A JSON array containing the IDs of discounts to archive in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/discounts/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of discounts by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/discounts",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_hubspot_discounts",
        "description": {
          "tagline": "Retrieve a page of discounts from HubSpot CRM.",
          "detailed": "Use this tool to read a page of discounts from HubSpot CRM. You can control the returned data using the `properties` query parameter."
        },
        "return_annotation": "A page of discount details from HubSpot CRM.",
        "arguments": [
          {
            "name": "maximum_results_per_page",
            "alternative_names": [
              "results_limit",
              "per_page_limit"
            ],
            "description": "The maximum number of results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "pagination_token",
              "cursor_token"
            ],
            "description": "The cursor token for pagination. Use the token from the last successfully read resource to fetch the next page.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "returned_discount_properties",
            "alternative_names": [
              "discount_attributes",
              "requested_properties"
            ],
            "description": "List of properties to include in the response. Comma-separated, ignored if not present.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_with_past_values"
            ],
            "description": "List of properties to return with their history; reduces number of discounts returned per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_ids",
              "linked_object_references"
            ],
            "description": "A list of object types to retrieve associated IDs for. Unknown associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived",
            "alternative_names": [
              "fetch_exclusively_archived",
              "retrieve_archived_only"
            ],
            "description": "Set to true to return only archived discounts, false to include all.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/discounts",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of discounts. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of discounts that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of discounts that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/discounts",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_discount",
        "description": {
          "tagline": "Creates a discount and returns its details.",
          "detailed": "Use this tool to create a new discount with specified properties in HubSpot CRM. It returns the created discount object along with its ID."
        },
        "return_annotation": "Newly created discount object, including its ID.",
        "arguments": [
          {
            "name": "discount_properties",
            "alternative_names": [
              "discount_details",
              "discount_data"
            ],
            "description": "JSON object containing key-value pairs for setting discount properties and associations, including types and association IDs.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/discounts",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a discount with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard discounts is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/discounts/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_discount_records",
        "description": {
          "tagline": "Retrieve discount records by ID or custom property.",
          "detailed": "This tool retrieves discount records from HubSpot CRM by specifying record IDs or a unique custom property. Use it to fetch detailed information about discounts in a batch."
        },
        "return_annotation": "Batch of discount records based on specified IDs.",
        "arguments": [
          {
            "name": "discount_request_body",
            "alternative_names": [
              "discount_batch_input",
              "discount_retrieval_criteria"
            ],
            "description": "JSON object containing properties, idProperty for custom IDs, inputs for record IDs, and propertiesWithHistory for detailed properties.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "archived",
            "alternative_names": [
              "archived_mode",
              "archived_filter"
            ],
            "description": "Set to true to return only archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/discounts/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of discounts by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/emails/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_of_emails",
        "description": {
          "tagline": "Create a batch of emails with specified properties.",
          "detailed": "This tool is used to create multiple emails at once in a batch, using specified properties, and returns the details of the created email objects. Ideal for situations where several emails need to be generated and saved in the CRM system at once."
        },
        "return_annotation": "Details of the created email objects.",
        "arguments": [
          {
            "name": "email_batch_details",
            "alternative_names": [
              "batch_email_data",
              "email_creation_inputs"
            ],
            "description": "JSON containing an array of email objects with their properties and associations. Each object can include details like associations, object write trace ID, and other specific properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/emails/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of emails",
      "description": "Create a batch of emails with specified properties and return the created objects.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/emails_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_emails_page",
        "description": {
          "tagline": "Retrieve a page of emails from HubSpot CRM.",
          "detailed": "This tool reads a page of emails from HubSpot CRM. You can control which email properties are returned by using the `properties` query parameter."
        },
        "return_annotation": "A page of emails with selected properties.",
        "arguments": [
          {
            "name": "max_results_per_page",
            "alternative_names": [
              "results_page_limit",
              "page_size_limit"
            ],
            "description": "The maximum number of email results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "cursor_token"
            ],
            "description": "The token for the next page of results, from the `paging.next.after` field of the previous response.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "returned_email_properties",
            "alternative_names": [
              "email_properties_to_return",
              "selected_email_properties"
            ],
            "description": "List the email properties to be included in the response. Specify as an array of strings representing the desired properties.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historic_properties",
              "email_properties_history"
            ],
            "description": "List of properties to return with their history of previous values. Reduces maximum emails per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "A list of object types to retrieve associated IDs for. If any specified associations don't exist, they will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived",
            "alternative_names": [
              "only_include_archived",
              "fetch_only_archived"
            ],
            "description": "Set to true to retrieve only archived emails.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/emails",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of emails. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of emails that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of emails that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/emails_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_email",
        "description": {
          "tagline": "Create an email in HubSpot CRM and retrieve its details.",
          "detailed": "Use this tool to create a new email in HubSpot CRM by specifying certain properties. It returns the created email object along with its ID, facilitating the organization and tracking of email records within the CRM."
        },
        "return_annotation": "Returns a copy of the created email object, including its ID.",
        "arguments": [
          {
            "name": "email_properties",
            "alternative_names": [
              "email_data",
              "email_attributes"
            ],
            "description": "JSON object containing key-value pairs for email properties, including associations and other attributes.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/emails",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a email with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard emails is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/emails/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_email_records",
        "description": {
          "tagline": "Retrieve email records by ID or custom property.",
          "detailed": "This tool retrieves email records from HubSpot CRM by providing record IDs or using a custom unique value property. It should be called when you need details about specific email records stored within HubSpot."
        },
        "return_annotation": "Batch email record details.",
        "arguments": [
          {
            "name": "email_records_data",
            "alternative_names": [
              "email_records_request_body",
              "retrieve_email_records_input"
            ],
            "description": "JSON data for fetching email records. Includes properties like `propertiesWithHistory`, `idProperty`, `inputs`, and `properties` to define retrieval specifics.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "only_archived_records",
            "alternative_names": [
              "include_archived_emails",
              "get_only_archived"
            ],
            "description": "Set to true to return only archived email records from HubSpot CRM.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/emails/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of emails by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/emails/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_or_update_hubspot_emails",
        "description": {
          "tagline": "Create or update HubSpot email records in batch.",
          "detailed": "This tool allows you to create or update email records in HubSpot's CRM by using a unique property value to identify the records. It's useful when you need to manage email data efficiently by ensuring existing records are updated and new ones are created where needed."
        },
        "return_annotation": "Confirmation of created or updated email records.",
        "arguments": [
          {
            "name": "email_records_data",
            "alternative_names": [
              "emails_batch_data",
              "hubspot_email_properties"
            ],
            "description": "JSON array containing email records, each with `idProperty`, `objectWriteTraceId`, `id`, and `properties` for batch upsert.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/emails/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of emails by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/emails/{emailId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_email_by_id",
        "description": {
          "tagline": "Retrieve email object details using its ID.",
          "detailed": "Use this tool to get detailed information about an email object in HubSpot CRM using its unique ID. You can control the output via query parameters."
        },
        "return_annotation": "Email object details based on the provided ID.",
        "arguments": [
          {
            "name": "email_id",
            "alternative_names": [
              "email_identifier",
              "email_object_id"
            ],
            "description": "The unique ID or property value of the email object to be retrieved.",
            "endpoint_argument_name": "emailId"
          },
          {
            "name": "returned_properties",
            "alternative_names": [
              "response_properties",
              "output_properties"
            ],
            "description": "A list of properties to return for the email object. Properties not present on the object will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_previous_values",
              "historical_properties"
            ],
            "description": "Comma-separated property names to include their history of previous values in the response. Non-existent properties will be ignored.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "object_types_for_associated_ids",
            "alternative_names": [
              "associated_object_types",
              "retrieve_association_ids_for_types"
            ],
            "description": "List the object types to retrieve associated IDs. If no associations exist, they will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_object_property",
              "property_identifier_name"
            ],
            "description": "Specify the property name that holds unique values for the email object to be retrieved.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "include_only_archived_results",
              "archived_results_only"
            ],
            "description": "Set to true to return only archived results. Set to false to return active results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/emails/{emailId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{emailId}`. `{emailId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "emailId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/emails/{emailId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_email",
        "description": {
          "tagline": "Move an email to the recycling bin using its ID.",
          "detailed": "This tool moves an email identified by `emailId` to the recycling bin in HubSpot CRM. It should be used when an email needs to be archived or deleted from active view."
        },
        "return_annotation": "Confirmation of email archival.",
        "arguments": [
          {
            "name": "email_id",
            "alternative_names": [
              "email_identifier",
              "email_key"
            ],
            "description": "The unique identifier of the email to be archived in HubSpot CRM.",
            "endpoint_argument_name": "emailId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/emails/{emailId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{emailId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "emailId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/emails/{emailId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_email_in_hubspot_crm",
        "description": {
          "tagline": "Updates an email object in HubSpot CRM with new property values.",
          "detailed": "This tool updates properties of an email object in HubSpot CRM, identified by the internal ID or a unique property. Read-only or nonexistent properties will cause errors, and properties can be cleared by passing an empty string."
        },
        "return_annotation": "Details of the updated email object in HubSpot CRM.",
        "arguments": [
          {
            "name": "email_identifier",
            "alternative_names": [
              "email_id_key",
              "unique_email_property"
            ],
            "description": "The unique identifier for the email object, either the internal ID or a unique property value.",
            "endpoint_argument_name": "emailId"
          },
          {
            "name": "email_properties_update",
            "alternative_names": [
              "update_email_properties",
              "modify_email_properties"
            ],
            "description": "JSON object containing key-value pairs to update email properties. Provide property names and their new values. Pass an empty string to clear a property's value.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier",
              "property_name_for_id"
            ],
            "description": "Name of a unique property for identifying the email object, used instead of default ID.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/emails/{emailId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{emailId}`or optionally a unique property value as specified by the `idProperty` query param. `{emailId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "emailId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/emails/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_emails_batch",
        "description": {
          "tagline": "Archive a batch of emails by their IDs.",
          "detailed": "Use this tool to archive multiple emails in the HubSpot CRM by providing their unique IDs. Useful for organizing or cleaning up email records."
        },
        "return_annotation": "Confirmation of email batch archiving.",
        "arguments": [
          {
            "name": "email_ids_to_archive",
            "alternative_names": [
              "ids_of_emails_to_archive",
              "emails_batch_ids"
            ],
            "description": "A JSON array of email IDs to be archived. Each element should be an object with an 'id' key, containing the email's unique ID.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/emails/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of emails by ID",
      "description": "Archive a batch of emails identified by their IDs.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/emails/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_batch_emails",
        "description": {
          "tagline": "Update a batch of emails by their IDs or unique properties.",
          "detailed": "Use this tool to update multiple emails in bulk using their internal IDs or unique property values in HubSpot CRM."
        },
        "return_annotation": "Confirmation of batch email updates.",
        "arguments": [
          {
            "name": "email_batch_update_data",
            "alternative_names": [
              "batch_update_payload",
              "email_update_requests"
            ],
            "description": "JSON object containing arrays of email updates, each with `idProperty`, `objectWriteTraceId`, `id`, and `properties` fields.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/emails/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of emails by internal ID, or unique property values",
      "description": "Update a batch of emails using their internal IDs or unique property values.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/emails/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_emails",
        "description": {
          "tagline": "Search for emails based on specified query parameters.",
          "detailed": "Use this tool to perform a search for emails in the CRM system, returning results that match the given criteria."
        },
        "return_annotation": "Matching email search results.",
        "arguments": [
          {
            "name": "email_search_parameters",
            "alternative_names": [
              "email_search_query",
              "email_search_options"
            ],
            "description": "A JSON object specifying query, limit, paging, sorting, properties, and filters for searching emails. Includes criteria for finding and sorting email data.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/emails/search",
      "tags": [
        "Search"
      ],
      "summary": "Search for emails using specified criteria and filters.",
      "description": "Perform a search for emails based on the provided query parameters and return matching results.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/feedback_submissions/{feedbackSubmissionId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_feedback_submission_by_id",
        "description": {
          "tagline": "Retrieve feedback submission details by ID.",
          "detailed": "Use this tool to obtain details of a feedback submission using its ID. You can specify additional properties to control the details returned."
        },
        "return_annotation": "Details of the specified feedback submission.",
        "arguments": [
          {
            "name": "feedback_submission_id",
            "alternative_names": [
              "feedback_id",
              "submission_id"
            ],
            "description": "The ID of the feedback submission to retrieve details for. This can be the internal object ID or a unique property value specified by `idProperty`.",
            "endpoint_argument_name": "feedbackSubmissionId"
          },
          {
            "name": "return_properties",
            "alternative_names": [
              "response_properties_list",
              "feedback_properties"
            ],
            "description": "List of properties to return in the response. Non-existent properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_history_list",
              "historical_properties"
            ],
            "description": "Comma-separated list of properties to return with their history of previous values. Ignored if not present on the object.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "A list of object types to retrieve associated IDs for. If nonexistent, they will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "id_property_name"
            ],
            "description": "The name of a property whose values are unique for the feedback submission object.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "archived_results_only",
              "archived_submissions_only"
            ],
            "description": "Set to true to return only archived results, false for active ones.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/feedback_submissions/{feedbackSubmissionId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{feedbackSubmissionId}`. `{feedbackSubmissionId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read",
        "crm.objects.feedback_submissions.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "feedbackSubmissionId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/feedback_submissions/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_feedback_submissions",
        "description": {
          "tagline": "Search for feedback submissions in HubSpot CRM.",
          "detailed": "This tool allows you to search for feedback submissions within the HubSpot CRM, helping you find specific feedback entries based on your search criteria."
        },
        "return_annotation": "Returns feedback submission search results.",
        "arguments": [
          {
            "name": "feedback_search_body",
            "alternative_names": [
              "search_request_body",
              "feedback_submission_search"
            ],
            "description": "A JSON object containing parameters like query, limit, after, sorts, properties, and filterGroups for searching feedback submissions. This includes defining search criteria, sorting, and pagination.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/feedback_submissions/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read",
        "crm.objects.feedback_submissions.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/feedback_submissions/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_feedback_records",
        "description": {
          "tagline": "Retrieve feedback submission records by ID or custom properties.",
          "detailed": "Use this tool to fetch feedback submission records from HubSpot CRM using either a record ID or a custom unique value property (`idProperty`)."
        },
        "return_annotation": "List of feedback submission records.",
        "arguments": [
          {
            "name": "feedback_request_body",
            "alternative_names": [
              "feedback_data_payload",
              "feedback_records_payload"
            ],
            "description": "JSON object containing `propertiesWithHistory`, `idProperty`, `inputs`, and `properties` to specify retrieval details.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "archived_results_only",
              "fetch_archived_only"
            ],
            "description": "Set to true to return only archived feedback submission records.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/feedback_submissions/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of feedback submissions by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read",
        "crm.objects.feedback_submissions.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/feedback_submissions_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_feedback_submissions",
        "description": {
          "tagline": "Retrieve a page of feedback submissions from the CRM.",
          "detailed": "This tool retrieves a page of feedback submissions from HubSpot CRM. It allows control over the returned data using the 'properties' query parameter."
        },
        "return_annotation": "A page of feedback submissions with specified properties.",
        "arguments": [
          {
            "name": "max_results_per_page",
            "alternative_names": [
              "results_limit",
              "page_limit"
            ],
            "description": "Specify the maximum number of results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "cursor_after"
            ],
            "description": "The token of the last read resource for fetching the next page of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "properties_to_return",
            "alternative_names": [
              "feedback_submission_properties",
              "fields_to_retrieve"
            ],
            "description": "List of properties to return for each feedback submission. Comma separated. Ignores non-existing properties.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_previous_values",
              "historical_properties"
            ],
            "description": "A list of property names whose history of values should be returned. Properties not present will be ignored. Reduces the maximum number of submissions per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "Comma separated list of object types to retrieve associated IDs for, like 'contacts' or 'companies'. Ignored if nonexistent.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "retrieve_only_archived",
              "fetch_archived_exclusively"
            ],
            "description": "Set to true to return only archived feedback submissions; false to include both archived and active submissions.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/feedback_submissions",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of feedback submissions. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read",
        "crm.objects.feedback_submissions.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of feedback submissions that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of feedback submissions that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/fees/{feeId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_fee_details",
        "description": {
          "tagline": "Retrieve information about a specific fee by ID.",
          "detailed": "This tool is used to get detailed information about a fee object in HubSpot CRM using the fee's unique identifier. It can control the returned data with optional query parameters."
        },
        "return_annotation": "Detailed information about a specific fee object.",
        "arguments": [
          {
            "name": "fee_identifier",
            "alternative_names": [
              "fee_id_value",
              "unique_fee_id"
            ],
            "description": "The unique identifier for the fee object to retrieve. It can be the internal object ID or a value from a unique property specified by the `idProperty` parameter.",
            "endpoint_argument_name": "feeId"
          },
          {
            "name": "return_properties",
            "alternative_names": [
              "response_attributes",
              "output_fields"
            ],
            "description": "A list of properties to return for the fee object. Any non-existent properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_history_list",
              "historical_properties"
            ],
            "description": "List of properties to return with their history of previous values, specified as strings. Non-existent properties will be ignored.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_entities",
              "linked_object_types"
            ],
            "description": "A list of object types to retrieve associated IDs for. Non-existent associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_id_property",
              "unique_key_property"
            ],
            "description": "Specify the property name with unique values for the fee object.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "only_return_archived_results",
            "alternative_names": [
              "archived_only",
              "return_only_archived"
            ],
            "description": "Set to true to retrieve only archived results. False for non-archived.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/fees/{feeId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{feeId}`. `{feeId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "feeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/fees/{feeId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_fee_object",
        "description": {
          "tagline": "Move a fee object to the recycling bin using its fee ID.",
          "detailed": "Call this tool to delete a fee object in HubSpot CRM. Useful for removing unwanted or outdated fee records by providing the specific fee ID."
        },
        "return_annotation": "Confirmation of fee object deletion in HubSpot CRM.",
        "arguments": [
          {
            "name": "fee_id_to_delete",
            "alternative_names": [
              "fee_identifier",
              "fee_ref_id"
            ],
            "description": "The unique identifier of the fee object to be deleted in HubSpot CRM.",
            "endpoint_argument_name": "feeId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/fees/{feeId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{feeId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "feeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/fees/{feeId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_fee_details",
        "description": {
          "tagline": "Update specific details of a fee in the CRM.",
          "detailed": "This tool performs a partial update of a fee record identified by its internal ID or another unique property. Use it to overwrite existing property values or clear them by passing an empty string. Be aware that read-only or non-existent properties will cause an error."
        },
        "return_annotation": "Confirmation of the fee details update operation.",
        "arguments": [
          {
            "name": "fee_identifier",
            "alternative_names": [
              "fee_id",
              "unique_fee_identifier"
            ],
            "description": "The ID or unique property value that identifies the fee object to update.",
            "endpoint_argument_name": "feeId"
          },
          {
            "name": "fee_properties_to_update",
            "alternative_names": [
              "fee_details_to_modify",
              "fee_attributes_to_adjust"
            ],
            "description": "JSON object containing key-value pairs to update fee properties. Read-only or non-existent properties will cause an error.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "distinct_property_name"
            ],
            "description": "Specify the unique property name to identify the object instead of the default ID.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/fees/{feeId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{feeId}`or optionally a unique property value as specified by the `idProperty` query param. `{feeId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "feeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/fees/batch/upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_hubspot_fees",
        "description": {
          "tagline": "Create or update fee records in HubSpot CRM.",
          "detailed": "This tool should be called to create new fee records or update existing ones in HubSpot CRM. It uses a unique property value specified by the `idProperty` query parameter to identify records. Ideal for batch processing of fee information."
        },
        "return_annotation": "Creates or updates fee records in HubSpot CRM.",
        "arguments": [
          {
            "name": "fee_records_data",
            "alternative_names": [
              "fee_records_payload",
              "fees_data_batch"
            ],
            "description": "A JSON array of fee records to create or update, including unique IDs, properties, and trace identifiers.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/fees/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of fees by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/fees",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_crm_fees",
        "description": {
          "tagline": "Fetch a list of fees from the CRM.",
          "detailed": "Retrieve a page of fee objects from the CRM, allowing control over returned properties through query parameters."
        },
        "return_annotation": "A list of fee objects from the CRM system.",
        "arguments": [
          {
            "name": "maximum_results_per_page",
            "alternative_names": [
              "max_results_page",
              "results_limit"
            ],
            "description": "The maximum number of fees to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "cursor_token_next",
              "pagination_token"
            ],
            "description": "The token used to retrieve the next page of results. Use the token returned in `paging.next.after` from a previous response.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "fee_properties_to_return",
            "alternative_names": [
              "fee_attributes",
              "fee_columns"
            ],
            "description": "List of properties to be returned in the response. If a property is not present, it will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "property_with_past_values"
            ],
            "description": "List of properties to return with their history. Reduces max number of fees per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "Comma-separated list of object types to retrieve associated IDs for. Ignored if associations don't exist.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "retrieve_archived_fees",
              "fetch_archived_only"
            ],
            "description": "Set to true to return only results that have been archived.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/fees",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of fees. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of fees that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of fees that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/fees",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_fee_in_crm",
        "description": {
          "tagline": "Create a fee in the CRM and receive the object's details.",
          "detailed": "Call this tool to add a new fee in the CRM system using specified properties. It returns the newly created fee object along with its ID."
        },
        "return_annotation": "A copy of the created fee object, including its ID.",
        "arguments": [
          {
            "name": "fee_properties",
            "alternative_names": [
              "fee_attributes",
              "fee_details"
            ],
            "description": "JSON object containing key-value pairs for setting properties of the new fee. Also, include any associations with specified types and categories.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/fees",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a fee with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard fees is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/fees/batch/create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_fees",
        "description": {
          "tagline": "Create a batch of fees in HubSpot CRM.",
          "detailed": "This tool allows the creation of multiple fees in a single batch within HubSpot CRM. It should be called when there is a need to add a set of new fees to the CRM system efficiently."
        },
        "return_annotation": "Details of the created fees batch.",
        "arguments": [
          {
            "name": "fees_batch_request_body",
            "alternative_names": [
              "fees_batch_payload",
              "create_fees_batch_body"
            ],
            "description": "A JSON object containing the details for each fee to be created, including associations and properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/fees/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of fees",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/fees/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_fees_in_crm",
        "description": {
          "tagline": "Search for fees in HubSpot CRM.",
          "detailed": "Use this tool to search for fees in the HubSpot CRM database. It should be called when you need to find specific fee records based on search criteria."
        },
        "return_annotation": "Search results for fees in the CRM system.",
        "arguments": [
          {
            "name": "search_criteria",
            "alternative_names": [
              "fee_search_parameters",
              "crm_search_details"
            ],
            "description": "The search criteria in JSON format, including query, limit, paging token, sorting order, properties to include, and filter groups.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/fees/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/fees/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_batch_fees",
        "description": {
          "tagline": "Update multiple fees by internal ID or unique properties.",
          "detailed": "Use this tool to update a batch of fees in HubSpot CRM by specifying internal IDs or unique property values. Call this tool when you need to make bulk updates to fee records."
        },
        "return_annotation": "Confirmation of batch fee updates.",
        "arguments": [
          {
            "name": "batch_fee_updates",
            "alternative_names": [
              "fee_update_requests",
              "update_batch_request"
            ],
            "description": "JSON object containing a list of fee updates. Each update includes properties like 'id', 'idProperty', 'properties', and 'objectWriteTraceId'.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/fees/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of fees by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/fees/batch/archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_fees_batch",
        "description": {
          "tagline": "Archives a batch of fees by their IDs in HubSpot CRM.",
          "detailed": "Use this tool to archive multiple fee records in HubSpot CRM by providing their IDs. Ideal for managing outdated or unnecessary fee entries efficiently."
        },
        "return_annotation": "Confirmation of archived fees batch.",
        "arguments": [
          {
            "name": "fee_ids_to_archive",
            "alternative_names": [
              "fees_batch_ids",
              "ids_for_archiving"
            ],
            "description": "A JSON array containing the IDs of the fees to archive. Each ID should be a string.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/fees/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of fees by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/fees/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_fee_records",
        "description": {
          "tagline": "Retrieve fee records by ID or custom property.",
          "detailed": "Use this tool to retrieve fee records from HubSpot CRM by specifying record IDs or using a custom unique value property. Useful for accessing detailed record information in batch."
        },
        "return_annotation": "List of fee records with specified IDs or custom properties.",
        "arguments": [
          {
            "name": "fee_records_request",
            "alternative_names": [
              "fee_entries_request",
              "fee_data_request"
            ],
            "description": "JSON object including propertiesWithHistory, idProperty, inputs, and properties to specify how fee records are retrieved.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "include_archived_results",
              "fetch_archived_records"
            ],
            "description": "Set to true to return only archived fee records. False to return active records.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/fees/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of fees by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/goal_targets/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_goal_targets_batch",
        "description": {
          "tagline": "Batch create multiple goal targets in HubSpot CRM.",
          "detailed": "Use this tool to create multiple goal targets at once in HubSpot CRM. It is suited for managing and setting up several targets simultaneously, aiding in efficient CRM organization."
        },
        "return_annotation": "Confirmation of batch creation of goal targets.",
        "arguments": [
          {
            "name": "goal_targets_data",
            "alternative_names": [
              "goal_target_batch_data",
              "goal_targets_input"
            ],
            "description": "A JSON array containing multiple goal target objects. Each target object must include details such as associations, objectWriteTraceId, and properties. This enables the creation of multiple goal targets within HubSpot CRM in one operation.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/goal_targets/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of goal targets",
      "description": "Create multiple goal targets in a single batch operation.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.goals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/goal_targets/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_goal_targets",
        "description": {
          "tagline": "Retrieve goal target records using record ID or custom value.",
          "detailed": "Use this tool to retrieve goal target records from HubSpot CRM by providing either the record ID or a custom unique value property."
        },
        "return_annotation": "Records retrieved by record ID or custom unique value property.",
        "arguments": [
          {
            "name": "goal_target_request_body",
            "alternative_names": [
              "goal_target_body",
              "target_request_data"
            ],
            "description": "JSON object with 'propertiesWithHistory', 'idProperty', 'inputs', and 'properties' to specify record retrieval criteria.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "fetch_archived_records_only",
              "show_only_archived_targets"
            ],
            "description": "Set to true to return only the archived records.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/goal_targets/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of goal targets by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.goals.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/goal_targets/{goalTargetId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_goal_target_by_id",
        "description": {
          "tagline": "Retrieve goal target object details using its ID.",
          "detailed": "This tool retrieves details of a goal target object identified by `goalTargetId`. It can use either the default internal object ID or any unique property value specified by the `idProperty` query parameter. The `properties` query parameter can control what information is returned."
        },
        "return_annotation": "Details of the specified goal target object.",
        "arguments": [
          {
            "name": "goal_target_id",
            "alternative_names": [
              "goal_target_identifier",
              "target_id"
            ],
            "description": "The unique identifier for the goal target object. Can be the internal object ID or a unique property value specified by `idProperty`.",
            "endpoint_argument_name": "goalTargetId"
          },
          {
            "name": "returned_properties",
            "alternative_names": [
              "properties_list",
              "response_properties"
            ],
            "description": "List of properties to return. Ignored if not present on the object.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "property_history_list",
              "properties_history_included"
            ],
            "description": "Comma-separated properties to return with their value histories. Ignored if properties are absent on the object.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "Specify object types to retrieve associated IDs. If not present, they will be ignored. Use commas to separate multiple types.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "unique_id_field"
            ],
            "description": "The property name used as a unique identifier for the goal target object.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "archived_results",
            "alternative_names": [
              "only_archived",
              "return_only_archived"
            ],
            "description": "Set to true to return only archived results. Default is false.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/goal_targets/{goalTargetId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{goalTargetId}`. `{goalTargetId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.goals.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "goalTargetId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/goal_targets/{goalTargetId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_goal_target",
        "description": {
          "tagline": "Deletes a goal target by its ID to the recycling bin.",
          "detailed": "Use this tool to delete a specific goal target by providing its unique ID. This action will move the target to the recycling bin, allowing for potential recovery."
        },
        "return_annotation": "Indicates whether the goal target was successfully deleted.",
        "arguments": [
          {
            "name": "goal_target_id",
            "alternative_names": [
              "target_id",
              "goal_id"
            ],
            "description": "The unique identifier for the goal target to be deleted. Required to specify which target to move to the recycling bin.",
            "endpoint_argument_name": "goalTargetId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/goal_targets/{goalTargetId}",
      "tags": [
        "Basic"
      ],
      "summary": "Delete a goal target by ID",
      "description": "Delete a goal target by `{goalTargetId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.goals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "goalTargetId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/goal_targets/{goalTargetId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_goal_target",
        "description": {
          "tagline": "Update properties of a HubSpot goal target.",
          "detailed": "Use this tool to perform a partial update on a HubSpot goal target object using its ID or a unique property. This is useful for editing specific properties of a goal target. Ensure only modifiable properties are included, as read-only or non-existent properties will cause errors. Clear properties by passing an empty string."
        },
        "return_annotation": "Confirmation of the update status for the goal target.",
        "arguments": [
          {
            "name": "goal_target_id",
            "alternative_names": [
              "target_id",
              "goal_id"
            ],
            "description": "The internal ID of the goal target to update. Use this to specify which goal target object to modify.",
            "endpoint_argument_name": "goalTargetId"
          },
          {
            "name": "goal_target_properties",
            "alternative_names": [
              "target_properties",
              "update_properties"
            ],
            "description": "JSON object with key-value pairs representing the properties to update. Clear a property by using an empty string as its value.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_key"
            ],
            "description": "The name of a unique property for the goal target object used for identification or update.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/goal_targets/{goalTargetId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{goalTargetId}`or optionally a unique property value as specified by the `idProperty` query param. `{goalTargetId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.goals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "goalTargetId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/goal_targets/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_goal_targets",
        "description": {
          "tagline": "Search for goal targets using specified criteria.",
          "detailed": "This tool allows searching for goal targets within the HubSpot CRM based on specified criteria. Call this tool when you need to locate specific goal targets or retrieve a list based on certain parameters."
        },
        "return_annotation": "Search results for goal targets.",
        "arguments": [
          {
            "name": "goal_target_search_criteria",
            "alternative_names": [
              "goal_target_query_filters",
              "goal_target_parameters"
            ],
            "description": "A JSON object with search criteria for goal targets, including query, limit, paging, sorting, properties, and filters.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/goal_targets/search",
      "tags": [
        "Search"
      ],
      "summary": "Perform a search for goal targets based on various filters and criteria.",
      "description": "Search for goal targets using specified criteria.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.goals.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/goal_targets/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_goal_targets_batch",
        "description": {
          "tagline": "Archive multiple goal targets using their IDs in one batch.",
          "detailed": "This tool allows users to archive multiple goal targets in HubSpot CRM by providing their IDs. It's useful for efficiently managing goal targets that are no longer needed."
        },
        "return_annotation": "Confirmation of archived goal targets.",
        "arguments": [
          {
            "name": "goal_target_ids",
            "alternative_names": [
              "target_ids",
              "ids_to_archive"
            ],
            "description": "A JSON array of goal target IDs to archive. Each ID should be a string. This allows batch archiving of specific goal targets in the HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/goal_targets/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of goal targets by ID",
      "description": "Archive multiple goal targets in a single batch operation using their IDs.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.goals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/goal_targets/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_batch_goal_targets",
        "description": {
          "tagline": "Update multiple goal targets in HubSpot CRM.",
          "detailed": "Use this tool to update several goal targets simultaneously in HubSpot CRM using their internal IDs or unique property values."
        },
        "return_annotation": "Information about the updated goal targets.",
        "arguments": [
          {
            "name": "goal_targets_update_data",
            "alternative_names": [
              "goal_target_updates",
              "bulk_goal_target_data"
            ],
            "description": "A JSON array of objects, each containing `id`, `idProperty`, `objectWriteTraceId`, and `properties` to specify which goal targets to update and their new values.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/goal_targets/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of goal targets by internal ID, or unique property values",
      "description": "Update multiple goal targets in a single batch operation using their internal IDs or unique property values.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.goals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/goal_targets/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_goal_targets",
        "description": {
          "tagline": "Create or update goal target records in HubSpot CRM.",
          "detailed": "This tool allows creation or updating of goal target records in HubSpot CRM using a unique property for identification. Use it to ensure goal targets are up-to-date."
        },
        "return_annotation": "Confirmation of goal targets upsertion status.",
        "arguments": [
          {
            "name": "goal_targets_data",
            "alternative_names": [
              "targets_payload",
              "goal_records"
            ],
            "description": "JSON array of goal target records to create or update, including unique id, idProperty, and other properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/goal_targets/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of goal targets by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.goals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/goal_targets_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_goal_targets",
        "description": {
          "tagline": "Retrieve a page of goal targets from HubSpot CRM.",
          "detailed": "Use this tool to access a specific page of goal targets within HubSpot CRM. You can control the data returned by specifying the `properties` query parameter."
        },
        "return_annotation": "A page of goal target data.",
        "arguments": [
          {
            "name": "results_per_page_limit",
            "alternative_names": [
              "max_results_display",
              "page_results_limit"
            ],
            "description": "Specify the maximum number of results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "page_cursor",
              "result_cursor"
            ],
            "description": "Token of the last successfully read item. Use it for fetching the next page of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "returned_properties",
            "alternative_names": [
              "output_properties",
              "response_properties"
            ],
            "description": "Comma-separated list of properties to return in the response. Ignored if absent on requested objects.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_history_list",
              "historical_properties"
            ],
            "description": "Comma-separated properties to return with their history of previous values. Reduces the max number of goals retrievable in one request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "List of object types to retrieve associated IDs for, ignored if non-existent.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived",
            "alternative_names": [
              "fetch_only_archived_results",
              "show_archived_exclusively"
            ],
            "description": "Set to true to return only results that have been archived.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/goal_targets",
      "tags": [
        "Basic"
      ],
      "summary": "Get a page of goal targets",
      "description": "Read a page of goal targets. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.goals.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of goal targets that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of goal targets that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/goal_targets_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_goal_target",
        "description": {
          "tagline": "Create a goal target in HubSpot CRM.",
          "detailed": "Use this tool to create a new goal target in the HubSpot CRM system. It takes the properties for the goal target and returns a copy of the created object along with its ID."
        },
        "return_annotation": "Details of the created goal target, including the ID.",
        "arguments": [
          {
            "name": "goal_target_properties",
            "alternative_names": [
              "goal_target_data",
              "goal_target_attributes"
            ],
            "description": "A JSON object containing properties and associations for the new goal target. Include key-value pairs for properties and an array of associations with details like association category and type ID.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/goal_targets",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a goal target with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard goal targets is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.goals.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/invoices/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_of_invoices",
        "description": {
          "tagline": "Create a batch of invoices swiftly.",
          "detailed": "Use this tool to create multiple invoices at once in HubSpot CRM when bulk billing is required."
        },
        "return_annotation": "Confirmation of invoice batch creation.",
        "arguments": [
          {
            "name": "invoice_batch_data",
            "alternative_names": [
              "invoices_data",
              "batch_invoice_data"
            ],
            "description": "JSON object containing a list of invoices with their properties and associations. Each invoice should include necessary details like properties, associations, and object write trace IDs.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/invoices/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of invoices",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.invoices.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/invoices/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_invoices",
        "description": {
          "tagline": "Find invoices in the HubSpot CRM.",
          "detailed": "Use this tool to search and retrieve invoices from the HubSpot CRM based on specific criteria."
        },
        "return_annotation": "Search results for invoices.",
        "arguments": [
          {
            "name": "invoice_search_criteria",
            "alternative_names": [
              "invoice_query_body",
              "invoice_request_body"
            ],
            "description": "The parameters for searching invoices, including query string, result limits, pagination, sorting, property filters, etc.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/invoices/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.invoices.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/invoices/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_invoice_records",
        "description": {
          "tagline": "Retrieve invoice records by ID or custom property.",
          "detailed": "Use this tool to obtain invoice records by specifying the record ID or using a custom unique value property. Ideal for accessing specific invoice data within the HubSpot CRM."
        },
        "return_annotation": "Invoice records retrieved by ID or custom property.",
        "arguments": [
          {
            "name": "invoice_request_body",
            "alternative_names": [
              "invoice_data_request",
              "invoice_fetch_request"
            ],
            "description": "JSON object with 'idProperty' for custom ID retrieval, 'inputs' for record IDs, and 'properties' for setting key-value pairs.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "include_archived_results",
              "fetch_archived_invoices"
            ],
            "description": "Set to true to return only results that have been archived from HubSpot CRM.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/invoices/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of invoices by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.invoices.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/invoices/{invoiceId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_invoice_by_id",
        "description": {
          "tagline": "Retrieve invoice details by ID.",
          "detailed": "Fetch invoice information using the unique identifier, `{invoiceId}`. This can include internal object ID or any unique property value specified by the `idProperty` parameter."
        },
        "return_annotation": "Details of the specified invoice.",
        "arguments": [
          {
            "name": "invoice_identifier",
            "alternative_names": [
              "invoice_id",
              "invoice_unique_id"
            ],
            "description": "The unique identifier for the invoice. This can be the internal object ID or any unique property value as specified by the `id_property`.",
            "endpoint_argument_name": "invoiceId"
          },
          {
            "name": "requested_properties",
            "alternative_names": [
              "return_properties",
              "invoice_properties"
            ],
            "description": "List of properties to be returned in the response for the specified invoice. Properties not present on the object will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "historical_properties",
            "alternative_names": [
              "properties_with_history",
              "properties_history"
            ],
            "description": "Comma-separated list of properties to return along with their history of previous values.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "List of object types to retrieve associated IDs for, separated by commas. Ignored if associations don't exist.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_identifier_property",
            "alternative_names": [
              "unique_property_name",
              "identifier_property_name"
            ],
            "description": "The name of a property whose values uniquely identify the invoice object. Specify this to use a unique property other than the internal object ID.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "archived_results_only",
              "only_archived_results"
            ],
            "description": "Specify `True` to return only archived results. `False` returns both archived and non-archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/invoices/{invoiceId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{invoiceId}`. `{invoiceId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.invoices.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "invoiceId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/invoices/{invoiceId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_invoice",
        "description": {
          "tagline": "Archive an invoice by moving it to the recycling bin.",
          "detailed": "Use this tool to archive an invoice in HubSpot CRM by moving it to the recycling bin. It is identified by the `{invoiceId}` parameter."
        },
        "return_annotation": "Confirmation of invoice deletion action.",
        "arguments": [
          {
            "name": "invoice_identifier",
            "alternative_names": [
              "invoice_id",
              "identifier"
            ],
            "description": "The unique identifier for the invoice to be archived in HubSpot CRM.",
            "endpoint_argument_name": "invoiceId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/invoices/{invoiceId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{invoiceId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.invoices.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "invoiceId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/invoices/{invoiceId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_invoice_details",
        "description": {
          "tagline": "Update invoice details in HubSpot CRM.",
          "detailed": "Use this tool to perform a partial update of an invoice in HubSpot CRM. The invoice can be identified by its internal ID or a unique property. Only existing properties with provided values will be updated, and any read-only or non-existent properties will cause an error."
        },
        "return_annotation": "Confirmation of invoice update or error message",
        "arguments": [
          {
            "name": "invoice_identifier",
            "alternative_names": [
              "invoice_id",
              "invoice_key"
            ],
            "description": "Unique identifier for the invoice, either the internal ID or specified unique property value, to update in HubSpot CRM.",
            "endpoint_argument_name": "invoiceId"
          },
          {
            "name": "invoice_update_properties",
            "alternative_names": [
              "invoice_properties_update",
              "properties_to_update"
            ],
            "description": "JSON object with key-value pairs representing the invoice properties to update. Only existing properties can be updated.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "identifier_property_name",
              "unique_identifier_property"
            ],
            "description": "Name of the unique property for identifying the invoice object.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/invoices/{invoiceId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{invoiceId}`or optionally a unique property value as specified by the `idProperty` query param. `{invoiceId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.invoices.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "invoiceId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/invoices/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_invoices_batch",
        "description": {
          "tagline": "Updates multiple invoices in the HubSpot CRM.",
          "detailed": "This tool updates a batch of invoices in HubSpot CRM using either internal IDs or unique property values. It should be called when you need to modify multiple invoice records simultaneously."
        },
        "return_annotation": "Confirmation of invoice batch update.",
        "arguments": [
          {
            "name": "invoices_update_data",
            "alternative_names": [
              "batch_update_data",
              "invoice_update_payload"
            ],
            "description": "A JSON object containing a list of invoices to update. Each invoice includes 'idProperty', 'objectWriteTraceId', 'id', and 'properties'. 'idProperty' is a unique identifier property, 'objectWriteTraceId' is a request trace ID, 'id' is the invoice ID or unique property, and 'properties' contains the invoice fields to update.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/invoices/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of invoices by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.invoices.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/invoices_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_invoices",
        "description": {
          "tagline": "Retrieve a page of invoices from HubSpot CRM.",
          "detailed": "Use this tool to read a page of invoices from HubSpot CRM. You can control the return data by specifying desired properties through the query parameters."
        },
        "return_annotation": "A list of invoice details from HubSpot CRM.",
        "arguments": [
          {
            "name": "maximum_results_per_page",
            "alternative_names": [
              "results_per_page_limit",
              "page_size_limit"
            ],
            "description": "The maximum number of invoice results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "pagination_token"
            ],
            "description": "The token for the last successfully read resource to retrieve the next page of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "specified_properties",
            "alternative_names": [
              "selected_properties",
              "invoice_properties"
            ],
            "description": "List of invoice property names to return. Ignored if properties are not present on the objects.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_with_past_values"
            ],
            "description": "List properties to return with their historical values. Reduced invoice limit per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_ids",
              "linked_object_types"
            ],
            "description": "A list of object types whose associated IDs should be retrieved. Ignored if associations do not exist.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "include_archived_only",
              "filter_archived"
            ],
            "description": "Set to true to return only archived invoices; false for all invoices.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/invoices",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of invoices. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.invoices.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of invoices that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of invoices that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/invoices_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_invoice",
        "description": {
          "tagline": "Create an invoice in HubSpot CRM and retrieve its details.",
          "detailed": "This tool creates a new invoice in HubSpot CRM using the provided properties and returns the created invoice's details, including its ID."
        },
        "return_annotation": "Details of the created invoice, including its ID.",
        "arguments": [
          {
            "name": "invoice_properties",
            "alternative_names": [
              "invoice_data",
              "invoice_details"
            ],
            "description": "Key-value pairs for setting properties for the new invoice, including associations to other objects.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/invoices",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a invoice with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard invoices is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.invoices.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/invoices/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_hubspot_invoices",
        "description": {
          "tagline": "Create or update HubSpot invoice records in batch.",
          "detailed": "This tool creates or updates HubSpot invoice records using a unique property identifier specified by the `idProperty` parameter. It should be called when you need to ensure invoice records are accurately reflected in HubSpot CRM."
        },
        "return_annotation": "Confirmation of invoices upsert operation.",
        "arguments": [
          {
            "name": "invoice_data_batch",
            "alternative_names": [
              "batch_invoice_data",
              "invoice_records"
            ],
            "description": "A JSON array containing invoice records, where each record includes `idProperty`, `objectWriteTraceId`, `id`, and `properties` as key-value pairs. These are used to upsert (create or update) invoices in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/invoices/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of invoices by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.invoices.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/invoices/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_invoices_batch",
        "description": {
          "tagline": "Archive a batch of invoices by their IDs.",
          "detailed": "Use this tool to archive multiple invoices at once by providing their IDs. It should be called when there is a need to organize or hide invoices that are no longer active or needed."
        },
        "return_annotation": "Confirmation of invoice batch archiving.",
        "arguments": [
          {
            "name": "invoice_ids_to_archive",
            "alternative_names": [
              "ids_for_invoice_archiving",
              "invoice_id_list_to_archive"
            ],
            "description": "A JSON array of invoice IDs to be archived. Each ID should be a string.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/invoices/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of invoices by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.invoices.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/leads/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_lead_records",
        "description": {
          "tagline": "Retrieve lead records by ID or custom unique property.",
          "detailed": "This tool fetches lead records from HubSpot CRM using specified record IDs or a custom unique value property if provided. It is useful for obtaining detailed information on leads based on specific identifiers."
        },
        "return_annotation": "Returns lead records based on specified IDs or custom property values.",
        "arguments": [
          {
            "name": "lead_records_input",
            "alternative_names": [
              "lead_record_details",
              "lead_record_parameters"
            ],
            "description": "A JSON object containing details such as `idProperty`, `inputs`, and `properties` for retrieving lead records.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "include_archived",
              "show_archived_records"
            ],
            "description": "Return only results that have been archived. Set to 'true' to filter by archived records.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/leads/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of leads by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.leads.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/leads/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_crm_leads",
        "description": {
          "tagline": "Search for leads in HubSpot CRM.",
          "detailed": "This tool searches for leads in the HubSpot CRM. Use it when you want to query and retrieve lead information based on specific criteria."
        },
        "return_annotation": "Search results for CRM leads.",
        "arguments": [
          {
            "name": "search_criteria",
            "alternative_names": [
              "lead_search_criteria",
              "crm_search_criteria"
            ],
            "description": "A JSON object specifying search parameters like query string, limit, pagination, sorting, properties, and filter groups.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/leads/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.leads.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/leads_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_hubspot_leads_page",
        "description": {
          "tagline": "Retrieve a page of leads from HubSpot CRM.",
          "detailed": "This tool fetches a page of leads from the HubSpot CRM. It allows you to control the properties returned for the leads through query parameters."
        },
        "return_annotation": "A page of lead details from HubSpot CRM.",
        "arguments": [
          {
            "name": "results_limit_per_page",
            "alternative_names": [
              "max_results_per_page",
              "leads_page_size"
            ],
            "description": "Defines the maximum number of leads to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "continue_from_token"
            ],
            "description": "The cursor token to continue retrieving leads from where the last page ended.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "lead_properties_to_return",
            "alternative_names": [
              "lead_fields_requested",
              "lead_details_required"
            ],
            "description": "An array of the property names to include in the lead details response. Unavailable properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "history_enabled_properties",
              "properties_with_past_values"
            ],
            "description": "List of properties whose historical values will be returned. Reduce max leads per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "object_associations",
              "related_objects"
            ],
            "description": "Comma-separated list of object types to retrieve associated IDs for; ignored if non-existent.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "archived_leads_only",
            "alternative_names": [
              "include_archived_leads",
              "fetch_archived_leads"
            ],
            "description": "Return only leads that have been archived. Set to true to include only archived leads, false to exclude them.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/leads",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of leads. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.leads.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of leads that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of leads that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/leads_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_lead_hubspot",
        "description": {
          "tagline": "Create a new lead in HubSpot CRM.",
          "detailed": "Use this tool to create a new lead in HubSpot CRM by providing the necessary properties. It returns a copy of the lead object, including the ID."
        },
        "return_annotation": "Details of the created lead including its ID.",
        "arguments": [
          {
            "name": "lead_properties",
            "alternative_names": [
              "lead_data",
              "lead_info"
            ],
            "description": "A JSON object containing key-value pairs for setting properties of the new lead, including associations and other attributes.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/leads",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a lead with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard leads is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.leads.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/leads/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_leads_batch",
        "description": {
          "tagline": "Create a batch of new leads in HubSpot CRM.",
          "detailed": "Use this tool to add multiple new leads to your HubSpot CRM account in one operation. Ideal for onboarding new leads efficiently."
        },
        "return_annotation": "Information about the created leads.",
        "arguments": [
          {
            "name": "lead_batch_data",
            "alternative_names": [
              "leads_data_input",
              "batch_lead_info"
            ],
            "description": "JSON object containing the data for each lead. Include associations, trace ID, and properties for each lead entry.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/leads/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of leads",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.leads.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/leads/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_leads_batch",
        "description": {
          "tagline": "Update multiple leads in a batch by ID or unique properties.",
          "detailed": "Use this tool to update a set of leads in HubSpot CRM using their internal IDs or unique property values. This is useful for making bulk changes efficiently."
        },
        "return_annotation": "Confirmation of batch lead updates.",
        "arguments": [
          {
            "name": "leads_update_data",
            "alternative_names": [
              "lead_batch_data",
              "bulk_lead_update_info"
            ],
            "description": "A JSON object containing an array of leads with IDs or unique property values and their updated properties. Each lead entry includes 'idProperty' for a unique property name, 'objectWriteTraceId' for tracing, 'id' which can be an object ID or unique property value, and 'properties' as key-value pairs to update.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/leads/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of leads by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.leads.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/leads/{leadsId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_lead_by_id",
        "description": {
          "tagline": "Retrieve a lead by its unique identifier.",
          "detailed": "This tool retrieves detailed information about a lead from HubSpot CRM using a unique identifier. It allows filtering of returned data using optional query parameters such as `idProperty` for specifying unique properties and `properties` for controlling which data is returned."
        },
        "return_annotation": "Detailed information about a specific lead.",
        "arguments": [
          {
            "name": "lead_identifier",
            "alternative_names": [
              "lead_id",
              "lead_unique_identifier"
            ],
            "description": "The unique identifier for the lead. Typically the internal ID, or a unique property value if specified by `idProperty`.",
            "endpoint_argument_name": "leadsId"
          },
          {
            "name": "returned_properties",
            "alternative_names": [
              "properties_list",
              "lead_properties"
            ],
            "description": "A list of properties to be returned in the response. Only specified properties present on the lead will be included.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "return_properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_with_past_values"
            ],
            "description": "A list of properties to return with their history of previous values. Comma-separated values should be used. Ignored if properties are not present.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "Comma-separated list of object types to retrieve associated IDs for, with non-existent associations ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_name_for_id"
            ],
            "description": "Specifies a unique property name to identify the lead. Overrides default ID.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "only_archived_results",
            "alternative_names": [
              "return_archived_only",
              "get_archived_results"
            ],
            "description": "Set to true to return only archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/leads/{leadsId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{leadsId}`. `{leadsId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.leads.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "leadsId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/leads/{leadsId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_hubspot_lead",
        "description": {
          "tagline": "Archive a HubSpot CRM lead by identifier.",
          "detailed": "Use this tool to move a HubSpot CRM lead, identified by `leadsId`, to the recycling bin. Ideal for managing and removing leads from active status."
        },
        "return_annotation": "Confirms lead has been archived in HubSpot CRM.",
        "arguments": [
          {
            "name": "lead_identifier",
            "alternative_names": [
              "lead_id",
              "hubspot_lead_id"
            ],
            "description": "The unique identifier for the lead to be archived in HubSpot CRM.",
            "endpoint_argument_name": "leadsId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/leads/{leadsId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{leadsId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.leads.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "leadsId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/leads/{leadsId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_lead_details",
        "description": {
          "tagline": "Update details of a specific lead in HubSpot CRM.",
          "detailed": "Use this tool to perform a partial update to the details of a specific lead in the HubSpot CRM. You can specify the lead using their internal object ID or a unique property value. Only provided properties will be updated. This tool should be called when you need to update certain fields of a lead without altering others. Ensure that read-only and non-existent properties are not included, as these will result in an error."
        },
        "return_annotation": "Updates details of a specified lead in HubSpot CRM.",
        "arguments": [
          {
            "name": "lead_identifier",
            "alternative_names": [
              "lead_id",
              "lead_reference"
            ],
            "description": "The internal object ID or unique property value used to identify the lead in HubSpot CRM. Required for updating the lead details.",
            "endpoint_argument_name": "leadsId"
          },
          {
            "name": "lead_update_properties",
            "alternative_names": [
              "lead_details_update",
              "lead_property_values"
            ],
            "description": "A JSON object with key-value pairs for the lead properties to update. Only specify properties that need to change. Read-only and non-existent properties will cause errors.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_property_identifier",
              "lead_unique_property"
            ],
            "description": "Specify the name of a unique property to identify the lead, instead of using the internal ID.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/leads/{leadsId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{leadsId}`or optionally a unique property value as specified by the `idProperty` query param. `{leadsId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.leads.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "leadsId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/leads/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_leads_batch",
        "description": {
          "tagline": "Archive a batch of leads by ID in HubSpot CRM.",
          "detailed": "Use this tool to archive multiple leads in HubSpot CRM by providing their IDs. Useful for managing large numbers of leads efficiently."
        },
        "return_annotation": "Confirms the batch archiving of leads.",
        "arguments": [
          {
            "name": "lead_ids_to_archive",
            "alternative_names": [
              "ids_of_leads_to_remove",
              "archive_lead_ids"
            ],
            "description": "A JSON array of objects containing the lead IDs to be archived. Each object should include an 'id' field as a string.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/leads/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of leads by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.leads.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/limits/associations/records/{fromObjectTypeId}/{toObjectTypeId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_association_limit_records",
        "description": {
          "tagline": "Fetch records near association limits between two objects.",
          "detailed": "Use this tool to retrieve records that are close to or have reached the association limits between specified objects in HubSpot CRM. This is useful for monitoring and managing object relationships within the CRM system."
        },
        "return_annotation": "Records nearing or at association limits between objects.",
        "arguments": [
          {
            "name": "source_object_type_id",
            "alternative_names": [
              "origin_object_type_id",
              "starting_object_type_id"
            ],
            "description": "Specifies the ID of the source object type to check association limits from.",
            "endpoint_argument_name": "fromObjectTypeId"
          },
          {
            "name": "to_object_type_id",
            "alternative_names": [
              "target_object_type_id",
              "destination_object_type_id"
            ],
            "description": "The ID of the target object type for the association limit query.",
            "endpoint_argument_name": "toObjectTypeId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/limits/associations/records/{fromObjectTypeId}/{toObjectTypeId}",
      "tags": [
        "Limits"
      ],
      "summary": "Read record association limits between two objects",
      "description": "Returns records approaching or at association limits between two objects",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "fromObjectTypeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectTypeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/limits/associations/labels",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_custom_association_labels_limits",
        "description": {
          "tagline": "Get limits and usage for custom association labels in HubSpot CRM.",
          "detailed": "This tool retrieves limits and current usage information for custom association labels within the HubSpot CRM environment. It should be called when you need to understand the constraints or current utilization of these labels."
        },
        "return_annotation": "Limits and usage data for custom association labels.",
        "arguments": [
          {
            "name": "source_object_type_id",
            "alternative_names": [
              "from_object_type_identifier",
              "source_entity_type_id"
            ],
            "description": "The unique identifier for the source object type. It specifies which object type the association is coming from in the CRM.",
            "endpoint_argument_name": "fromObjectTypeId"
          },
          {
            "name": "target_object_type_id",
            "alternative_names": [
              "destination_object_type_id",
              "end_object_type_id"
            ],
            "description": "The ID of the target object type to which the association label applies. Specify the target entity in HubSpot CRM.",
            "endpoint_argument_name": "toObjectTypeId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/limits/associations/labels",
      "tags": [
        "Limits"
      ],
      "summary": "Read association label limits",
      "description": "Returns limits and usage for custom association labels",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "fromObjectTypeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectTypeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/limits/associations/records/{fromObjectTypeId}/to",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "fetch_association_limit_objects",
        "description": {
          "tagline": "Fetch objects approaching association limits for a specified type.",
          "detailed": "Use this tool to retrieve objects where the specified 'from' object type has records that are nearing or have reached their association limits in HubSpot CRM."
        },
        "return_annotation": "Objects with records nearing association limits.",
        "arguments": [
          {
            "name": "from_object_type_id",
            "alternative_names": [
              "source_object_type_id",
              "origin_object_type_id"
            ],
            "description": "Identifier for the 'from' object type whose records' association limits are being queried.",
            "endpoint_argument_name": "fromObjectTypeId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/limits/associations/records/{fromObjectTypeId}/to",
      "tags": [
        "Limits"
      ],
      "summary": "Read record association limits from an object",
      "description": "Returns objects for which the from object has records approaching or at association limits",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "fromObjectTypeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/limits/custom-object-types",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_custom_object_limits",
        "description": {
          "tagline": "Retrieve limits and usage for HubSpot custom object schemas.",
          "detailed": "This tool is used to get the limits and usage data for custom object schemas in HubSpot CRM. It's useful for monitoring and managing custom object types and understanding their current usage."
        },
        "return_annotation": "Limits and usage data for custom object schemas.",
        "arguments": []
      },
      "method": "GET",
      "path": "/crm/v3/limits/custom-object-types",
      "tags": [
        "Limits"
      ],
      "summary": "Read custom object limits",
      "description": "Returns limits and usage for custom object schemas",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.custom.sensitive.write.v2",
        "crm.schemas.custom.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.custom.read",
        "crm.schemas.custom.read",
        "crm.objects.custom.write",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.custom.sensitive.read.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/limits/custom-properties",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_custom_property_limits",
        "description": {
          "tagline": "Retrieve limits and usage for custom properties per object.",
          "detailed": "Use this tool to access the limits and usage statistics for custom properties categorized by object in HubSpot CRM."
        },
        "return_annotation": "Custom property limits and usage per object.",
        "arguments": []
      },
      "method": "GET",
      "path": "/crm/v3/limits/custom-properties",
      "tags": [
        "Limits"
      ],
      "summary": "Read custom property limits",
      "description": "Returns limits and usage per object for custom properties",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/limits/associations/records/from",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_limit_approaching_records",
        "description": {
          "tagline": "Retrieve objects nearing or at HubSpot CRM association limits.",
          "detailed": "This tool is called to get objects from HubSpot CRM that have records close to or at their association limits. It helps in monitoring and managing association constraints."
        },
        "return_annotation": "Objects approaching or at association limits.",
        "arguments": []
      },
      "method": "GET",
      "path": "/crm/v3/limits/associations/records/from",
      "tags": [
        "Limits"
      ],
      "summary": "Read record association limits",
      "description": "Returns objects with records approaching or at association limits",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/limits/records",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_hubspot_crm_limits_records",
        "description": {
          "tagline": "Retrieve limits and usage for records in HubSpot CRM.",
          "detailed": "Use this tool to obtain detailed information about the limits and current usage of various objects within the HubSpot CRM records."
        },
        "return_annotation": "Limits and usage per object for records in HubSpot CRM.",
        "arguments": []
      },
      "method": "GET",
      "path": "/crm/v3/limits/records",
      "tags": [
        "Limits"
      ],
      "summary": "Read record limits",
      "description": "Returns limits and usage per object for records",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/limits/pipelines",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "pipeline_limits_usage",
        "description": {
          "tagline": "Retrieve limits and usage for HubSpot CRM pipelines.",
          "detailed": "Call this tool to obtain information about the limits and current usage of pipelines in HubSpot CRM. Useful for understanding capacity and utilization of your CRM pipelines."
        },
        "return_annotation": "Limits and usage data for CRM pipelines.",
        "arguments": []
      },
      "method": "GET",
      "path": "/crm/v3/limits/pipelines",
      "tags": [
        "Limits"
      ],
      "summary": "Read pipeline limits",
      "description": "Returns limits and usage per object for pipelines",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/limits/calculated-properties",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_calculated_properties_limits",
        "description": {
          "tagline": "Get limits and usage for calculated properties in HubSpot CRM.",
          "detailed": "Call this tool to retrieve overall limits and per object usage for calculated properties in HubSpot CRM."
        },
        "return_annotation": "Overall limit and usage details for calculated properties per object.",
        "arguments": []
      },
      "method": "GET",
      "path": "/crm/v3/limits/calculated-properties",
      "tags": [
        "Limits"
      ],
      "summary": "Read calculation property limits",
      "description": "Returns overall limit and per object usage for calculated properties",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/line_items_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_line_items_page",
        "description": {
          "tagline": "Retrieve a page of line items from HubSpot CRM.",
          "detailed": "Use this tool to read a specific page of line items from HubSpot CRM. You can control the details returned using the `properties` query parameter to tailor the response to your needs."
        },
        "return_annotation": "A page of line items with specified properties.",
        "arguments": [
          {
            "name": "max_results_per_page",
            "alternative_names": [
              "results_limit",
              "page_size"
            ],
            "description": "Sets the maximum number of line items to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "pagination_cursor_after",
            "alternative_names": [
              "page_cursor_token",
              "pagination_token"
            ],
            "description": "The cursor token from the last page to retrieve the next set of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "include_properties",
            "alternative_names": [
              "properties_list",
              "response_properties"
            ],
            "description": "List the properties to include in the response, separated by commas. Ignored if not present.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_past_values",
              "historical_properties"
            ],
            "description": "A list of property names to return with their value history. This reduces the max line items per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "List of object types to retrieve associated IDs. Nonexistent associations are ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived",
            "alternative_names": [
              "only_archived",
              "fetch_only_archived"
            ],
            "description": "Set to true to return only archived results. False returns non-archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/line_items",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of line items. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of line items that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of line items that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/line_items_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_line_item",
        "description": {
          "tagline": "Create a new line item in HubSpot CRM.",
          "detailed": "This tool creates a line item in HubSpot CRM with specified properties and returns the complete object, including its ID. Use this when you need to add a line item to HubSpot."
        },
        "return_annotation": "Returns the created line item object with its ID.",
        "arguments": [
          {
            "name": "line_item_details",
            "alternative_names": [
              "line_item_data",
              "item_properties"
            ],
            "description": "JSON object containing key-value pairs for properties and associations to define a new line item in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/line_items",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a line item with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard line items is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/line_items/{lineItemId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_line_item_details",
        "description": {
          "tagline": "Retrieve details of a line item by its ID.",
          "detailed": "This tool fetches details of a specific line item from HubSpot CRM using its internal ID or any unique property value. Use this tool to access information about a particular line item, specifying any desired properties to control the response."
        },
        "return_annotation": "Details of a specific line item in HubSpot CRM.",
        "arguments": [
          {
            "name": "line_item_id",
            "alternative_names": [
              "line_item_identifier",
              "unique_line_item_id"
            ],
            "description": "The unique ID or property value of the line item to retrieve. This identifies the specific line item in HubSpot CRM.",
            "endpoint_argument_name": "lineItemId"
          },
          {
            "name": "return_properties",
            "alternative_names": [
              "specified_properties",
              "desired_properties"
            ],
            "description": "Comma-separated list of properties to return. Ignored if not present on the object.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historic_properties",
              "properties_with_past_values"
            ],
            "description": "A list of properties to return with their value history. Ignored if not present on the object.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "object_associations",
              "related_entities"
            ],
            "description": "Comma separated list of object types to retrieve associated IDs for. Non-existent associations are ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_identifier_property",
            "alternative_names": [
              "unique_property_name",
              "identifier_property"
            ],
            "description": "Specifies a unique property name to identify the line item in HubSpot CRM.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "only_return_archived",
            "alternative_names": [
              "archived_only",
              "only_show_archived"
            ],
            "description": "Set to True to return only archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/line_items/{lineItemId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{lineItemId}`. `{lineItemId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "lineItemId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/line_items/{lineItemId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_line_item",
        "description": {
          "tagline": "Moves a specified line item to the recycling bin.",
          "detailed": "This tool is used to delete or archive a line item in HubSpot CRM by moving it to the recycling bin. It should be called when a user wants to remove a line item identified by its `lineItemId`."
        },
        "return_annotation": "Confirmation of line item deletion or archival.",
        "arguments": [
          {
            "name": "line_item_id",
            "alternative_names": [
              "line_item_identifier",
              "item_id"
            ],
            "description": "The unique identifier of the line item to be archived or deleted.",
            "endpoint_argument_name": "lineItemId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/line_items/{lineItemId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{lineItemId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "lineItemId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/line_items/{lineItemId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_line_item",
        "description": {
          "tagline": "Update properties of a CRM line item using its ID.",
          "detailed": "Use this tool to perform a partial update of a CRM line item identified by its internal ID or a unique property value. Only provided properties will be updated, and passing an empty string can clear property values. Make sure not to include read-only or non-existent properties as they will result in errors."
        },
        "return_annotation": "Information about the updated line item.",
        "arguments": [
          {
            "name": "line_item_id",
            "alternative_names": [
              "item_id",
              "line_id"
            ],
            "description": "The internal ID of the line item to update. This ID identifies the object to be modified.",
            "endpoint_argument_name": "lineItemId"
          },
          {
            "name": "line_item_properties",
            "alternative_names": [
              "update_properties",
              "edit_properties"
            ],
            "description": "JSON object with key-value pairs representing the properties to update for the line item. Pass an empty string to clear a property value. Avoid read-only or non-existent properties.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "id_property_name",
              "unique_field_name"
            ],
            "description": "Specify a property with unique values to identify the line item instead of using the internal ID.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/line_items/{lineItemId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{lineItemId}`or optionally a unique property value as specified by the `idProperty` query param. `{lineItemId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "lineItemId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/line_items/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_line_items_batch",
        "description": {
          "tagline": "Batch create or update line items by unique ID.",
          "detailed": "This tool creates or updates line item records in batches using a unique property to identify each item, as specified by the `idProperty` query parameter."
        },
        "return_annotation": "Status and details of the upsert operation.",
        "arguments": [
          {
            "name": "line_items_data",
            "alternative_names": [
              "line_items_payload",
              "batch_data"
            ],
            "description": "A JSON array of objects containing details for each line item. Each object includes 'idProperty', 'objectWriteTraceId', 'id', and 'properties' with key-value pairs representing item properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/line_items/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of line items by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/line_items/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_line_items_batch",
        "description": {
          "tagline": "Create a batch of line items in HubSpot CRM.",
          "detailed": "Use this tool to create multiple line items at once in HubSpot CRM. Ideal for bulk operations where several line items need to be added simultaneously to the system."
        },
        "return_annotation": "Batch creation result for line items.",
        "arguments": [
          {
            "name": "line_items_batch_data",
            "alternative_names": [
              "batch_data_input",
              "line_items_creation_data"
            ],
            "description": "JSON data for creating multiple line items. Includes properties and associations for each item.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/line_items/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of line items",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/line_items/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_line_items_batch",
        "description": {
          "tagline": "Update multiple line items in CRM using internal IDs or unique properties.",
          "detailed": "This tool updates a batch of line items in HubSpot CRM. It's useful when needing to modify multiple line items at once using their internal IDs or unique property values."
        },
        "return_annotation": "Confirmation of batch line item updates.",
        "arguments": [
          {
            "name": "line_items_update_data",
            "alternative_names": [
              "line_items_data",
              "update_data"
            ],
            "description": "JSON array containing objects with 'id', 'idProperty', 'objectWriteTraceId', and 'properties' to update line items.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/line_items/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of line items by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/line_items/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_line_items",
        "description": {
          "tagline": "Search for line items in HubSpot CRM.",
          "detailed": "Use this tool to search for line items within HubSpot CRM. It should be called when you need to retrieve specific line items based on search criteria."
        },
        "return_annotation": "Results of the line items search in HubSpot CRM.",
        "arguments": [
          {
            "name": "line_items_search_criteria",
            "alternative_names": [
              "line_items_query_body",
              "line_items_filters"
            ],
            "description": "JSON object containing search criteria, such as query string, filters, sort orders, and properties to include for line items in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/line_items/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/line_items/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_batch_line_items",
        "description": {
          "tagline": "Retrieve batch line item records by ID or custom property.",
          "detailed": "Use this tool to retrieve multiple line item records from HubSpot CRM using their IDs or a custom unique property. This is helpful for accessing specific sets of records without manually querying each one individually."
        },
        "return_annotation": "Batch of line item records by ID or custom property.",
        "arguments": [
          {
            "name": "batch_request_body",
            "alternative_names": [
              "line_items_request_payload",
              "line_items_batch_input"
            ],
            "description": "JSON object with optional `idProperty`, list of `inputs` with `id`, `properties`, and `propertiesWithHistory` to retrieve records.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "retrieve_only_archived",
            "alternative_names": [
              "return_archived_only",
              "filter_by_archived"
            ],
            "description": "Set to true to retrieve only archived line items.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/line_items/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of line items by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/line_items/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_line_items_batch",
        "description": {
          "tagline": "Archive a batch of line items in HubSpot CRM.",
          "detailed": "Use this tool to archive multiple line items at once by their IDs within HubSpot CRM. Ideal for managing and organizing CRM data efficiently."
        },
        "return_annotation": "Confirmation of batch line items archived successfully.",
        "arguments": [
          {
            "name": "line_item_ids_to_archive",
            "alternative_names": [
              "ids_to_archive",
              "archive_ids_list"
            ],
            "description": "A JSON array of objects, each with an 'id' key specifying the line item ID to archive.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/line_items/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of line items by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/0-420",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "list_crm_entries",
        "description": {
          "tagline": "Retrieve a page of CRM listings with specified properties.",
          "detailed": "This tool fetches a page of CRM listings from HubSpot, allowing the user to control which properties are returned via query parameters. Use this to obtain customer records and details from the CRM."
        },
        "return_annotation": "A page of CRM listings with specified properties.",
        "arguments": [
          {
            "name": "maximum_results_per_page",
            "alternative_names": [
              "results_per_page",
              "page_size"
            ],
            "description": "The maximum number of CRM listing results to display per page. This controls pagination size.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "continue_from_token"
            ],
            "description": "The cursor token for fetching the next page of CRM listings.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "properties_to_return",
            "alternative_names": [
              "property_list",
              "desired_properties"
            ],
            "description": "Comma-separated list of properties to include in the response. Non-existent properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "include_properties_with_history",
            "alternative_names": [
              "fetch_property_history",
              "property_history_inclusion"
            ],
            "description": "List the properties whose values along with their history should be returned. Reduces the number of listings per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "A list of object types to retrieve associated IDs for, such as 'contacts' or 'deals'. Ignored if not existent.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "include_only_archived_results",
            "alternative_names": [
              "fetch_exclusively_archived",
              "return_exclusively_archived"
            ],
            "description": "Set to true to return only archived results. False to exclude archived entries.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/0-420",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of listings. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.listings.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of listings that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of listings that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-420",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_listing",
        "description": {
          "tagline": "Create a HubSpot CRM listing and get the object details.",
          "detailed": "Use this tool to create a listing in HubSpot CRM with specified properties. It returns the newly created object's details, including its ID."
        },
        "return_annotation": "Created listing object with details and ID.",
        "arguments": [
          {
            "name": "listing_properties",
            "alternative_names": [
              "hubspot_listing_data",
              "crm_listing_info"
            ],
            "description": "JSON object containing properties for the new listing and optional associations.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-420",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a listing with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard listings is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-420/batch/archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_multiple_listings",
        "description": {
          "tagline": "Archive multiple listings using their IDs.",
          "detailed": "This tool archives multiple listings in HubSpot CRM by providing their IDs. It should be called when you need to bulk archive specific listings efficiently."
        },
        "return_annotation": "Confirmation of archived listings.",
        "arguments": [
          {
            "name": "listings_ids_to_archive",
            "alternative_names": [
              "ids_to_batch_archive",
              "listing_ids_batch"
            ],
            "description": "A JSON array of objects, each containing the 'id' key for the listings to be archived.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-420/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of listings by ID",
      "description": "Archive multiple listings by their IDs.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-420/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_multiple_crm_listings",
        "description": {
          "tagline": "Update multiple CRM listings using internal IDs or unique properties.",
          "detailed": "This tool updates multiple listings in the CRM using their internal IDs or unique property values. It should be called when there is a need to modify several records in bulk within the CRM system."
        },
        "return_annotation": "Status of the batch update operation.",
        "arguments": [
          {
            "name": "crm_batch_update_payload",
            "alternative_names": [
              "batch_update_request_body",
              "multiple_crm_update_data"
            ],
            "description": "JSON payload containing an array of objects with unique identifiers and properties for batch updates. Each object should include 'id' or 'idProperty', 'objectWriteTraceId', and 'properties'.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-420/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of listings by internal ID, or unique property values",
      "description": "Update multiple listings using their internal IDs or unique property values.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-420/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "fetch_hubspot_records",
        "description": {
          "tagline": "Retrieve HubSpot CRM records by ID or custom property.",
          "detailed": "This tool retrieves records from HubSpot CRM using either a record ID or a custom unique value property. It should be called when you need to access specific CRM records based on these identifiers."
        },
        "return_annotation": "Batch of HubSpot CRM records based on given criteria.",
        "arguments": [
          {
            "name": "retrieve_records_request_body",
            "alternative_names": [
              "records_retrieval_payload",
              "hubspot_records_query"
            ],
            "description": "JSON object for specifying record retrieval by ID, custom property, and desired properties. Includes 'idProperty' to use a custom unique property, 'inputs' for record IDs, 'properties' for desired record properties, and 'propertiesWithHistory' if history is required.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_records_only",
            "alternative_names": [
              "archived_records_only",
              "include_only_archived"
            ],
            "description": "Set to true to return only HubSpot CRM records that have been archived.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-420/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of listings by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.listings.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-420/batch/create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_multiple_listings",
        "description": {
          "tagline": "Create multiple listings in a single request.",
          "detailed": "Use this tool to add several listings to the CRM in one operation. Ideal for bulk uploads or extensive data entry tasks."
        },
        "return_annotation": "Confirmation of creation for multiple listings.",
        "arguments": [
          {
            "name": "listings_data",
            "alternative_names": [
              "listings_payload",
              "listings_input"
            ],
            "description": "JSON array containing data for each listing to be created. Each entry should include details like 'associations', 'objectWriteTraceId', and 'properties'.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-420/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of listings",
      "description": "Create multiple listings in a single request.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-420/batch/upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_or_update_batch_records",
        "description": {
          "tagline": "Create or update CRM records in batches.",
          "detailed": "Use this tool to create or update records in the CRM identified by a unique property value. It allows handling multiple records in a single batch operation, specified by the `idProperty`."
        },
        "return_annotation": "Details of created or updated CRM records.",
        "arguments": [
          {
            "name": "batch_records",
            "alternative_names": [
              "crm_batch_data",
              "bulk_record_entries"
            ],
            "description": "A JSON array containing objects with unique identifiers (idProperty, id) and their properties. Used for batch creation or update in the CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-420/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of listings by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-420/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_hubspot_listings",
        "description": {
          "tagline": "Search listings in HubSpot CRM using filters and properties.",
          "detailed": "Use this tool to execute a search query in HubSpot CRM to find listings. You can specify various filters and properties to refine your search results."
        },
        "return_annotation": "Search results for listings based on filters and properties.",
        "arguments": [
          {
            "name": "search_criteria",
            "alternative_names": [
              "query_parameters",
              "listing_filters"
            ],
            "description": "JSON object defining search filters, properties, sorting, and pagination for HubSpot listings.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-420/search",
      "tags": [
        "Search"
      ],
      "summary": "Search for listings using various criteria and filters.",
      "description": "Execute a search query to find listings based on specified filters and properties.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.listings.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/0-420/{listingId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_listing_details",
        "description": {
          "tagline": "Retrieve details of a listing by its ID.",
          "detailed": "Retrieve information about a listing in HubSpot CRM using a unique listing ID or any specified unique property. Allows control of returned details via query parameters."
        },
        "return_annotation": "Details of the listing identified by the given ID.",
        "arguments": [
          {
            "name": "unique_listing_id",
            "alternative_names": [
              "listing_unique_id",
              "listing_identifier"
            ],
            "description": "The unique identifier for the listing to be retrieved in HubSpot CRM.",
            "endpoint_argument_name": "listingId"
          },
          {
            "name": "properties_to_return",
            "alternative_names": [
              "returned_properties_list",
              "properties_list"
            ],
            "description": "A list of properties to be included in the response. Non-existent properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_past_values",
              "properties_with_change_log"
            ],
            "description": "An array of property names to return along with their historical values.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associated_object_types",
            "alternative_names": [
              "get_association_types",
              "fetch_related_object_ids"
            ],
            "description": "List of object types to retrieve associated IDs for. Comma separated. Non-existent associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_id_property",
              "distinct_property_name"
            ],
            "description": "The name of a property with unique values to identify the object in HubSpot CRM.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "show_archived_only",
              "include_archived_exclusively"
            ],
            "description": "Set to true to return only archived results. Use false to include non-archived as well.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/0-420/{listingId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{listingId}`. `{listingId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.listings.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "listingId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The unique identifier of the listing to be retrieved."
            },
            "description": "The unique identifier of the listing to be retrieved.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/0-420/{listingId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "move_listing_to_recycle_bin",
        "description": {
          "tagline": "Move a listing to the recycling bin by ID.",
          "detailed": "Use this tool to move a specific listing identified by its ID to the recycling bin in HubSpot CRM."
        },
        "return_annotation": "Confirmation that the listing has been moved to the recycling bin.",
        "arguments": [
          {
            "name": "listing_id",
            "alternative_names": [
              "listing_identifier",
              "id_of_listing"
            ],
            "description": "The unique identifier of the listing to be moved to the recycling bin in HubSpot CRM.",
            "endpoint_argument_name": "listingId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/0-420/{listingId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{listingId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "listingId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The unique identifier of the listing to be archived."
            },
            "description": "The unique identifier of the listing to be archived.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/0-420/{listingId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "hubspot_update_listing",
        "description": {
          "tagline": "Update specific details of a HubSpot listing.",
          "detailed": "This tool performs a partial update of a HubSpot listing identified by `listingId` or a unique property specified by `idProperty`. It overwrites provided property values, with errors for read-only or non-existent properties. Clear values by passing an empty string."
        },
        "return_annotation": "Confirmation of the updated listing details.",
        "arguments": [
          {
            "name": "listing_id",
            "alternative_names": [
              "listing_identifier",
              "object_id"
            ],
            "description": "The unique identifier of the listing to update in HubSpot.",
            "endpoint_argument_name": "listingId"
          },
          {
            "name": "listing_update_properties",
            "alternative_names": [
              "update_fields",
              "listing_fields_to_update"
            ],
            "description": "JSON object of key-value pairs representing properties of the listing to update. Clear values by passing an empty string.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_property_identifier",
              "unique_id_property"
            ],
            "description": "The name of a unique property for this object, used for identification.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/0-420/{listingId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{listingId}`or optionally a unique property value as specified by the `idProperty` query param. `{listingId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "listingId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The unique identifier of the listing to be updated."
            },
            "description": "The unique identifier of the listing to be updated.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "put-/crm/v3/lists/{listId}/update-list-name_updateName",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_list_name",
        "description": {
          "tagline": "Update the name of a CRM list in HubSpot.",
          "detailed": "Call this tool to update the name of a CRM list in HubSpot, ensuring the new name is globally unique."
        },
        "return_annotation": "Confirmation of updated list name.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "list_identifier",
              "list_unique_id"
            ],
            "description": "The unique ILS ID of the list to update.",
            "endpoint_argument_name": "listId"
          },
          {
            "name": "new_list_name",
            "alternative_names": [
              "updated_list_name",
              "list_name_to_update"
            ],
            "description": "The new name for the CRM list. It must be globally unique relative to other public lists.",
            "endpoint_argument_name": "listName"
          },
          {
            "name": "include_filter_branch_definition",
            "alternative_names": [
              "include_filter_definition",
              "show_filter_branch"
            ],
            "description": "Set to true to include filter branch definitions in the response list definition, or false to exclude them.",
            "endpoint_argument_name": "includeFilters"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/v3/lists/{listId}/update-list-name",
      "tags": [
        "Lists"
      ],
      "summary": "Update List Name",
      "description": "Update the name of a list. The name must be globally unique relative to all other public lists in the portal.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "listName",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name to update the list to."
            },
            "description": "The name to update the list to.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "includeFilters",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A flag indicating whether or not the response object list definition should include a filter branch definition. By default, object list definitions will not have their filter branch definitions included in the response."
            },
            "description": "A flag indicating whether or not the response object list definition should include a filter branch definition. By default, object list definitions will not have their filter branch definitions included in the response.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The **ILS ID** of the list to update."
            },
            "description": "The **ILS ID** of the list to update.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "put-/crm/v3/lists/{listId}/memberships/add-and-remove_addAndRemove",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_list_memberships",
        "description": {
          "tagline": "Add or remove records from a manual or snapshot list.",
          "detailed": "This tool is used to add and/or remove records from a manual or snapshot list in the HubSpot CRM. It facilitates managing list memberships by updating existing records according to specified changes."
        },
        "return_annotation": "Confirmation of membership updates to a list.",
        "arguments": [
          {
            "name": "list_identifier",
            "alternative_names": [
              "manual_snapshot_list_id",
              "list_ils_id"
            ],
            "description": "The unique ILS ID of the MANUAL or SNAPSHOT list to update.",
            "endpoint_argument_name": "listId"
          },
          {
            "name": "record_ids_to_remove",
            "alternative_names": [
              "remove_record_ids",
              "records_to_remove"
            ],
            "description": "An array of record IDs to remove from the list. Each ID should be a string.",
            "endpoint_argument_name": "recordIdsToRemove"
          },
          {
            "name": "record_ids_to_add",
            "alternative_names": [
              "add_record_ids",
              "include_record_ids"
            ],
            "description": "An array of record IDs to be added to the specified list. Ensure these records are already created in the system.",
            "endpoint_argument_name": "recordIdsToAdd"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/v3/lists/{listId}/memberships/add-and-remove",
      "tags": [
        "Memberships"
      ],
      "summary": "Add and/or Remove Records from a List",
      "description": "Add and/or remove records that have already been created in the system to and/or from a list.\n\nThis endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The **ILS ID** of the `MANUAL` or `SNAPSHOT` list."
            },
            "description": "The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "recordIdsToRemove",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": true
          },
          {
            "name": "recordIdsToAdd",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"The IDs of the records to add and/or remove from the list.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"recordIdsToAdd\",\n          \"recordIdsToRemove\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"recordIdsToRemove\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"recordIdsToAdd\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"The IDs of the records to add and/or remove from a list.\",\n        \"example\": {\n          \"recordIdsToAdd\": [\n            \"123\",\n            \"456\",\n            \"789\"\n          ],\n          \"recordIdsToRemove\": [\n            \"654\"\n          ]\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "get-/crm/v3/lists/{listId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "fetch_hubspot_list_by_id",
        "description": {
          "tagline": "Fetch a single HubSpot CRM list using its ILS list ID.",
          "detailed": ""
        },
        "return_annotation": "Details of a single HubSpot CRM list.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "ils_list_id",
              "hubspot_list_id"
            ],
            "description": "The ILS ID of the HubSpot CRM list to fetch.",
            "endpoint_argument_name": "listId"
          },
          {
            "name": "include_filter_definitions",
            "alternative_names": [
              "include_filters_flag",
              "fetch_with_filters"
            ],
            "description": "Include filter branch definitions in the response. Defaults to false, meaning filter definitions are not included.",
            "endpoint_argument_name": "includeFilters"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/lists/{listId}",
      "tags": [
        "Lists"
      ],
      "summary": "Fetch List by ID",
      "description": "Fetch a single list by **ILS list ID**.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "includeFilters",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A flag indicating whether or not the response object list definition should include a filter branch definition. By default, object list definitions will not have their filter branch definitions included in the response."
            },
            "description": "A flag indicating whether or not the response object list definition should include a filter branch definition. By default, object list definitions will not have their filter branch definitions included in the response.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The **ILS ID** of the list to fetch."
            },
            "description": "The **ILS ID** of the list to fetch.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/lists/{listId}_remove",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_list",
        "description": {
          "tagline": "Delete a specified CRM list by its ID.",
          "detailed": "Use this tool to delete a CRM list using its ID. Deleted lists can be restored within 90 days, after which they'll be permanently removed."
        },
        "return_annotation": "Confirmation of list deletion with possible restoration details.",
        "arguments": [
          {
            "name": "list_id_to_delete",
            "alternative_names": [
              "list_identifier",
              "list_deletion_id"
            ],
            "description": "The ILS ID of the CRM list to delete. Ensure the ID is correct to avoid unintentional deletion.",
            "endpoint_argument_name": "listId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/lists/{listId}",
      "tags": [
        "Lists"
      ],
      "summary": "Delete a List",
      "description": "Delete a list by **ILS list ID**. Lists deleted through this endpoint can be restored up to 90-days following the delete. After 90-days, the list is purged and can no longer be restored.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The **ILS ID** of the list to delete."
            },
            "description": "The **ILS ID** of the list to delete.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/lists/{listId}/schedule-conversion",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_conversion_details",
        "description": {
          "tagline": "Retrieve conversion details for a specific list in HubSpot CRM.",
          "detailed": "Use this tool to check for upcoming conversions or to get details of past conversions for a list."
        },
        "return_annotation": "Conversion details for a specific list.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "list_identifier",
              "list_code"
            ],
            "description": "The ID of the list for which you want to retrieve conversion details.",
            "endpoint_argument_name": "listId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/lists/{listId}/schedule-conversion",
      "tags": [
        "Lists"
      ],
      "summary": "Retrieve the conversion details for a list",
      "description": "Retrieve the conversion details for a list. This can be used to check for an upcoming conversion, or to get the details of when a list was already converted.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the list to schedule the conversion for."
            },
            "description": "The ID of the list to schedule the conversion for.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "put-/crm/v3/lists/{listId}/schedule-conversion",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "schedule_list_conversion",
        "description": {
          "tagline": "Schedule or update the conversion of an active list to static.",
          "detailed": "Use this tool to schedule the conversion of an active list into a static list, or to update an already scheduled conversion. This can be scheduled for a specific date or based on activity in HubSpot CRM."
        },
        "return_annotation": "Confirmation of the conversion scheduling or update.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "list_identifier",
              "target_list_id"
            ],
            "description": "The ID of the list you want to schedule the conversion for.",
            "endpoint_argument_name": "listId"
          },
          {
            "name": "conversion_scheduling_details",
            "alternative_names": [
              "conversion_details",
              "conversion_schedule_data"
            ],
            "description": "JSON object with details like date or activity-based criteria for scheduling the list conversion.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/v3/lists/{listId}/schedule-conversion",
      "tags": [
        "Lists"
      ],
      "summary": "Schedule or update the conversion of a list to static",
      "description": "Schedule the conversion of an active list into a static list, or update the already scheduled conversion. This can be scheduled for a specific date or based on activity.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the list to schedule the conversion for."
            },
            "description": "The ID of the list to schedule the conversion for.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {},
              "oneOf": [
                {
                  "type": "object",
                  "title": "CONVERSION_DATE",
                  "properties": {
                    "month": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "conversionType": {
                      "type": "string",
                      "enum": [
                        "CONVERSION_DATE"
                      ]
                    },
                    "day": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "required": [
                    "conversionType",
                    "day",
                    "month",
                    "year"
                  ]
                },
                {
                  "type": "object",
                  "title": "INACTIVITY",
                  "properties": {
                    "offset": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "conversionType": {
                      "type": "string",
                      "enum": [
                        "INACTIVITY"
                      ]
                    },
                    "timeUnit": {
                      "type": "string",
                      "enum": [
                        "DAY",
                        "WEEK",
                        "MONTH"
                      ]
                    }
                  },
                  "required": [
                    "conversionType",
                    "offset",
                    "timeUnit"
                  ]
                }
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"properties\": {},\n        \"oneOf\": [\n          {\n            \"title\": \"CONVERSION_DATE\",\n            \"required\": [\n              \"conversionType\",\n              \"day\",\n              \"month\",\n              \"year\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"month\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              },\n              \"year\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              },\n              \"conversionType\": {\n                \"type\": \"string\",\n                \"default\": \"CONVERSION_DATE\",\n                \"enum\": [\n                  \"CONVERSION_DATE\"\n                ]\n              },\n              \"day\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            }\n          },\n          {\n            \"title\": \"INACTIVITY\",\n            \"required\": [\n              \"conversionType\",\n              \"offset\",\n              \"timeUnit\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"offset\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              },\n              \"conversionType\": {\n                \"type\": \"string\",\n                \"default\": \"INACTIVITY\",\n                \"enum\": [\n                  \"INACTIVITY\"\n                ]\n              },\n              \"timeUnit\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"DAY\",\n                  \"WEEK\",\n                  \"MONTH\"\n                ]\n              }\n            }\n          }\n        ]\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/lists/{listId}/schedule-conversion",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_scheduled_conversion",
        "description": {
          "tagline": "Delete a scheduled conversion for a specific list.",
          "detailed": "This tool deletes an existing scheduled conversion for a specified list in the HubSpot CRM. It should be called when you need to cancel a conversion schedule, and it returns a confirmation of the deletion."
        },
        "return_annotation": "Confirmation of the scheduled conversion deletion.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "list_identifier",
              "conversion_list_id"
            ],
            "description": "The ID of the list for which you want to cancel the scheduled conversion.",
            "endpoint_argument_name": "listId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/lists/{listId}/schedule-conversion",
      "tags": [
        "Lists"
      ],
      "summary": "Cancel the conversion of a list",
      "description": "Delete an existing scheduled conversion for a list.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the list that you want to cancel the conversion for."
            },
            "description": "The ID of the list that you want to cancel the conversion for.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/lists/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_hubspot_lists",
        "description": {
          "tagline": "Search HubSpot CRM lists by name or page through all lists.",
          "detailed": "This tool allows searching for specific lists within the HubSpot CRM by list name. Alternatively, you can page through all lists by providing an empty query. It's useful for retrieving specific list data or browsing all available lists."
        },
        "return_annotation": "A list of search results matching the query.",
        "arguments": [
          {
            "name": "filter_by_list_ids",
            "alternative_names": [
              "list_id_filter",
              "filter_lists_by_id"
            ],
            "description": "An array of list IDs to filter search results. If not provided or empty, no filter is applied.",
            "endpoint_argument_name": "listIds"
          },
          {
            "name": "start_offset",
            "alternative_names": [
              "page_start_index",
              "result_offset"
            ],
            "description": "The starting point for pagination of list results. Defaults to `0` if not provided.",
            "endpoint_argument_name": "offset"
          },
          {
            "name": "search_query",
            "alternative_names": [
              "list_search_term",
              "list_name_query"
            ],
            "description": "The term to search for lists by name. Returns all lists if empty.",
            "endpoint_argument_name": "query"
          },
          {
            "name": "number_of_lists_to_return",
            "alternative_names": [
              "lists_count",
              "response_list_size"
            ],
            "description": "The number of lists to include in the response. Defaults to 20 if not provided, with a maximum of 500.",
            "endpoint_argument_name": "count"
          },
          {
            "name": "filter_by_processing_types",
            "alternative_names": [
              "limit_to_processing_types",
              "select_processing_types"
            ],
            "description": "List of processing types to filter results. Valid values: 'MANUAL', 'SNAPSHOT', 'DYNAMIC'. If omitted, no filtering by processing type is applied.",
            "endpoint_argument_name": "processingTypes"
          },
          {
            "name": "include_additional_list_properties",
            "alternative_names": [
              "extra_list_properties",
              "optional_list_fields"
            ],
            "description": "Specify additional list properties to include in the response. Defaults fetch standard properties like `hs_list_size` and others.",
            "endpoint_argument_name": "additionalProperties"
          },
          {
            "name": "sort_order",
            "alternative_names": [
              "ordering",
              "sort_direction"
            ],
            "description": "Specify the order in which the lists should be sorted. Acceptable values could be 'asc' for ascending or 'desc' for descending order.",
            "endpoint_argument_name": "sort"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/lists/search",
      "tags": [
        "Lists"
      ],
      "summary": "Search Lists",
      "description": "Search lists by list name or page through all lists by providing an empty `query` value.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "listIds",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The `listIds` that will be used to filter results by `listId`. If values are provided, then the response will only include results that have a `listId` in this array.\n\nIf no value is provided, or if an empty list is provided, then the results will not be filtered by `listId`."
            },
            "description": "The `listIds` that will be used to filter results by `listId`. If values are provided, then the response will only include results that have a `listId` in this array.\n\nIf no value is provided, or if an empty list is provided, then the results will not be filtered by `listId`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "The `listIds` that will be used to filter results by `listId`. If values are provided, then the response will only include results that have a `listId` in this array.\n\nIf no value is provided, or if an empty list is provided, then the results will not be filtered by `listId`.",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "offset",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Value used to paginate through lists. The `offset` provided in the response can be used in the next request to fetch the next page of results. Defaults to `0` if no offset is provided."
            },
            "description": "Value used to paginate through lists. The `offset` provided in the response can be used in the next request to fetch the next page of results. Defaults to `0` if no offset is provided.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer",
              "description": "Value used to paginate through lists. The `offset` provided in the response can be used in the next request to fetch the next page of results. Defaults to `0` if no offset is provided.",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "query",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The `query` that will be used to search for lists by list name. If no `query` is provided, then the results will include all lists."
            },
            "description": "The `query` that will be used to search for lists by list name. If no `query` is provided, then the results will include all lists.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "The `query` that will be used to search for lists by list name. If no `query` is provided, then the results will include all lists."
            },
            "schema_required": false
          },
          {
            "name": "count",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The number of lists to include in the response. Defaults to `20` if no value is provided. The max `count` is `500`."
            },
            "description": "The number of lists to include in the response. Defaults to `20` if no value is provided. The max `count` is `500`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer",
              "description": "The number of lists to include in the response. Defaults to `20` if no value is provided. The max `count` is `500`.",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "processingTypes",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The `processingTypes` that will be used to filter results by `processingType`. If values are provided, then the response will only include results that have a `processingType` in this array.\n\nIf no value is provided, or if an empty list is provided, then results will not be filtered by `processingType`.\n\nValid `processingTypes` are: `MANUAL`, `SNAPSHOT`, or `DYNAMIC`."
            },
            "description": "The `processingTypes` that will be used to filter results by `processingType`. If values are provided, then the response will only include results that have a `processingType` in this array.\n\nIf no value is provided, or if an empty list is provided, then results will not be filtered by `processingType`.\n\nValid `processingTypes` are: `MANUAL`, `SNAPSHOT`, or `DYNAMIC`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "The `processingTypes` that will be used to filter results by `processingType`. If values are provided, then the response will only include results that have a `processingType` in this array.\n\nIf no value is provided, or if an empty list is provided, then results will not be filtered by `processingType`.\n\nValid `processingTypes` are: `MANUAL`, `SNAPSHOT`, or `DYNAMIC`.",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "additionalProperties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The property names of any additional list properties to include in the response. Properties that do not exist or that are empty for a particular list are not included in the response.\n\nBy default, all requests will fetch the following properties for each list: `hs_list_size`, `hs_last_record_added_at`, `hs_last_record_removed_at`, `hs_folder_name`, and `hs_list_reference_count`."
            },
            "description": "The property names of any additional list properties to include in the response. Properties that do not exist or that are empty for a particular list are not included in the response.\n\nBy default, all requests will fetch the following properties for each list: `hs_list_size`, `hs_last_record_added_at`, `hs_last_record_removed_at`, `hs_folder_name`, and `hs_list_reference_count`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "The property names of any additional list properties to include in the response. Properties that do not exist or that are empty for a particular list are not included in the response.\n\nBy default, all requests will fetch the following properties for each list: `hs_list_size`, `hs_last_record_added_at`, `hs_last_record_removed_at`, `hs_folder_name`, and `hs_list_reference_count`.",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "sort",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"The IDs of the records to add and/or remove from the list.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"listIds\": {\n            \"type\": \"array\",\n            \"description\": \"The `listIds` that will be used to filter results by `listId`. If values are provided, then the response will only include results that have a `listId` in this array.\\n\\nIf no value is provided, or if an empty list is provided, then the results will not be filtered by `listId`.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"offset\": {\n            \"type\": \"integer\",\n            \"description\": \"Value used to paginate through lists. The `offset` provided in the response can be used in the next request to fetch the next page of results. Defaults to `0` if no offset is provided.\",\n            \"format\": \"int32\"\n          },\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The `query` that will be used to search for lists by list name. If no `query` is provided, then the results will include all lists.\"\n          },\n          \"count\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of lists to include in the response. Defaults to `20` if no value is provided. The max `count` is `500`.\",\n            \"format\": \"int32\"\n          },\n          \"processingTypes\": {\n            \"type\": \"array\",\n            \"description\": \"The `processingTypes` that will be used to filter results by `processingType`. If values are provided, then the response will only include results that have a `processingType` in this array.\\n\\nIf no value is provided, or if an empty list is provided, then results will not be filtered by `processingType`.\\n\\nValid `processingTypes` are: `MANUAL`, `SNAPSHOT`, or `DYNAMIC`.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"additionalProperties\": {\n            \"type\": \"array\",\n            \"description\": \"The property names of any additional list properties to include in the response. Properties that do not exist or that are empty for a particular list are not included in the response.\\n\\nBy default, all requests will fetch the following properties for each list: `hs_list_size`, `hs_last_record_added_at`, `hs_last_record_removed_at`, `hs_folder_name`, and `hs_list_reference_count`.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"sort\": {\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"The request object used for searching through lists.\",\n        \"example\": {\n          \"additionalProperties\": [\n            \"hs_list_size_week_delta\"\n          ],\n          \"count\": 100,\n          \"offset\": 0,\n          \"query\": \"Test\"\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "put-/crm/v3/lists/folders/move-list_moveList",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "move_list_to_folder",
        "description": {
          "tagline": "Move a CRM list to a specified folder.",
          "detailed": "Use this tool to move a specific list within HubSpot CRM to a desired folder, organizing lists efficiently."
        },
        "return_annotation": "Confirmation of list moved to specified folder.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "list_identifier",
              "list_id_number"
            ],
            "description": "The ID of the list you want to move. It should be a valid string representing the list in HubSpot CRM.",
            "endpoint_argument_name": "listId"
          },
          {
            "name": "target_folder_id",
            "alternative_names": [
              "destination_folder_id",
              "folder_id_to_move"
            ],
            "description": "The ID of the folder to move the list to. Use '0' for the root folder.",
            "endpoint_argument_name": "newFolderId"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/v3/lists/folders/move-list",
      "tags": [
        "Folders"
      ],
      "summary": "Moves a list to a given folder",
      "description": "Given a list and a folder, the list will be moved to that folder.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The Id of the list to move."
            },
            "description": "The Id of the list to move.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "The Id of the list to move."
            },
            "schema_required": true
          },
          {
            "name": "newFolderId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The Id of folder to move the list to, the root folder is Id 0."
            },
            "description": "The Id of folder to move the list to, the root folder is Id 0.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "The Id of folder to move the list to, the root folder is Id 0."
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"listId\",\n          \"newFolderId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"listId\": {\n            \"type\": \"string\",\n            \"description\": \"The Id of the list to move.\"\n          },\n          \"newFolderId\": {\n            \"type\": \"string\",\n            \"description\": \"The Id of folder to move the list to, the root folder is Id 0.\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "put-/crm/v3/lists/{listId}/memberships/add_add",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_to_hubspot_crm_list",
        "description": {
          "tagline": "Add records to a specified HubSpot CRM list.",
          "detailed": "Use this tool to add records to a specific HubSpot CRM list. Only works for lists with a processing type of MANUAL or SNAPSHOT. Records that don't exist or are already members will be ignored."
        },
        "return_annotation": "Confirmation of records added to a HubSpot CRM list.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "ils_id",
              "crm_list_id"
            ],
            "description": "The ILS ID of the MANUAL or SNAPSHOT list to add records.",
            "endpoint_argument_name": "listId"
          },
          {
            "name": "record_ids_to_add",
            "alternative_names": [
              "records_to_add_ids",
              "list_members_ids"
            ],
            "description": "An array of strings representing the IDs of the records to add to the list.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/v3/lists/{listId}/memberships/add",
      "tags": [
        "Memberships"
      ],
      "summary": "Add Records to a List",
      "description": "Add the records provided to the list. Records that do not exist or that are already members of the list are ignored.\n\nThis endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The **ILS ID** of the `MANUAL` or `SNAPSHOT` list."
            },
            "description": "The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The IDs of the records to add to the list."
            },
            "description": "The IDs of the records to add to the list.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"The IDs of the records to add to the list.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/lists/object-type-id/{objectTypeId}/name/{listName}_getByName",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "fetch_list_by_name",
        "description": {
          "tagline": "Fetch details of a list by its name and object type.",
          "detailed": "Use this tool to obtain the information of a specific list in HubSpot CRM by providing the list name and object type ID."
        },
        "return_annotation": "Details of a specific list by name and object type.",
        "arguments": [
          {
            "name": "list_name",
            "alternative_names": [
              "list_title",
              "name_of_list"
            ],
            "description": "The name of the list to fetch. This is not case sensitive.",
            "endpoint_argument_name": "listName"
          },
          {
            "name": "object_type_id",
            "alternative_names": [
              "object_type_identifier",
              "object_id"
            ],
            "description": "The object type ID for the list. Example: `0-1` for `CONTACT`.",
            "endpoint_argument_name": "objectTypeId"
          },
          {
            "name": "include_filters",
            "alternative_names": [
              "filters_included_response",
              "include_filters_flag"
            ],
            "description": "Set to true to include filter branch definitions in the response. By default, filters are not included.",
            "endpoint_argument_name": "includeFilters"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/lists/object-type-id/{objectTypeId}/name/{listName}",
      "tags": [
        "Lists"
      ],
      "summary": "Fetch List by Name",
      "description": "Fetch a single list by list name and object type.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "includeFilters",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A flag indicating whether or not the response object list definition should include a filter branch definition. By default, object list definitions will not have their filter branch definitions included in the response."
            },
            "description": "A flag indicating whether or not the response object list definition should include a filter branch definition. By default, object list definitions will not have their filter branch definitions included in the response.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "listName",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of the list to fetch. This is **not** case sensitive."
            },
            "description": "The name of the list to fetch. This is **not** case sensitive.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "objectTypeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The object type ID of the object types stored by the list to fetch. For example, `0-1` for a `CONTACT` list."
            },
            "description": "The object type ID of the object types stored by the list to fetch. For example, `0-1` for a `CONTACT` list.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "put-/crm/v3/lists/folders/{folderId}/move/{newParentFolderId}_move",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "move_folder_in_hubspot",
        "description": {
          "tagline": "Move a folder to a new parent in HubSpot CRM.",
          "detailed": "This tool moves a folder to a new parent location in HubSpot CRM, updating the folder's parent ID to the specified new ID. Use this when you need to reorganize folder structures within the CRM."
        },
        "return_annotation": "Confirmation of folder relocation in HubSpot CRM.",
        "arguments": [
          {
            "name": "folder_id_to_move",
            "alternative_names": [
              "source_folder_id",
              "original_folder_id"
            ],
            "description": "The ID of the folder you want to move to a new location in HubSpot CRM.",
            "endpoint_argument_name": "folderId"
          },
          {
            "name": "target_parent_folder_id",
            "alternative_names": [
              "new_parent_folder_id",
              "destination_folder_id"
            ],
            "description": "The ID of the target parent folder to which the current folder will be moved.",
            "endpoint_argument_name": "newParentFolderId"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/v3/lists/folders/{folderId}/move/{newParentFolderId}",
      "tags": [
        "Folders"
      ],
      "summary": "Moves a folder",
      "description": "This moves the folder from its current location to a new location. It updates the parent of this folder to the new Id given.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "folderId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the folder to move"
            },
            "description": "The ID of the folder to move",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "newParentFolderId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID for the target parent folder."
            },
            "description": "The ID for the target parent folder.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/lists/idmapping_translateLegacyListIdToListId",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "translate_legacy_to_new_list_id",
        "description": {
          "tagline": "Translate legacy list ID to the new list ID format.",
          "detailed": "This tool translates a legacy list ID to the new list ID format using HubSpot CRM's temporary API. It is useful for mapping old list IDs to new ones before the API expires on May 30th, 2025."
        },
        "return_annotation": "Translated list ID from legacy to new format.",
        "arguments": [
          {
            "name": "legacy_list_id",
            "alternative_names": [
              "old_list_id",
              "v1_list_id"
            ],
            "description": "The legacy list ID from the lists v1 API to be translated to the new format.",
            "endpoint_argument_name": "legacyListId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/lists/idmapping",
      "tags": [
        "Mapping"
      ],
      "summary": "Translate Legacy List Id to Modern List Id",
      "description": "This API allows translation of legacy list id to list id. This is a temporary API allowed for mapping old id's to new id's and will expire on May 30th, 2025.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "legacyListId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The legacy list id from lists v1 API."
            },
            "description": "The legacy list id from lists v1 API.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/lists/idmapping_translateLegacyListIdToListIdBatch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "translate_legacy_list_ids_batch",
        "description": {
          "tagline": "Translate legacy list IDs to new list IDs in batch.",
          "detailed": "Use this tool to convert a large number (up to 10,000) of legacy list IDs to the current list ID format. This tool is essential for data migration purposes and is available until May 30th, 2025."
        },
        "return_annotation": "Maps old legacy list IDs to new list IDs.",
        "arguments": [
          {
            "name": "legacy_list_ids",
            "alternative_names": [
              "old_list_ids",
              "list_ids_to_translate"
            ],
            "description": "An array of legacy list IDs to be translated to new IDs, supporting up to 10,000 strings.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/lists/idmapping",
      "tags": [
        "Mapping"
      ],
      "summary": "Translate Legacy List Id to Modern List Id in Batch",
      "description": "This API allows translation of a batch of legacy list id's to list id's. This allows for a maximum of 10,000 id's. This is a temporary API allowed for mapping old id's to new id's and will expire on May 30th, 2025.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "put-/crm/v3/lists/{listId}/restore_restore",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "restore_deleted_list",
        "description": {
          "tagline": "Restore a previously deleted HubSpot CRM list.",
          "detailed": "This tool restores a previously deleted list in HubSpot CRM using the list ID. Lists can be restored up to 90 days after deletion. Use this when you need to recover a list that was mistakenly deleted."
        },
        "return_annotation": "Confirmation of list restoration or error information.",
        "arguments": [
          {
            "name": "list_id_to_restore",
            "alternative_names": [
              "ils_list_id",
              "list_identifier"
            ],
            "description": "The ILS ID of the list to restore. Use this to specify which deleted list to recover.",
            "endpoint_argument_name": "listId"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/v3/lists/{listId}/restore",
      "tags": [
        "Lists"
      ],
      "summary": "Restore a List",
      "description": "Restore a previously deleted list by **ILS list ID**. Deleted lists are eligible to be restored up-to 90-days after the list has been deleted.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The **ILS ID** of the list to restore."
            },
            "description": "The **ILS ID** of the list to restore.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "put-/crm/v3/lists/folders/{folderId}/rename_rename",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "rename_crm_folder",
        "description": {
          "tagline": "Rename a folder in HubSpot CRM by its folder ID.",
          "detailed": "Use this tool to rename a specific folder in HubSpot CRM using its folder ID. Useful for organizing or updating folder names within your CRM system."
        },
        "return_annotation": "Confirmation of the folder renaming operation.",
        "arguments": [
          {
            "name": "folder_id",
            "alternative_names": [
              "folder_identifier",
              "id_of_folder"
            ],
            "description": "The ID of the folder you want to rename in HubSpot CRM.",
            "endpoint_argument_name": "folderId"
          },
          {
            "name": "new_folder_name",
            "alternative_names": [
              "folder_new_name",
              "updated_folder_name"
            ],
            "description": "The new name to assign to the folder. It should be a string representing the desired folder name in HubSpot CRM.",
            "endpoint_argument_name": "newFolderName"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/v3/lists/folders/{folderId}/rename",
      "tags": [
        "Folders"
      ],
      "summary": "Rename a folder",
      "description": "Renames the given folderId with a new name.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "newFolderName",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The new name of the folder."
            },
            "description": "The new name of the folder.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "folderId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the folder to rename"
            },
            "description": "The ID of the folder to rename",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/lists/{listId}/memberships/join-order_getPageOrderedByAddedToListDate",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "fetch_list_memberships_ordered",
        "description": {
          "tagline": "Fetch list memberships ordered by addition date.",
          "detailed": "Fetch the memberships of a HubSpot CRM list, ordered by the date they were added. Useful for retrieving member records in an ascending order based on addition time, or in descending order if a 'before' offset is used."
        },
        "return_annotation": "Ordered list of memberships including record IDs and addition dates.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "list_identifier",
              "ils_list_id"
            ],
            "description": "The unique ILS ID of the list to retrieve memberships from.",
            "endpoint_argument_name": "listId"
          },
          {
            "name": "after_paging_offset_token",
            "alternative_names": [
              "next_page_offset_token",
              "after_offset_token"
            ],
            "description": "The token for the page that comes after the previously requested records, sorted in ascending order. Takes precedence over 'before'.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "before_offset_token",
            "alternative_names": [
              "preceding_paging_token",
              "descending_offset_token"
            ],
            "description": "The paging offset token to retrieve records preceding the specified page, sorted in descending order.",
            "endpoint_argument_name": "before"
          },
          {
            "name": "record_limit",
            "alternative_names": [
              "max_records",
              "response_record_count"
            ],
            "description": "Specify the number of records to return, with a maximum limit of 250.",
            "endpoint_argument_name": "limit"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/lists/{listId}/memberships/join-order",
      "tags": [
        "Memberships"
      ],
      "summary": "Fetch List Memberships Ordered by Added to List Date",
      "description": "Fetch the memberships of a list in order sorted by the time the records were added to the list.\n\nThe `recordId`s are sorted in *ascending* order if an `after` offset or no offset is provided. If only a `before` offset is provided, then the records are sorted in *descending* order.\n\nThe `after` offset parameter will take precedence over the `before` offset in a case where both are provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging offset token for the page that comes `after` the previously requested records.\n\nIf provided, then the records in the response will be the records following the offset, sorted in *ascending* order. Takes precedence over the `before` offset."
            },
            "description": "The paging offset token for the page that comes `after` the previously requested records.\n\nIf provided, then the records in the response will be the records following the offset, sorted in *ascending* order. Takes precedence over the `before` offset.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "before",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging offset token for the page that comes `before` the previously requested records.\n\nIf provided, then the records in the response will be the records preceding the offset, sorted in *descending* order."
            },
            "description": "The paging offset token for the page that comes `before` the previously requested records.\n\nIf provided, then the records in the response will be the records preceding the offset, sorted in *descending* order.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The number of records to return in the response. The maximum `limit` is 250."
            },
            "description": "The number of records to return in the response. The maximum `limit` is 250.",
            "required": false,
            "deprecated": false,
            "default": 100,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The **ILS ID** of the list."
            },
            "description": "The **ILS ID** of the list.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "put-/crm/v3/lists/{listId}/memberships/add-from/{sourceListId}_addAllFromList",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_all_from_source_list_to_destination_list",
        "description": {
          "tagline": "Add records from a source list to a destination list in HubSpot.",
          "detailed": "This tool transfers all records from a specified source list to a destination list in HubSpot CRM, ignoring duplicates. Suitable for destination lists with manual or snapshot processing and source lists with fewer than 100,000 memberships."
        },
        "return_annotation": "Confirmation of successful record addition to the destination list.",
        "arguments": [
          {
            "name": "destination_list_id",
            "alternative_names": [
              "target_list_id",
              "destination_ils_id"
            ],
            "description": "The ILS ID of the MANUAL or SNAPSHOT destination list to which the source list records are added.",
            "endpoint_argument_name": "listId"
          },
          {
            "name": "source_list_id",
            "alternative_names": [
              "source_list_identifier",
              "source_ils_id"
            ],
            "description": "The ILS ID of the source list from which records are added to the destination list.",
            "endpoint_argument_name": "sourceListId"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/v3/lists/{listId}/memberships/add-from/{sourceListId}",
      "tags": [
        "Memberships"
      ],
      "summary": "Add All Records from a Source List to a Destination List",
      "description": "Add all of the records from a *source list* (specified by the `sourceListId`) to a *destination list* (specified by the `listId`). Records that are already members of the *destination list* will be ignored. The *destination* and *source list* IDs must be different. The *destination* and *source lists* must contain records of the same type (e.g. contacts, companies, etc.).\n\nThis endpoint only works for *destination lists* that have a `processingType` of `MANUAL` or `SNAPSHOT`. The *source list* can have any `processingType`.\n\nThis endpoint only supports a `sourceListId` for lists with less than 100,000 memberships.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The **ILS ID** of the `MANUAL` or `SNAPSHOT` *destination list*, which the *source list* records are added to."
            },
            "description": "The **ILS ID** of the `MANUAL` or `SNAPSHOT` *destination list*, which the *source list* records are added to.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "sourceListId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The **ILS ID** of the *source list* to grab the records from, which are then added to the *destination list*."
            },
            "description": "The **ILS ID** of the *source list* to grab the records from, which are then added to the *destination list*.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/lists/records/{objectTypeId}/{recordId}/memberships_getLists",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_record_list_memberships",
        "description": {
          "tagline": "Retrieve lists a CRM record is a member of.",
          "detailed": "This tool retrieves the lists that a specified CRM record is a member of, helping track its association with different lists."
        },
        "return_annotation": "Lists the memberships a CRM record belongs to.",
        "arguments": [
          {
            "name": "object_type_id",
            "alternative_names": [
              "record_object_type_id",
              "crm_object_type_id"
            ],
            "description": "Specify the object type ID of the record to retrieve its list memberships.",
            "endpoint_argument_name": "objectTypeId"
          },
          {
            "name": "record_id",
            "alternative_names": [
              "record_id_value",
              "crm_record_id"
            ],
            "description": "The unique identifier of the CRM record whose list memberships you want to retrieve.",
            "endpoint_argument_name": "recordId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/lists/records/{objectTypeId}/{recordId}/memberships",
      "tags": [
        "Memberships"
      ],
      "summary": "Get lists record is member of",
      "description": "For given record provide lists this record is member of.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectTypeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Object type id of the record"
            },
            "description": "Object type id of the record",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "recordId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Id of the record"
            },
            "description": "Id of the record",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/lists/folders/{folderId}_remove",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_crm_folder",
        "description": {
          "tagline": "Deletes a specified CRM folder by ID.",
          "detailed": "Use this tool to delete a folder in HubSpot CRM by providing the folder ID. It should be called when a specific folder needs to be permanently removed from the CRM system."
        },
        "return_annotation": "Confirmation of folder deletion.",
        "arguments": [
          {
            "name": "folder_id_to_delete",
            "alternative_names": [
              "target_folder_id",
              "hubspot_folder_id"
            ],
            "description": "The ID of the folder to be deleted in HubSpot CRM.",
            "endpoint_argument_name": "folderId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/lists/folders/{folderId}",
      "tags": [
        "Folders"
      ],
      "summary": "Deletes a folder",
      "description": "Deletes the folder with the given Id.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "folderId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the folder to delete"
            },
            "description": "The ID of the folder to delete",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/lists/folders_getAll",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_folders_with_child_nodes",
        "description": {
          "tagline": "Retrieve folders and include all child folders recursively.",
          "detailed": "This tool is used to retrieve a folder from HubSpot CRM and recursively include all child folders via the childNodes attribute, while child lists in these nodes will be empty. Only the retrieved folder will include its child lists."
        },
        "return_annotation": "A folder and its recursive child nodes, excluding child lists.",
        "arguments": [
          {
            "name": "target_folder_id",
            "alternative_names": [
              "folder_identifier",
              "retrieve_folder_id"
            ],
            "description": "The ID of the folder to retrieve and include all child nodes recursively from HubSpot CRM.",
            "endpoint_argument_name": "folderId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/lists/folders",
      "tags": [
        "Folders"
      ],
      "summary": "Retrieves a folder.",
      "description": "Retrieves a folder and recursively includes all folders via the childNodes attribute.  The child lists field will be empty in all child nodes. Only the folder retrieved will include the child lists in that folder.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "folderId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The Id of the folder to retrieve."
            },
            "description": "The Id of the folder to retrieve.",
            "required": false,
            "deprecated": false,
            "default": "0",
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/lists/folders_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_folder_hubspot_crm",
        "description": {
          "tagline": "Creates a folder in HubSpot CRM with specified details.",
          "detailed": "Use this tool to create a new folder in HubSpot CRM by providing the necessary information for the folder you want to create."
        },
        "return_annotation": "Confirmation of folder creation in HubSpot CRM.",
        "arguments": [
          {
            "name": "folder_name",
            "alternative_names": [
              "name_of_folder",
              "folder_title"
            ],
            "description": "The name of the folder to be created in HubSpot CRM.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "parent_folder_id",
            "alternative_names": [
              "folder_parent_id",
              "parent_folder_identifier"
            ],
            "description": "The ID of the folder where the new folder will be created. Defaults to root folder (ID: 0) if not specified.",
            "endpoint_argument_name": "parentFolderId"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/lists/folders",
      "tags": [
        "Folders"
      ],
      "summary": "Creates a folder",
      "description": "Creates a folder with the given information.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "parentFolderId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The folder this should be created in, if not specified will be created in the root folder 0."
            },
            "description": "The folder this should be created in, if not specified will be created in the root folder 0.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "The folder this should be created in, if not specified will be created in the root folder 0."
            },
            "schema_required": false
          },
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of the folder to be created."
            },
            "description": "The name of the folder to be created.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "The name of the folder to be created."
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"parentFolderId\": {\n            \"type\": \"string\",\n            \"description\": \"The folder this should be created in, if not specified will be created in the root folder 0.\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the folder to be created.\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "put-/crm/v3/lists/{listId}/memberships/remove_remove",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_records_from_list",
        "description": {
          "tagline": "Remove specified records from a HubSpot CRM list.",
          "detailed": "Use this tool to remove records from a HubSpot CRM list with `processingType` of `MANUAL` or `SNAPSHOT`. Records not in the list will be ignored."
        },
        "return_annotation": "Confirmation of record removal from the list.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "list_identifier",
              "crm_list_id"
            ],
            "description": "The ILS ID of the MANUAL or SNAPSHOT list from which records will be removed.",
            "endpoint_argument_name": "listId"
          },
          {
            "name": "record_ids_to_remove",
            "alternative_names": [
              "ids_for_removal",
              "remove_record_ids"
            ],
            "description": "List of record IDs to remove from the HubSpot CRM list.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/v3/lists/{listId}/memberships/remove",
      "tags": [
        "Memberships"
      ],
      "summary": "Remove Records from a List",
      "description": "Remove the records provided from the list. Records that do not exist or that are not members of the list are ignored.\n\nThis endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The **ILS ID** of the `MANUAL` or `SNAPSHOT` list."
            },
            "description": "The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The IDs of the records to remove from the list."
            },
            "description": "The IDs of the records to remove from the list.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"The IDs of the records to remove from the list.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/lists/{listId}/memberships_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "fetch_hubspot_list_memberships",
        "description": {
          "tagline": "Retrieve memberships of a HubSpot list by order of record ID.",
          "detailed": "Use this tool to fetch the memberships of a specific list in HubSpot CRM, sorted by `recordId`. The results can be ordered in ascending or descending order based on the presence of an `after` or `before` offset."
        },
        "return_annotation": "List of memberships for a specified HubSpot list.",
        "arguments": [
          {
            "name": "list_identifier",
            "alternative_names": [
              "list_ils_id",
              "list_id"
            ],
            "description": "The ILS ID of the HubSpot list to retrieve memberships for.",
            "endpoint_argument_name": "listId"
          },
          {
            "name": "paging_offset_after_token",
            "alternative_names": [
              "post_offset_token",
              "next_records_offset"
            ],
            "description": "The paging offset token for the page that comes after the previously requested records. If provided, records will follow this offset, sorted in ascending order. Takes precedence over the before offset.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "before_offset_token",
            "alternative_names": [
              "before_paging_token",
              "previous_page_token"
            ],
            "description": "The paging offset token for the page before the previously requested records, used to sort records in descending order.",
            "endpoint_argument_name": "before"
          },
          {
            "name": "number_of_records_to_return",
            "alternative_names": [
              "records_limit",
              "max_records_to_fetch"
            ],
            "description": "Defines how many records to retrieve in the response, with a maximum value of 250.",
            "endpoint_argument_name": "limit"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/lists/{listId}/memberships",
      "tags": [
        "Memberships"
      ],
      "summary": "Fetch List Memberships Ordered by ID",
      "description": "Fetch the memberships of a list in order sorted by the `recordId` of the records in the list.\n\nThe `recordId`s are sorted in *ascending* order if an `after` offset or no offset is provided. If only a `before` offset is provided, then the records are sorted in *descending* order.\n\nThe `after` offset parameter will take precedence over the `before` offset in a case where both are provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging offset token for the page that comes `after` the previously requested records.\n\nIf provided, then the records in the response will be the records following the offset, sorted in *ascending* order. Takes precedence over the `before` offset."
            },
            "description": "The paging offset token for the page that comes `after` the previously requested records.\n\nIf provided, then the records in the response will be the records following the offset, sorted in *ascending* order. Takes precedence over the `before` offset.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "before",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging offset token for the page that comes `before` the previously requested records.\n\nIf provided, then the records in the response will be the records preceding the offset, sorted in *descending* order."
            },
            "description": "The paging offset token for the page that comes `before` the previously requested records.\n\nIf provided, then the records in the response will be the records preceding the offset, sorted in *descending* order.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The number of records to return in the response. The maximum `limit` is 250."
            },
            "description": "The number of records to return in the response. The maximum `limit` is 250.",
            "required": false,
            "deprecated": false,
            "default": 100,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The **ILS ID** of the list."
            },
            "description": "The **ILS ID** of the list.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/lists/{listId}/memberships_removeAll",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_all_list_memberships",
        "description": {
          "tagline": "Remove all records from a CRM list without deleting the list.",
          "detailed": "Use this tool to remove all memberships from a HubSpot CRM list that has a processing type of MANUAL or SNAPSHOT. Suitable for lists with fewer than 100,000 memberships."
        },
        "return_annotation": "Confirmation of membership removal from the list.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "list_identifier",
              "list_ils_id"
            ],
            "description": "The ILS ID of a MANUAL or SNAPSHOT list in HubSpot CRM. Required for removing all memberships.",
            "endpoint_argument_name": "listId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/lists/{listId}/memberships",
      "tags": [
        "Memberships"
      ],
      "summary": "Delete All Records from a List",
      "description": "Remove **all** of the records from a list. ***Note:*** *The list is not deleted.*\n\nThis endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.\n\nThis endpoint only supports lists that have less than 100,000 memberships.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.lists.write",
        "cms.membership.access_groups.write",
        "crm.lists.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "listId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The **ILS ID** of the `MANUAL` or `SNAPSHOT` list."
            },
            "description": "The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/meetings/{meetingId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_meeting_details_by_id",
        "description": {
          "tagline": "Retrieve detailed information about a specific meeting.",
          "detailed": "Use this tool to get information about a meeting using its unique ID. You can specify properties to control what details are returned."
        },
        "return_annotation": "Details of the specified meeting.",
        "arguments": [
          {
            "name": "meeting_identifier",
            "alternative_names": [
              "meeting_id",
              "meeting_key"
            ],
            "description": "Unique identifier for the meeting you want to retrieve details for.",
            "endpoint_argument_name": "meetingId"
          },
          {
            "name": "return_properties",
            "alternative_names": [
              "properties_to_return",
              "select_properties"
            ],
            "description": "A list of properties to be returned in the response. If any specified properties are not present, they will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_history_list",
              "historical_properties"
            ],
            "description": "Comma separated list of properties to return with history of values. Ignored if not present on the object.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associated_object_ids",
            "alternative_names": [
              "fetch_associated_ids",
              "get_associated_object_ids"
            ],
            "description": "List of object types to fetch associated IDs for. Nonexistent associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_id_property",
              "object_unique_property"
            ],
            "description": "The property name whose values uniquely identify the meeting object.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "only_archived",
            "alternative_names": [
              "archived_results_only",
              "filter_archived_only"
            ],
            "description": "Set to true to return only archived meeting results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/meetings/{meetingId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{meetingId}`. `{meetingId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "meetingId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/meetings/{meetingId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_meeting",
        "description": {
          "tagline": "Move a meeting to the recycling bin using its ID.",
          "detailed": "This tool is used to move a meeting, identified by its meeting ID, to the recycling bin in the HubSpot CRM. It is useful when you need to archive or remove a meeting from active records."
        },
        "return_annotation": "Confirmation that the meeting was moved to the recycling bin.",
        "arguments": [
          {
            "name": "meeting_id",
            "alternative_names": [
              "meeting_identifier",
              "meeting_key"
            ],
            "description": "The unique ID of the meeting to be moved to the recycling bin. This is required to identify the specific meeting.",
            "endpoint_argument_name": "meetingId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/meetings/{meetingId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{meetingId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "meetingId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/meetings/{meetingId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_hubspot_meeting",
        "description": {
          "tagline": "Update specific properties of a HubSpot meeting.",
          "detailed": "Use this tool to perform a partial update on a HubSpot CRM meeting object. Identify the meeting using `{meetingId}` or a unique property with `idProperty`. Overwrite specified property values, but note that read-only or non-existent properties will cause an error. Properties can be cleared by sending an empty string."
        },
        "return_annotation": "Acknowledgment of meeting update or error details.",
        "arguments": [
          {
            "name": "meeting_id",
            "alternative_names": [
              "meeting_identifier",
              "meeting_internal_id"
            ],
            "description": "The internal ID of the meeting or a property name with unique values for identification.",
            "endpoint_argument_name": "meetingId"
          },
          {
            "name": "meeting_update_properties",
            "alternative_names": [
              "meeting_update_data",
              "meeting_properties_changes"
            ],
            "description": "JSON object with key-value pairs for meeting properties to update. Keys are property names, values are new property values.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_name",
              "property_identifier"
            ],
            "description": "The name of the unique property for identifying the meeting.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/meetings/{meetingId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{meetingId}`or optionally a unique property value as specified by the `idProperty` query param. `{meetingId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "meetingId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/meetings/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_meetings_batch",
        "description": {
          "tagline": "Update a batch of meetings in HubSpot CRM.",
          "detailed": "This tool updates multiple meetings in HubSpot CRM using internal IDs or unique property values. It should be called when you need to modify details for several meetings at once."
        },
        "return_annotation": "Confirmation of meetings batch update.",
        "arguments": [
          {
            "name": "meeting_batch_update_payload",
            "alternative_names": [
              "meetings_update_data",
              "meeting_records_payload"
            ],
            "description": "JSON array of meeting records to update, including unique IDs and properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/meetings/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of meetings by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/meetings/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_meeting_records",
        "description": {
          "tagline": "Retrieve meeting records by ID or unique property.",
          "detailed": "Use this tool to retrieve HubSpot CRM meeting records by specifying record IDs or a custom unique value property. It helps in accessing specific meeting details efficiently."
        },
        "return_annotation": "Meeting records retrieved by ID or custom property.",
        "arguments": [
          {
            "name": "meeting_record_details",
            "alternative_names": [
              "record_parameters",
              "meeting_request_payload"
            ],
            "description": "JSON object containing meeting records' details, including properties, history, and ID parameters.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "fetch_archived_records_only",
              "get_archived_meetings_only"
            ],
            "description": "Set to true to retrieve only archived meeting records.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/meetings/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of meetings by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/meetings/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_meetings_batch",
        "description": {
          "tagline": "Archive multiple meetings by IDs in batch.",
          "detailed": "Use this tool to archive a batch of meetings by their IDs in HubSpot CRM. It is suitable for managing and cleaning up old or unnecessary meeting data efficiently."
        },
        "return_annotation": "Confirmation of archived meetings batch.",
        "arguments": [
          {
            "name": "meeting_ids_to_archive",
            "alternative_names": [
              "ids_for_meetings_archive",
              "archive_meetings_ids"
            ],
            "description": "A JSON array of meeting IDs to archive. Each entry should be a JSON object containing the 'id' of the meeting.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/meetings/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of meetings by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/meetings_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_meetings_page",
        "description": {
          "tagline": "Retrieve a page of meetings data from HubSpot CRM.",
          "detailed": "Use this tool to read a page of meetings from HubSpot CRM. You can specify which properties to return using query parameters."
        },
        "return_annotation": "Page of meetings with specified properties.",
        "arguments": [
          {
            "name": "maximum_results_per_page",
            "alternative_names": [
              "results_page_limit",
              "max_items_per_page"
            ],
            "description": "The maximum number of meeting results to display per page. Specify an integer value.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "page_cursor",
              "next_page_token"
            ],
            "description": "The token indicating the last successfully read resource, used for paging through results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "properties",
            "alternative_names": [
              "return_properties",
              "requested_properties"
            ],
            "description": "A list of property names to return in the response. If any are not present, they will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_including_history"
            ],
            "description": "List of properties to retrieve with their change history. Reduces max meetings returned per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associated_object_ids",
            "alternative_names": [
              "get_associated_object_ids",
              "fetch_associated_ids"
            ],
            "description": "List object types to retrieve associated IDs for; ignored if associations don't exist.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_archived_results",
            "alternative_names": [
              "include_archived",
              "archived_results"
            ],
            "description": "Set to true to return only archived results; false to include active results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/meetings",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of meetings. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of meetings that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of meetings that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/meetings_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_meeting",
        "description": {
          "tagline": "Create a meeting in HubSpot and get its details.",
          "detailed": "This tool is used to create a meeting in HubSpot CRM with specific properties. It returns the details of the created meeting, including the unique ID."
        },
        "return_annotation": "Details of the created HubSpot meeting, including its ID.",
        "arguments": [
          {
            "name": "meeting_properties",
            "alternative_names": [
              "meeting_details",
              "meeting_info"
            ],
            "description": "JSON object containing key-value pairs for setting properties of the meeting, including associations and specific properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/meetings",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a meeting with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard meetings is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/meetings/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_meetings",
        "description": {
          "tagline": "Create or update meeting records in HubSpot CRM.",
          "detailed": "Use this tool to create new meetings or update existing ones in HubSpot CRM by specifying a unique identifier for each record."
        },
        "return_annotation": "Confirmation of meeting records creation or update.",
        "arguments": [
          {
            "name": "meeting_records_data",
            "alternative_names": [
              "meetings_batch_data",
              "meetings_upsert_payload"
            ],
            "description": "A JSON object containing an array of meeting records to be upserted. Each record must include 'idProperty', 'objectWriteTraceId', 'id', and 'properties'.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/meetings/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of meetings by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/meetings/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_meetings",
        "description": {
          "tagline": "Create a batch of meetings in HubSpot CRM.",
          "detailed": "Use this tool to efficiently create multiple meetings at once in HubSpot CRM. Ideal for scheduling large numbers of meetings in a single operation."
        },
        "return_annotation": "Information about the created meetings batch.",
        "arguments": [
          {
            "name": "meetings_batch_data",
            "alternative_names": [
              "meetings_list",
              "meetings_payload"
            ],
            "description": "A JSON object containing an array of meetings data to be created, including associations, object write trace ID, and properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/meetings/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of meetings",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/meetings/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_hubspot_meetings",
        "description": {
          "tagline": "Search for meetings in HubSpot CRM.",
          "detailed": "Use this tool to search for meetings stored in the HubSpot CRM. It should be called whenever there is a need to locate meetings based on specific criteria within the HubSpot platform."
        },
        "return_annotation": "Search results for HubSpot meetings.",
        "arguments": [
          {
            "name": "search_criteria",
            "alternative_names": [
              "meeting_search_criteria",
              "hubspot_search_filters"
            ],
            "description": "A JSON object containing search query, limit, paging cursor, sorting options, property selection, and filter groups for HubSpot meetings.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/meetings/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/notes/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_hubspot_notes",
        "description": {
          "tagline": "Search for notes in HubSpot CRM.",
          "detailed": "Use this tool to search for specific notes within HubSpot CRM. It should be called when you need to find and retrieve notes based on particular search criteria."
        },
        "return_annotation": "HubSpot CRM notes search results.",
        "arguments": [
          {
            "name": "search_request_body",
            "alternative_names": [
              "search_query_parameters",
              "hubspot_search_criteria"
            ],
            "description": "The search criteria for notes in HubSpot. This includes query string, limits, paging, sorting, and filtering details.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/notes/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/notes_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_notes_page",
        "description": {
          "tagline": "Retrieve a page of notes from HubSpot CRM.",
          "detailed": "Use this tool to read a page of notes from HubSpot CRM. You can control the properties returned via query parameters."
        },
        "return_annotation": "A page of notes with specified properties.",
        "arguments": [
          {
            "name": "results_per_page",
            "alternative_names": [
              "max_results_per_page",
              "page_limit"
            ],
            "description": "The maximum number of note results to display per page. Specify an integer value.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "pagination_token",
              "cursor_after_token"
            ],
            "description": "Token for paging to retrieve the next set of notes. Use the token from `paging.next.after` in the previous response.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "returned_properties_list",
            "alternative_names": [
              "properties_to_return",
              "note_properties"
            ],
            "description": "List of note properties to include in the response. Specify as an array of strings.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_previous_values",
              "historical_properties"
            ],
            "description": "List of properties to return with their historical values. Reduces the maximum number of notes per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_ids",
              "association_types"
            ],
            "description": "List of object types to retrieve associated IDs for. Non-existent associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived_notes",
            "alternative_names": [
              "display_archived_notes_only",
              "fetch_archived_notes_exclusively"
            ],
            "description": "Set to True to return only archived notes; otherwise, non-archived notes are returned.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/notes",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of notes. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of notes that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of notes that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/notes_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_note_in_hubspot",
        "description": {
          "tagline": "Create a note in HubSpot CRM and return its details.",
          "detailed": "Use this tool to create a note in HubSpot CRM with specified properties. It returns a copy of the created note object, including its ID."
        },
        "return_annotation": "A copy of the created note object including its ID.",
        "arguments": [
          {
            "name": "note_creation_details",
            "alternative_names": [
              "note_properties",
              "note_parameters"
            ],
            "description": "JSON object containing key-value pairs for note properties and associations. Includes association details like category and type.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/notes",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a note with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard notes is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/notes/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_notes_records",
        "description": {
          "tagline": "Retrieve notes records by ID or custom property.",
          "detailed": "This tool retrieves records from HubSpot CRM using either record IDs or a custom unique value property specified by the `idProperty` parameter."
        },
        "return_annotation": "Details of specified notes records.",
        "arguments": [
          {
            "name": "notes_retrieval_details",
            "alternative_names": [
              "records_request_body",
              "notes_query_parameters"
            ],
            "description": "A JSON object specifying the properties to retrieve. Include `idProperty` if using a custom unique identifier, and use `inputs` to specify the records.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "include_only_archived",
              "filter_to_archived"
            ],
            "description": "Set to true to return only archived records. Use false to include non-archived records.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/notes/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of notes by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/notes/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_notes_hubspot",
        "description": {
          "tagline": "Create or update notes in HubSpot CRM by unique property.",
          "detailed": "This tool is used to create or update multiple notes in HubSpot CRM in a single request. It identifies records using a unique property value specified by the `idProperty` query parameter."
        },
        "return_annotation": "Confirmation of notes upsertion in HubSpot CRM.",
        "arguments": [
          {
            "name": "notes_data",
            "alternative_names": [
              "upsert_note_entries",
              "notes_batch"
            ],
            "description": "JSON array containing note objects with unique identifiers and properties for upsert. Each object must include 'idProperty', 'objectWriteTraceId', 'id', and 'properties'.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/notes/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of notes by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/notes/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_notes_batch",
        "description": {
          "tagline": "Archive a batch of notes by their IDs.",
          "detailed": "Use this tool to archive multiple notes in HubSpot CRM by providing their IDs. Ideal for managing large numbers of notes that need to be archived simultaneously."
        },
        "return_annotation": "Confirmation of notes batch archive operation.",
        "arguments": [
          {
            "name": "note_ids_batch",
            "alternative_names": [
              "batch_note_ids",
              "note_ids_for_archive"
            ],
            "description": "A JSON array of note IDs to be archived. Each ID should be a string.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/notes/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of notes by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/notes/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "batch_update_notes",
        "description": {
          "tagline": "Update multiple notes in HubSpot CRM by ID or property.",
          "detailed": "Use this tool to update a batch of notes in HubSpot CRM by their internal IDs or unique property values. Ideal for situations where multiple notes need simultaneous modifications."
        },
        "return_annotation": "Status and details of notes batch update.",
        "arguments": [
          {
            "name": "update_notes_payload",
            "alternative_names": [
              "notes_update_data",
              "batch_notes_payload"
            ],
            "description": "JSON payload containing an array of objects with 'id', 'idProperty', 'objectWriteTraceId', and 'properties' to update multiple notes in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/notes/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of notes by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/notes/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_of_notes",
        "description": {
          "tagline": "Create multiple notes in a CRM batch operation.",
          "detailed": "Use this tool to create a batch of notes in HubSpot CRM. Ideal for adding multiple notes efficiently in a single operation."
        },
        "return_annotation": "Confirmation of batch note creation.",
        "arguments": [
          {
            "name": "batch_notes_data",
            "alternative_names": [
              "notes_batch_content",
              "multiple_notes_data"
            ],
            "description": "JSON structure containing note details. Each note should include associations, objectWriteTraceId, and other properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/notes/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of notes",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/notes/{noteId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_note_details",
        "description": {
          "tagline": "Retrieve details of a note by its unique ID.",
          "detailed": "Use this tool to get details of a note from HubSpot CRM using its unique ID. You can specify additional properties to control the returned data."
        },
        "return_annotation": "Details of a specific note by its ID.",
        "arguments": [
          {
            "name": "note_id",
            "alternative_names": [
              "note_identifier",
              "note_key"
            ],
            "description": "The unique identifier of the note to retrieve details for.",
            "endpoint_argument_name": "noteId"
          },
          {
            "name": "properties_to_return",
            "alternative_names": [
              "property_list",
              "select_properties"
            ],
            "description": "A list of property names to return for the note. Non-existing properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "return_properties_with_history",
            "alternative_names": [
              "retrieve_properties_with_history",
              "fetch_properties_with_history"
            ],
            "description": "List properties to return with their history of previous values. Ignored if not present on the object.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "connections"
            ],
            "description": "List the object types to retrieve associated IDs for, separated by commas. Invalid types are ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "id_property",
              "identifier_property"
            ],
            "description": "Specify the unique property name to identify the object in HubSpot CRM.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_archived_results_only",
            "alternative_names": [
              "filter_archived_notes",
              "retrieve_archived_only"
            ],
            "description": "Set to true to return only archived notes.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/notes/{noteId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{noteId}`. `{noteId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "noteId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/notes/{noteId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_note_hubspot",
        "description": {
          "tagline": "Move a HubSpot note to the recycling bin.",
          "detailed": "Use this tool to move a note identified by `noteId` in HubSpot CRM to the recycling bin. This is useful for soft-deleting notes when they are no longer needed in the immediate CRM workspace."
        },
        "return_annotation": "Confirmation of note deletion.",
        "arguments": [
          {
            "name": "note_id",
            "alternative_names": [
              "note_identifier",
              "note_key"
            ],
            "description": "The unique identifier of the note to be archived in HubSpot CRM.",
            "endpoint_argument_name": "noteId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/notes/{noteId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{noteId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "noteId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/notes/{noteId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_hubspot_note",
        "description": {
          "tagline": "Update a HubSpot note with new property values.",
          "detailed": "Use this tool to update specific properties of a HubSpot CRM note. Identify the note by its ID or a unique property value and provide new values for properties you wish to change. Read-only and non-existent properties cannot be updated. Clear properties by passing an empty string."
        },
        "return_annotation": "Information about the updated HubSpot note.",
        "arguments": [
          {
            "name": "note_identifier",
            "alternative_names": [
              "note_id",
              "unique_note_key"
            ],
            "description": "The ID or unique property value of the note to update. Use `noteId` for internal ID or specify a unique property via `idProperty`.",
            "endpoint_argument_name": "noteId"
          },
          {
            "name": "note_update_properties",
            "alternative_names": [
              "note_properties_update",
              "update_note_fields"
            ],
            "description": "JSON object with key-value pairs representing the properties and their new values for a HubSpot note. Pass an empty string to clear a property. Non-existent or read-only properties will cause an error.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_name_for_identification"
            ],
            "description": "The name of a property with unique values for this object, used to identify the note.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/notes/{noteId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{noteId}`or optionally a unique property value as specified by the `idProperty` query param. `{noteId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "noteId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/object-library/enablement",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "fetch_enablement_data",
        "description": {
          "tagline": "Fetch enablement data from HubSpot CRM.",
          "detailed": "Use this tool to obtain enablement information from the HubSpot CRM. It should be called when detailed enablement data is required for CRM-related operations or analyses."
        },
        "return_annotation": "Retrieved enablement information from HubSpot CRM.",
        "arguments": []
      },
      "method": "GET",
      "path": "/crm/v3/object-library/enablement",
      "tags": [
        "Enablement"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/object-library/enablement/{objectTypeId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "enable_object_type_in_hubspot",
        "description": {
          "tagline": "Enable an object type in HubSpot CRM via its ID.",
          "detailed": "This tool is used to enable a specific object type in HubSpot's CRM system using the object's unique ID. It should be called when there is a need to activate or verify the activation status of a specific object category in HubSpot."
        },
        "return_annotation": "Object type enablement status in HubSpot CRM.",
        "arguments": [
          {
            "name": "object_type_id",
            "alternative_names": [
              "object_type_identifier",
              "hubspot_object_id"
            ],
            "description": "The unique identifier for the object type in HubSpot CRM that needs to be enabled.",
            "endpoint_argument_name": "objectTypeId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/object-library/enablement/{objectTypeId}",
      "tags": [
        "Enablement"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.services.write",
        "tickets.sensitive.v2",
        "crm.objects.contacts.write",
        "crm.objects.courses.read",
        "crm.objects.goals.write",
        "crm.objects.custom.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.commercepayments.read",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.leads.read",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.partner-services.write",
        "e-commerce",
        "crm.objects.products.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.objects.orders.write",
        "crm.objects.subscriptions.write",
        "tickets.highly_sensitive.v2",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.objects.companies.write",
        "crm.objects.partner-services.read",
        "tickets",
        "crm.objects.quotes.read",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.companies.read",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.carts.write",
        "crm.objects.quotes.write",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.appointments.write",
        "crm.objects.partner-clients.write",
        "crm.objects.line_items.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.appointments.read",
        "crm.objects.invoices.read",
        "crm.objects.partner-clients.read",
        "crm.objects.courses.write",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.listings.write",
        "crm.objects.subscriptions.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.commercepayments.write",
        "crm.objects.leads.write",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.goals.read",
        "crm.objects.orders.read",
        "crm.objects.contacts.sensitive.read.v2",
        "media_bridge.read",
        "crm.objects.deals.sensitive.write.v2",
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectTypeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/orders/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_order_records",
        "description": {
          "tagline": "Search for order records in HubSpot CRM.",
          "detailed": "This tool searches order records in HubSpot CRM based on specified criteria. It should be called when you need to find specific order details or filter orders according to certain conditions."
        },
        "return_annotation": "Search results for order records.",
        "arguments": [
          {
            "name": "order_search_criteria",
            "alternative_names": [
              "order_query_parameters",
              "order_filter_conditions"
            ],
            "description": "JSON object containing criteria for searching order records in HubSpot CRM, including query, sorting, paging, and filters.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/orders/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.orders.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/orders/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_hubspot_orders",
        "description": {
          "tagline": "Retrieve order records from HubSpot CRM by ID or custom property.",
          "detailed": "Use this tool to fetch order records from HubSpot CRM by providing record IDs or a custom unique value property. Ideal for accessing specific order details stored in your HubSpot account."
        },
        "return_annotation": "Retrieve HubSpot order records by IDs or custom unique properties.",
        "arguments": [
          {
            "name": "order_retrieval_data",
            "alternative_names": [
              "order_data_request",
              "orders_input_payload"
            ],
            "description": "JSON object containing properties for retrieval, such as 'idProperty' for custom unique values or 'inputs' for record IDs.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_only_archived_orders",
            "alternative_names": [
              "retrieve_archived_only",
              "fetch_exclusively_archived"
            ],
            "description": "Set to True to return only archived order records from HubSpot CRM.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/orders/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of orders by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.orders.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/orders/{orderId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_order_details",
        "description": {
          "tagline": "Retrieve details of an order using its ID.",
          "detailed": "Call this tool to get detailed information about a specific order from the HubSpot CRM by using the order's ID. You can control which properties of the order are returned by specifying them in the `properties` query parameter."
        },
        "return_annotation": "Order details including specified properties.",
        "arguments": [
          {
            "name": "order_identifier",
            "alternative_names": [
              "order_id",
              "order_reference"
            ],
            "description": "The unique identifier for the order. This can be the internal object ID or a unique property value specified by the idProperty.",
            "endpoint_argument_name": "orderId"
          },
          {
            "name": "return_properties",
            "alternative_names": [
              "properties_to_return",
              "desired_properties"
            ],
            "description": "List the properties to retrieve for the order. Any nonexistent properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "property_history_list",
              "properties_with_past_values"
            ],
            "description": "A list of properties to return with their history of previous values. If specified properties are not present, they will be ignored.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "Comma separated list of object types to retrieve associated IDs. Non-existent associations are ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_id_property",
              "property_key_name"
            ],
            "description": "Specify the name of a unique property to identify the order. Overrides the default ID.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "get_archived_results",
              "retrieve_archived_items"
            ],
            "description": "Set to true to return only archived results for the specified order.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/orders/{orderId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{orderId}`. `{orderId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.orders.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "orderId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/orders/{orderId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_order_by_id",
        "description": {
          "tagline": "Deletes an order by its ID from the CRM.",
          "detailed": "Use this tool to delete an order from the CRM system by providing its unique ID. The order will be moved to the recycling bin, allowing for potential recovery later if needed."
        },
        "return_annotation": "Confirms the order has been moved to the recycling bin.",
        "arguments": [
          {
            "name": "order_id",
            "alternative_names": [
              "order_identifier",
              "order_key"
            ],
            "description": "The unique ID of the order to delete, moving it to the recycling bin.",
            "endpoint_argument_name": "orderId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/orders/{orderId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{orderId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.orders.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "orderId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/orders/{orderId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_order_details",
        "description": {
          "tagline": "Update specific details of an order using its ID.",
          "detailed": "This tool performs a partial update of an order in HubSpot CRM, identified by the order's internal ID or a unique property value. Use it to modify existing order properties; read-only or non-existent properties cannot be updated and will cause errors. Properties can be cleared by providing empty values."
        },
        "return_annotation": "Confirmation of the order update status.",
        "arguments": [
          {
            "name": "order_id",
            "alternative_names": [
              "order_identifier",
              "order_key"
            ],
            "description": "The internal ID of the order to be updated.",
            "endpoint_argument_name": "orderId"
          },
          {
            "name": "order_update_properties",
            "alternative_names": [
              "order_update_payload",
              "order_properties_update"
            ],
            "description": "JSON object with key-value pairs of order properties to update. Empty strings can clear property values.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_property_identifier",
              "property_identifier"
            ],
            "description": "Specify the name of a unique property to identify the order object instead of using the order ID.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/orders/{orderId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{orderId}`or optionally a unique property value as specified by the `idProperty` query param. `{orderId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.orders.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "orderId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/orders/batch/upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_orders_in_hubspot",
        "description": {
          "tagline": "Create or update orders in HubSpot CRM.",
          "detailed": "This tool calls the HubSpot CRM API to create or update multiple order records based on a unique property value. Use it when you need to batch insert or update orders by specifying a unique identifier for each order."
        },
        "return_annotation": "Confirmation of orders created or updated in HubSpot CRM.",
        "arguments": [
          {
            "name": "orders_request_body",
            "alternative_names": [
              "orders_data",
              "order_payload"
            ],
            "description": "JSON object containing an array of orders, each with unique identifiers and properties for upsert operation.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/orders/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of orders by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.orders.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/orders/batch/create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_orders",
        "description": {
          "tagline": "Create a batch of orders in HubSpot CRM.",
          "detailed": "Use this tool to create multiple orders at once in HubSpot CRM. It is suitable when you need to efficiently process and record several orders simultaneously."
        },
        "return_annotation": "Confirmation of batch order creation.",
        "arguments": [
          {
            "name": "orders_batch_data",
            "alternative_names": [
              "batch_orders_payload",
              "orders_creation_data"
            ],
            "description": "JSON array of orders to be created. Each order includes associations, properties, and an objectWriteTraceId.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/orders/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of orders",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.orders.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/orders/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_hubspot_orders_batch",
        "description": {
          "tagline": "Update multiple HubSpot CRM orders in a batch.",
          "detailed": "Use this tool to update a batch of orders in HubSpot CRM by their internal ID or unique property values. Useful for modifying multiple order records at once."
        },
        "return_annotation": "Confirmation of batch order update.",
        "arguments": [
          {
            "name": "order_batch_update_data",
            "alternative_names": [
              "order_update_payload",
              "batch_update_data"
            ],
            "description": "JSON object containing an array of order update details, including unique IDs and property key-value pairs.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/orders/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of orders by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.orders.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/orders",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_orders_page",
        "description": {
          "tagline": "Retrieve a page of orders from CRM.",
          "detailed": "This tool fetches a page of orders from the CRM. You can specify which properties to include in the results using the query parameters. Use this tool to list orders when needed."
        },
        "return_annotation": "A page of orders with specified properties.",
        "arguments": [
          {
            "name": "results_per_page",
            "alternative_names": [
              "max_results_per_page",
              "page_size"
            ],
            "description": "The maximum number of orders to display per page. This controls the pagination size.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "pagination_cursor"
            ],
            "description": "Token for pagination, representing the last successfully read resource for fetching the next page of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "order_properties_to_return",
            "alternative_names": [
              "fields_to_include",
              "attributes_to_retrieve"
            ],
            "description": "A list of properties to be included in the order response. Specify as a comma-separated string. Ignored if not present on the objects.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "order_properties_history",
              "historical_properties"
            ],
            "description": "A list of order properties to return with their history of previous values. Reduces maximum results per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "A list of object types to retrieve associated IDs for; ignored if not existing.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "only_return_archived_orders",
            "alternative_names": [
              "return_archived_only",
              "archived_orders_only"
            ],
            "description": "Set to true to return only archived orders. False returns both archived and unarchived orders.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/orders",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of orders. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.orders.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of orders that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of orders that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/orders",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_order",
        "description": {
          "tagline": "Create a new order in HubSpot CRM with specified properties.",
          "detailed": "Use this tool to create a new order in the HubSpot CRM system. It returns the details and ID of the created order, allowing further tracking and management."
        },
        "return_annotation": "Details of the newly created order, including its ID.",
        "arguments": [
          {
            "name": "order_details",
            "alternative_names": [
              "order_data",
              "new_order_info"
            ],
            "description": "JSON object containing associations and properties for the new order. Includes key-value pairs for details like customer ID and association types.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/orders",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a order with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard orders is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.orders.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/orders/batch/archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_orders_batch",
        "description": {
          "tagline": "Archive a batch of orders by ID in HubSpot CRM.",
          "detailed": ""
        },
        "return_annotation": "Confirmation of batch orders archived.",
        "arguments": [
          {
            "name": "order_ids_to_archive",
            "alternative_names": [
              "orders_to_archive",
              "ids_for_archiving"
            ],
            "description": "A JSON array of order IDs to archive, each with an 'id' field as a string.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/orders/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of orders by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.orders.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/partner_clients/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_partner_clients_batch",
        "description": {
          "tagline": "Update multiple partner clients in a batch.",
          "detailed": "Use this tool to update information for multiple partner clients simultaneously in HubSpot CRM. It should be called when you need to make bulk updates to partner client records."
        },
        "return_annotation": "Confirmation of batch update success or failure.",
        "arguments": [
          {
            "name": "partner_clients_update_data",
            "alternative_names": [
              "batch_update_data",
              "clients_bulk_update_payload"
            ],
            "description": "JSON containing an array of objects, each with 'idProperty', 'objectWriteTraceId', 'id', and 'properties' to update specific client records in bulk.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/partner_clients/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-clients.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/partner_clients",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_partner_clients",
        "description": {
          "tagline": "Retrieve partner clients from HubSpot CRM.",
          "detailed": "This tool retrieves a list of partner clients from the HubSpot CRM. It should be called when users need to access details about their partner clients stored in HubSpot's CRM."
        },
        "return_annotation": "List of partner clients from HubSpot CRM.",
        "arguments": [
          {
            "name": "retrieval_limit",
            "alternative_names": [
              "max_results",
              "record_count_limit"
            ],
            "description": "Specifies the maximum number of partner clients to retrieve from the HubSpot CRM in a single call.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "pagination_cursor",
            "alternative_names": [
              "next_page_token",
              "cursor_after"
            ],
            "description": "A string token to retrieve the next page of partner clients, obtained from a previous response.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "client_properties",
            "alternative_names": [
              "client_attributes",
              "partner_client_fields"
            ],
            "description": "A list of specific client properties to retrieve, such as 'name', 'email', etc.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_history",
              "historic_properties"
            ],
            "description": "List property names to retrieve along with their historical versions. Each property should be specified as a string.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "include_associations",
            "alternative_names": [
              "with_associations",
              "fetch_associations"
            ],
            "description": "List of associations to include in the response. Specify names of associations as strings.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "include_archived",
            "alternative_names": [
              "show_archived",
              "fetch_archived"
            ],
            "description": "Set to true to include archived partner clients, false to exclude them.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/partner_clients",
      "tags": [
        "Basic"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-clients.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/partner_clients/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "batch_read_partner_clients",
        "description": {
          "tagline": "Fetch batch details of partner clients in HubSpot CRM.",
          "detailed": "Use this tool to retrieve information for multiple partner clients at once from HubSpot CRM. Ideal for scenarios where bulk data about partner clients is needed."
        },
        "return_annotation": "Batch details of partner clients.",
        "arguments": [
          {
            "name": "partner_clients_request_body",
            "alternative_names": [
              "client_batch_request",
              "partner_client_data_input"
            ],
            "description": "JSON object containing partner client details such as properties with history, id properties, inputs, and properties to retrieve batch data.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "include_archived",
            "alternative_names": [
              "show_archived",
              "retrieve_archived_clients"
            ],
            "description": "Set to true to include archived partner clients in the batch results. Default is false.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/partner_clients/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-clients.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/partner_clients/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_partner_clients",
        "description": {
          "tagline": "Perform a search for partner clients in CRM.",
          "detailed": "Use this tool to search for partner clients within the HubSpot CRM system. It should be called when you need to find specific partner client information or records based on search criteria."
        },
        "return_annotation": "Search results for partner clients in CRM.",
        "arguments": [
          {
            "name": "partner_clients_search_criteria",
            "alternative_names": [
              "search_body",
              "query_parameters"
            ],
            "description": "A JSON object containing search criteria for partner clients, including query, limit, paging, sorting, properties, and filter groups.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/partner_clients/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-clients.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/partner_clients/{partnerClientId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_partner_client_info",
        "description": {
          "tagline": "Retrieve information for a specific partner client.",
          "detailed": "Call this tool to obtain details about a specific partner client using their unique identifier within the HubSpot CRM."
        },
        "return_annotation": "Information about a specific partner client.",
        "arguments": [
          {
            "name": "partner_client_id",
            "alternative_names": [
              "partner_client_identifier",
              "client_id"
            ],
            "description": "The unique identifier for the partner client to retrieve details from HubSpot CRM.",
            "endpoint_argument_name": "partnerClientId"
          },
          {
            "name": "optional_properties",
            "alternative_names": [
              "specific_properties",
              "requested_properties"
            ],
            "description": "An array of specific properties to retrieve for the partner client. Leave empty to obtain all available properties.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_including_history"
            ],
            "description": "Specify the list of properties to retrieve, including their historical values.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_objects",
            "alternative_names": [
              "linked_entities",
              "related_items"
            ],
            "description": "A list of associated object types to include, such as 'contacts' or 'deals'.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "property_id",
            "alternative_names": [
              "identifier_property",
              "id_property"
            ],
            "description": "Specify which property should be used as the primary identifier for the partner client. Useful for custom identification schemes.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "include_archived_data",
            "alternative_names": [
              "show_archived_records",
              "retrieve_archived_data"
            ],
            "description": "Boolean to specify if archived partner client data should be included in the response. Set to true to include archived data.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/partner_clients/{partnerClientId}",
      "tags": [
        "Basic"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-clients.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "partnerClientId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/partner_clients/{partnerClientId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_partner_client",
        "description": {
          "tagline": "Update details of a partner client in HubSpot CRM.",
          "detailed": "This tool is used to modify the information of a specified partner client in HubSpot CRM. It should be called when there is a need to update or change details related to a partner client using their unique ID."
        },
        "return_annotation": "Confirmation of the partner client update.",
        "arguments": [
          {
            "name": "partner_client_id",
            "alternative_names": [
              "partner_id",
              "client_id"
            ],
            "description": "The unique identifier for the partner client to be updated in HubSpot CRM.",
            "endpoint_argument_name": "partnerClientId"
          },
          {
            "name": "partner_client_update_details",
            "alternative_names": [
              "client_details_update",
              "update_client_properties"
            ],
            "description": "JSON object containing key-value pairs of properties to update for the partner client.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "identifier_property",
            "alternative_names": [
              "id_field",
              "identifier_attribute"
            ],
            "description": "Specify the property name used to identify the partner client for update operations.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/partner_clients/{partnerClientId}",
      "tags": [
        "Basic"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-clients.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "partnerClientId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "put-/crm/v3/objects/partner_clients/{partnerClientId}/associations/{toObjectType}/{toObjectId}/{associationType}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "associate_partner_client_with_object",
        "description": {
          "tagline": "Associate a partner client with another CRM object.",
          "detailed": "Use this tool to create an association between a partner client and another object in the CRM system, such as a contact, company, or deal. This can help in linking related entities for better data management and relationship tracking."
        },
        "return_annotation": "Confirmation of successful association between objects.",
        "arguments": [
          {
            "name": "partner_client_id",
            "alternative_names": [
              "client_identifier",
              "partner_id"
            ],
            "description": "The unique identifier for the partner client you wish to associate with another object. This should be a string representing the partner client's ID in the CRM system.",
            "endpoint_argument_name": "partnerClientId"
          },
          {
            "name": "target_object_type",
            "alternative_names": [
              "destination_object_type",
              "associated_object_type"
            ],
            "description": "The type of the object to associate with the partner client (e.g., contact, company, deal).",
            "endpoint_argument_name": "toObjectType"
          },
          {
            "name": "target_object_id",
            "alternative_names": [
              "object_id",
              "destination_object_id"
            ],
            "description": "The unique identifier of the CRM object you are associating with the partner client. This could be any valid object ID such as that of a contact, company, or deal.",
            "endpoint_argument_name": "toObjectId"
          },
          {
            "name": "association_type",
            "alternative_names": [
              "link_type",
              "relationship_type"
            ],
            "description": "Specifies the type of association (e.g., contact, company, deal) between the partner client and the object.",
            "endpoint_argument_name": "associationType"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/v3/objects/partner_clients/{partnerClientId}/associations/{toObjectType}/{toObjectId}/{associationType}",
      "tags": [
        "Associations"
      ],
      "summary": "Associate a partner client with another object",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-clients.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "partnerClientId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "associationType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/partner_clients/{partnerClientId}/associations/{toObjectType}/{toObjectId}/{associationType}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_partner_client_association",
        "description": {
          "tagline": "Remove an association between two partner clients in HubSpot CRM.",
          "detailed": "This tool removes an existing association between two partner clients in the HubSpot CRM system. It should be called when you need to disassociate a partner client from another object, identified by specific IDs and association type."
        },
        "return_annotation": "Confirmation of association removal between partner clients.",
        "arguments": [
          {
            "name": "partner_client_id",
            "alternative_names": [
              "client_id",
              "partner_id"
            ],
            "description": "The unique identifier for the partner client to be disassociated. This should be a string that identifies the specific partner client in the HubSpot CRM.",
            "endpoint_argument_name": "partnerClientId"
          },
          {
            "name": "target_object_type",
            "alternative_names": [
              "related_object_type",
              "association_object_type"
            ],
            "description": "Specify the type of the object you are dissociating from the partner client, such as 'contacts' or 'companies'.",
            "endpoint_argument_name": "toObjectType"
          },
          {
            "name": "target_object_id",
            "alternative_names": [
              "destination_object_id",
              "related_object_id"
            ],
            "description": "The unique identifier of the object associated with the target partner client.",
            "endpoint_argument_name": "toObjectId"
          },
          {
            "name": "association_type",
            "alternative_names": [
              "link_type",
              "connection_type"
            ],
            "description": "The type of association to be removed between the partner client and the object. This defines the nature of their relationship.",
            "endpoint_argument_name": "associationType"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/partner_clients/{partnerClientId}/associations/{toObjectType}/{toObjectId}/{associationType}",
      "tags": [
        "Associations"
      ],
      "summary": "Remove an association between two partner clients",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-clients.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "partnerClientId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "associationType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/partner_clients/{partnerClientId}/associations/{toObjectType}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "list_partner_client_associations",
        "description": {
          "tagline": "Retrieve associations of a partner client by type.",
          "detailed": "Use this tool to list associations for a specific partner client in HubSpot CRM. It helps in retrieving related objects based on the specified type."
        },
        "return_annotation": "List of associations of a partner client by type.",
        "arguments": [
          {
            "name": "partner_client_id",
            "alternative_names": [
              "client_id",
              "partner_id"
            ],
            "description": "The unique identifier for the partner client whose associations are to be retrieved. It is required and must be a valid string.",
            "endpoint_argument_name": "partnerClientId"
          },
          {
            "name": "target_object_type",
            "alternative_names": [
              "associated_object_type",
              "related_object_type"
            ],
            "description": "The type of object to which the partner client is associated. Specify using a string value representing the object type, such as 'contact' or 'deal'.",
            "endpoint_argument_name": "toObjectType"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "cursor_after_token",
              "paging_after_token"
            ],
            "description": "The token used for pagination to fetch the next set of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "max_results_per_page",
            "alternative_names": [
              "results_limit",
              "page_size"
            ],
            "description": "Specify the maximum number of results to display per page. Use an integer value.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "include_family_associations",
            "alternative_names": [
              "include_full_associations",
              "include_all_associations"
            ],
            "description": "Indicate whether to include family associations in the response. Set to true to include them.",
            "endpoint_argument_name": "includeFA"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/partner_clients/{partnerClientId}/associations/{toObjectType}",
      "tags": [
        "Associations"
      ],
      "summary": "List associations of a partner client by type",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-clients.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 500,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "includeFA",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "partnerClientId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/partner_services/{partnerServiceId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_partner_service_details",
        "description": {
          "tagline": "Retrieve details of a partner service by ID.",
          "detailed": "Use this tool to get information about a specific partner service object using its ID. You can specify which properties to return or use the default settings to retrieve comprehensive details."
        },
        "return_annotation": "Details of the specified partner service object.",
        "arguments": [
          {
            "name": "partner_service_id",
            "alternative_names": [
              "partner_service_identifier",
              "service_id"
            ],
            "description": "The unique ID of the partner service object to retrieve. This can be the internal object ID or a unique property value as specified by the `idProperty`.",
            "endpoint_argument_name": "partnerServiceId"
          },
          {
            "name": "properties_to_return",
            "alternative_names": [
              "properties_list",
              "desired_properties"
            ],
            "description": "A list of property names to return for the partner service. Any missing properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_with_value_history"
            ],
            "description": "List of properties whose historical values should be returned for the partner service object.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associated_ids",
            "alternative_names": [
              "fetch_associated_object_ids",
              "get_associated_ids"
            ],
            "description": "Comma-separated list of object types to retrieve associated IDs. Non-existent associations are ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_id_property",
              "property_name_for_identification"
            ],
            "description": "The name of a unique property to identify the object.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "show_archived_only",
              "include_only_archived"
            ],
            "description": "Set to true to return only archived results, false otherwise.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/partner_services/{partnerServiceId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{partnerServiceId}`. `{partnerServiceId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-services.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "partnerServiceId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/partner_services/{partnerServiceId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_partner_service",
        "description": {
          "tagline": "Partially update a partner service object in HubSpot CRM.",
          "detailed": "Use this tool to update specific properties of a partner service object identified by `partnerServiceId` in HubSpot CRM. You can also use a unique property value specified by `idProperty`. Only existing, non-read-only properties can be updated. To clear a property, pass an empty string."
        },
        "return_annotation": "Details of the updated partner service object.",
        "arguments": [
          {
            "name": "partner_service_id",
            "alternative_names": [
              "service_id",
              "partner_id"
            ],
            "description": "The internal object ID of the partner service to update. Use this to specify the object you want to partially update.",
            "endpoint_argument_name": "partnerServiceId"
          },
          {
            "name": "update_properties",
            "alternative_names": [
              "modify_properties",
              "edit_properties"
            ],
            "description": "JSON object with key-value pairs representing properties to update. Non-existent or read-only properties will cause errors. Use empty strings to clear properties.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "identifier_property_name",
              "distinct_property_name"
            ],
            "description": "Specify the name of a unique property for the partner service object to identify it. This is used instead of the default internal ID.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/partner_services/{partnerServiceId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{partnerServiceId}`or optionally a unique property value as specified by the `idProperty` query param. `{partnerServiceId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-services.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "partnerServiceId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/partner_services/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_partner_services_records",
        "description": {
          "tagline": "Retrieve partner services records by ID or unique property.",
          "detailed": "This tool retrieves records for partner services using either a record ID or a custom unique value property. It is ideal for accessing specific partner service data within the HubSpot CRM."
        },
        "return_annotation": "Retrieved records for specified partner services.",
        "arguments": [
          {
            "name": "partner_services_query",
            "alternative_names": [
              "partner_services_request_body",
              "partner_services_data_payload"
            ],
            "description": "A JSON object containing query details for retrieving partner services records. Include 'idProperty' for custom retrieval, or provide 'inputs' with record IDs.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_only_archived_records",
            "alternative_names": [
              "only_archived_results",
              "archived_records_only"
            ],
            "description": "Set to true to return only the archived records. False will include non-archived records.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/partner_services/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of partner services by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-services.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/partner_services/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_partner_services_hubspot",
        "description": {
          "tagline": "Search for partner services in HubSpot CRM.",
          "detailed": "Use this tool to perform a search for partner services within the HubSpot CRM. It can be called when you need to find specific partner services based on given criteria or parameters."
        },
        "return_annotation": "Results of the partner services search query.",
        "arguments": [
          {
            "name": "partner_services_search_request",
            "alternative_names": [
              "search_parameters_hubspot",
              "query_criteria_hubspot"
            ],
            "description": "JSON object containing search parameters such as query, limit, properties to include, sorting options, and filtering criteria for searching partner services.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/partner_services/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-services.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/partner_services",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_partner_services",
        "description": {
          "tagline": "Retrieve a page of partner services.",
          "detailed": "Fetch a list of partner services from the HubSpot CRM. The returned data can be customized using the `properties` query parameter."
        },
        "return_annotation": "A page of partner services data.",
        "arguments": [
          {
            "name": "maximum_results_per_page",
            "alternative_names": [
              "results_display_limit",
              "page_result_limit"
            ],
            "description": "The maximum number of results to display per page. Must be an integer value.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_after",
            "alternative_names": [
              "cursor_after",
              "next_page_token"
            ],
            "description": "The cursor token to retrieve the next page of results in a paged response.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "return_properties",
            "alternative_names": [
              "response_properties",
              "desired_properties"
            ],
            "description": "List of properties to return in the response. Ignored if not present on requested objects.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_history",
              "historical_properties"
            ],
            "description": "List of property names to fetch with their history. Reduces max number of results per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "A list of object types to retrieve associated IDs for. Ignored if associations do not exist.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived",
            "alternative_names": [
              "show_only_archived",
              "filter_only_archived"
            ],
            "description": "Set to true to return only results that have been archived.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/partner_services",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of partner services. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-services.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of partner services that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of partner services that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "put-/crm/v3/objects/partner_services/{partnerServiceId}/associations/{toObjectType}/{toObjectId}/{associationType}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "associate_partner_service",
        "description": {
          "tagline": "Associate a partner service with another CRM object.",
          "detailed": "Use this tool to associate a partner service with another CRM object in HubSpot, such as contacts, companies, or deals. This is useful when you want to establish connections between different objects in your CRM."
        },
        "return_annotation": "Confirmation of the association operation.",
        "arguments": [
          {
            "name": "partner_service_id",
            "alternative_names": [
              "service_id",
              "partner_id"
            ],
            "description": "The identifier for the partner service to associate with another object. This should be a valid string representing the unique ID of the partner service in the CRM.",
            "endpoint_argument_name": "partnerServiceId"
          },
          {
            "name": "target_object_type",
            "alternative_names": [
              "destination_object_type",
              "related_object_type"
            ],
            "description": "The type of CRM object to associate with the partner service, e.g., 'contacts', 'companies', or 'deals'.",
            "endpoint_argument_name": "toObjectType"
          },
          {
            "name": "target_object_id",
            "alternative_names": [
              "object_id_to_associate",
              "destination_object_id"
            ],
            "description": "The ID of the target object you want to associate with the partner service. This should be a valid object ID in HubSpot CRM.",
            "endpoint_argument_name": "toObjectId"
          },
          {
            "name": "association_type",
            "alternative_names": [
              "association_kind",
              "relation_type"
            ],
            "description": "Specifies the type of association to create between the partner service and another object (e.g., \"owner\", \"affiliate\").",
            "endpoint_argument_name": "associationType"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/v3/objects/partner_services/{partnerServiceId}/associations/{toObjectType}/{toObjectId}/{associationType}",
      "tags": [
        "Associations"
      ],
      "summary": "Associate a partner service with another object",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-services.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "partnerServiceId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "associationType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/partner_services/{partnerServiceId}/associations/{toObjectType}/{toObjectId}/{associationType}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_partner_service_association",
        "description": {
          "tagline": "Remove an association between two partner services.",
          "detailed": "This tool removes the specified association between partner services in HubSpot CRM. Use it when you need to disassociate two services linked by a specific relationship."
        },
        "return_annotation": "Confirmation of association removal.",
        "arguments": [
          {
            "name": "partner_service_id",
            "alternative_names": [
              "partner_service_identifier",
              "service_id"
            ],
            "description": "The unique identifier for the partner service. It specifies which partner service's association is to be removed.",
            "endpoint_argument_name": "partnerServiceId"
          },
          {
            "name": "target_object_type",
            "alternative_names": [
              "destination_object_type",
              "associated_object_type"
            ],
            "description": "The type of the object to which the partner service is associated. Specify the object category, such as 'contact', 'company', etc.",
            "endpoint_argument_name": "toObjectType"
          },
          {
            "name": "target_object_id",
            "alternative_names": [
              "destination_object_id",
              "associated_service_id"
            ],
            "description": "The unique identifier of the object to be disassociated from the partner service. This is required to specify which object is being unlinked.",
            "endpoint_argument_name": "toObjectId"
          },
          {
            "name": "association_type",
            "alternative_names": [
              "relationship_type",
              "association_kind"
            ],
            "description": "Specifies the type of association to remove between the partner services. This is a string value that defines how the services are linked.",
            "endpoint_argument_name": "associationType"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/partner_services/{partnerServiceId}/associations/{toObjectType}/{toObjectId}/{associationType}",
      "tags": [
        "Associations"
      ],
      "summary": "Remove an association between two partner services",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-services.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "partnerServiceId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "associationType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/partner_services/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_partner_services_batch",
        "description": {
          "tagline": "Update multiple partner services in CRM by ID or unique properties.",
          "detailed": "Use this tool to update a batch of partner services in the HubSpot CRM using internal IDs or unique property values."
        },
        "return_annotation": "Confirmation of the batch update of partner services.",
        "arguments": [
          {
            "name": "partner_service_updates",
            "alternative_names": [
              "partner_service_batch_data",
              "update_service_payload"
            ],
            "description": "A JSON array containing objects with details like `id`, `idProperty`, `properties`, and `objectWriteTraceId` to update partner services.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/partner_services/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of partner services by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-services.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/partner_services/{partnerServiceId}/associations/{toObjectType}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "list_partner_service_associations",
        "description": {
          "tagline": "Retrieve associations of a partner service by type.",
          "detailed": "This tool retrieves a list of associations for a specified partner service in HubSpot CRM based on the provided type. It should be called when you need to explore relationships connected to a partner service, filtering by specific object types."
        },
        "return_annotation": "List of associations for the specified partner service and type.",
        "arguments": [
          {
            "name": "partner_service_id",
            "alternative_names": [
              "service_id",
              "partner_id"
            ],
            "description": "The unique identifier of the partner service to retrieve associations for. This ID is required.",
            "endpoint_argument_name": "partnerServiceId"
          },
          {
            "name": "target_object_type",
            "alternative_names": [
              "associated_object_type",
              "object_type_filter"
            ],
            "description": "The type of object to filter associations by, such as contacts, companies, etc.",
            "endpoint_argument_name": "toObjectType"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "after_token",
              "cursor_after"
            ],
            "description": "The token to continue paginated results from the last read resource.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "max_results_per_page",
            "alternative_names": [
              "results_limit_per_page",
              "page_size_limit"
            ],
            "description": "Specify the maximum number of results to display per page. This determines the page size for the response.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "include_associated_fields",
            "alternative_names": [
              "fields_association",
              "associate_with_fields"
            ],
            "description": "Set to true to include associated fields in the response.",
            "endpoint_argument_name": "includeFA"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/partner_services/{partnerServiceId}/associations/{toObjectType}",
      "tags": [
        "Associations"
      ],
      "summary": "List associations of a partner service by type",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.partner-services.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 500,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "includeFA",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "partnerServiceId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "toObjectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/payments/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "read_batch_payments",
        "description": {
          "tagline": "Retrieve a batch of payments from CRM by IDs or unique properties.",
          "detailed": "Use this tool to get details of multiple payments from the CRM system based on internal IDs or unique property values."
        },
        "return_annotation": "Batch payment details retrieved by IDs or property values.",
        "arguments": [
          {
            "name": "batch_payment_details",
            "alternative_names": [
              "payment_request_body",
              "payment_data_input"
            ],
            "description": "JSON object containing payment IDs, properties, and specific attributes like 'propertiesWithHistory', 'idProperty', and 'properties'.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "only_return_archived_results",
            "alternative_names": [
              "only_fetch_archived_results",
              "only_include_archived_results"
            ],
            "description": "Return only archived results if set to true.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/payments/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of payments by internal ID, or unique property values",
      "description": "",
      "requires_security": false,
      "oauth_scopes": [],
      "security_schemes": [],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string"
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/payments/{paymentsId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_payment_details",
        "description": {
          "tagline": "Retrieve details of a payment object by ID.",
          "detailed": "Use this tool to obtain information about a specific payment object in the CRM by providing its ID. The ID can be the internal object ID or another unique property value. You can control the properties returned using the `properties` query parameter."
        },
        "return_annotation": "Details of the specified payment object.",
        "arguments": [
          {
            "name": "payment_identifier",
            "alternative_names": [
              "payment_id",
              "unique_payment_key"
            ],
            "description": "The unique identifier for the payment object. This can be the internal object ID or a unique property value.",
            "endpoint_argument_name": "paymentsId"
          },
          {
            "name": "requested_properties",
            "alternative_names": [
              "properties_to_return",
              "output_properties"
            ],
            "description": "A list of properties to return in the response. Non-existent properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_with_past_values"
            ],
            "description": "List of properties to return with their historical values. Unavailable properties will be ignored.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associated_object_ids",
            "alternative_names": [
              "get_related_object_ids",
              "fetch_associated_objects"
            ],
            "description": "A list of object types to retrieve associated IDs for this payment. Non-existent associations are ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "property_identifier",
              "unique_identifier_property"
            ],
            "description": "The name of a property uniquely identifying the payment object type. Used to specify a unique property other than the internal ID.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "include_only_archived",
              "fetch_only_archived"
            ],
            "description": "Set to true to return only archived results in the response.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/payments/{paymentsId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{paymentsId}`. `{paymentsId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": false,
      "oauth_scopes": [],
      "security_schemes": [],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object type"
            },
            "description": "The name of a property whose values are unique for this object type",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "paymentsId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/payments",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_payment_records",
        "description": {
          "tagline": "Retrieve a page of payment records from HubSpot CRM.",
          "detailed": "Use this tool to get a list of payment records from the HubSpot CRM. You can specify which properties to include in the results by using query parameters."
        },
        "return_annotation": "A list of payment records with specified properties.",
        "arguments": [
          {
            "name": "results_per_page_limit",
            "alternative_names": [
              "max_results_per_page",
              "page_size_limit"
            ],
            "description": "Maximum number of payment records to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_token_after",
            "alternative_names": [
              "next_page_token",
              "pagination_cursor"
            ],
            "description": "The cursor token from the last read resource to fetch the next page of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "payment_properties_to_include",
            "alternative_names": [
              "payment_fields_to_return",
              "payment_attributes"
            ],
            "description": "A list of property names to include in the response. Specified properties not present on the requested objects will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "property_histories",
              "historical_properties"
            ],
            "description": "A list of property names to return with their historical values. Ignored if not present on objects.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_ids",
              "linked_entity_ids"
            ],
            "description": "A list of object types to retrieve associated IDs for. If specified associations do not exist, they will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "archived_results_only",
            "alternative_names": [
              "return_archived_only",
              "only_archived"
            ],
            "description": "Indicate if only archived payment records should be returned. Set to true to filter for archived records only.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/payments",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of payments. Control what is returned via the `properties` query param.",
      "requires_security": false,
      "oauth_scopes": [],
      "security_schemes": [],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/payments/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_hubspot_payments",
        "description": {
          "tagline": "Search for payments in HubSpot CRM.",
          "detailed": "Use this tool to search for specific payments within the HubSpot CRM. It should be called when you need to locate payments based on specific criteria."
        },
        "return_annotation": "Search results for HubSpot payments.",
        "arguments": [
          {
            "name": "payment_search_criteria",
            "alternative_names": [
              "payment_query_parameters",
              "payment_filter_options"
            ],
            "description": "Criteria for searching payments, including query, limit, pagination, sorting, and filters.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/payments/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": false,
      "oauth_scopes": [],
      "security_schemes": [],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string"
                },
                "limit": {
                  "type": "integer",
                  "format": "int32"
                },
                "after": {
                  "type": "string"
                },
                "sorts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              },
              "required": [
                "after",
                "filterGroups",
                "limit",
                "properties",
                "sorts"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"after\",\n          \"filterGroups\",\n          \"limit\",\n          \"properties\",\n          \"sorts\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}/audit_getAudit",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_pipeline_stage_audit",
        "description": {
          "tagline": "Retrieve audit logs for a specific pipeline stage.",
          "detailed": "This tool retrieves a reverse chronological list of all mutations that have occurred on a specified pipeline stage within HubSpot CRM. It should be called when you need to audit changes or track the history of a pipeline stage."
        },
        "return_annotation": "List of recent mutations on the pipeline stage.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "entity_type",
              "crm_object_type"
            ],
            "description": "The CRM object type to query for the pipeline stage, such as 'deals', 'tickets', or 'contacts'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "stage_identifier",
            "alternative_names": [
              "stage_id_value",
              "pipeline_stage_id"
            ],
            "description": "The unique identifier of the pipeline stage to audit. Use this to specify which stage's mutations you want to retrieve.",
            "endpoint_argument_name": "stageId"
          },
          {
            "name": "pipeline_id",
            "alternative_names": [
              "pipeline_identifier",
              "pipeline_reference"
            ],
            "description": "The unique identifier for the pipeline to retrieve stage audit logs from.",
            "endpoint_argument_name": "pipelineId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}/audit",
      "tags": [
        "Pipeline Stage Audits"
      ],
      "summary": "",
      "description": "Return a reverse chronological list of all mutations that have occurred on the pipeline stage identified by `{stageId}`.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.subscriptions.write",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.pipelines.orders.read",
        "automation",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.appointments.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.marketing_events.read",
        "crm.objects.appointments.read",
        "crm.schemas.appointments.read",
        "crm.objects.subscriptions.read",
        "crm.schemas.deals.read",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.schemas.line_items.read",
        "crm.objects.goals.read",
        "media_bridge.read",
        "crm.objects.products.write",
        "crm.schemas.listings.read",
        "crm.objects.contacts.write",
        "crm.objects.goals.write",
        "crm.schemas.custom.read",
        "crm.objects.marketing_events.write",
        "crm.objects.leads.read",
        "crm.schemas.orders.read",
        "crm.objects.feedback_submissions.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.schemas.quotes.read",
        "tickets",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.schemas.commercepayments.read",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.leads.write",
        "crm.objects.commercepayments.write",
        "crm.objects.orders.read",
        "crm.schemas.carts.read",
        "tickets.sensitive.v2",
        "crm.schemas.invoices.read",
        "crm.objects.contacts.sensitive.write.v2",
        "e-commerce",
        "crm.objects.owners.read",
        "crm.objects.quotes.write",
        "crm.objects.line_items.write",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.schemas.services.read",
        "crm.objects.courses.write",
        "crm.schemas.contacts.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.services.write",
        "crm.objects.courses.read",
        "crm.schemas.courses.read",
        "crm.objects.custom.read",
        "crm.schemas.subscriptions.read",
        "crm.schemas.companies.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.companies.write",
        "crm.objects.quotes.read",
        "crm.objects.companies.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.invoices.read",
        "crm.objects.listings.write",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "stageId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "pipelineId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string",
              "pattern": ".+"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/pipelines/{objectType}/{pipelineId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_pipeline_by_id",
        "description": {
          "tagline": "Retrieve a single CRM pipeline by its unique ID.",
          "detailed": "Use this tool to get detailed information about a specific pipeline in the HubSpot CRM by providing its unique identifier and object type."
        },
        "return_annotation": "Details of a specific pipeline by ID.",
        "arguments": [
          {
            "name": "object_type_in_crm",
            "alternative_names": [
              "crm_object_type",
              "pipeline_object_type"
            ],
            "description": "Specify the type of CRM object, such as 'deals' or 'tickets', whose pipeline you want to retrieve.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "pipeline_unique_id",
            "alternative_names": [
              "crm_pipeline_identifier",
              "pipeline_id"
            ],
            "description": "The unique identifier for the CRM pipeline to retrieve details. This value is required to fetch the specific pipeline information.",
            "endpoint_argument_name": "pipelineId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/pipelines/{objectType}/{pipelineId}",
      "tags": [
        "Pipelines"
      ],
      "summary": "Return a pipeline by ID",
      "description": "Return a single pipeline object identified by its unique `{pipelineId}`.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.subscriptions.write",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.pipelines.orders.read",
        "automation",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.appointments.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.marketing_events.read",
        "crm.objects.appointments.read",
        "crm.schemas.appointments.read",
        "crm.objects.subscriptions.read",
        "crm.schemas.deals.read",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.schemas.line_items.read",
        "crm.objects.goals.read",
        "media_bridge.read",
        "crm.objects.products.write",
        "crm.schemas.listings.read",
        "crm.objects.contacts.write",
        "crm.objects.goals.write",
        "crm.schemas.custom.read",
        "crm.objects.marketing_events.write",
        "crm.objects.leads.read",
        "crm.schemas.orders.read",
        "crm.objects.feedback_submissions.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.schemas.quotes.read",
        "tickets",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.schemas.commercepayments.read",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.leads.write",
        "crm.objects.commercepayments.write",
        "crm.objects.orders.read",
        "crm.schemas.carts.read",
        "tickets.sensitive.v2",
        "crm.schemas.invoices.read",
        "crm.objects.contacts.sensitive.write.v2",
        "e-commerce",
        "crm.objects.owners.read",
        "crm.objects.quotes.write",
        "crm.objects.line_items.write",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.schemas.services.read",
        "crm.objects.courses.write",
        "crm.schemas.contacts.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.services.write",
        "crm.objects.courses.read",
        "crm.schemas.courses.read",
        "crm.objects.custom.read",
        "crm.schemas.subscriptions.read",
        "crm.schemas.companies.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.companies.write",
        "crm.objects.quotes.read",
        "crm.objects.companies.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.invoices.read",
        "crm.objects.listings.write",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "pipelineId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "put-/crm/v3/pipelines/{objectType}/{pipelineId}_replace",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "replace_pipeline_hubspot",
        "description": {
          "tagline": "Replace a specific pipeline in HubSpot CRM.",
          "detailed": "Use this tool to replace a specific pipeline in HubSpot CRM when you need to update or modify the pipeline's entire structure or data."
        },
        "return_annotation": "Confirmation of pipeline replacement in HubSpot CRM.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "entity_type",
              "resource_type"
            ],
            "description": "Specify the object type for the pipeline, such as 'deals' or 'tickets'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "pipeline_identifier",
            "alternative_names": [
              "pipeline_id",
              "pipeline_key"
            ],
            "description": "The unique identifier of the pipeline to replace in HubSpot CRM. This is required to specify which pipeline is being modified.",
            "endpoint_argument_name": "pipelineId"
          },
          {
            "name": "pipeline_details",
            "alternative_names": [
              "pipeline_structure",
              "pipeline_data"
            ],
            "description": "A JSON object containing details about the pipeline, including 'displayOrder', 'stages', and 'label'. Includes stage-specific metadata like 'probability' for deals and 'ticketState' for tickets.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "validate_references_before_deletion",
            "alternative_names": [
              "check_references_prior_deletion",
              "confirm_references_before_delete"
            ],
            "description": "Set to true to validate all references before deleting the pipeline.",
            "endpoint_argument_name": "validateReferencesBeforeDelete"
          },
          {
            "name": "validate_deal_stage_usages_before_delete",
            "alternative_names": [
              "check_deal_stage_usage_before_removal",
              "ensure_stage_usage_checked_before_deletion"
            ],
            "description": "Set to true to validate deal stage usages before deleting a pipeline; false to proceed without validation.",
            "endpoint_argument_name": "validateDealStageUsagesBeforeDelete"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/v3/pipelines/{objectType}/{pipelineId}",
      "tags": [
        "Pipelines"
      ],
      "summary": "Replace a pipeline",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "validateReferencesBeforeDelete",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "validateDealStageUsagesBeforeDelete",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "pipelineId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "displayOrder": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label."
                },
                "stages": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "metadata": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A JSON object containing properties that are not present on all object pipelines.\n\nFor `deals` pipelines, the `probability` field is required (`{ \"probability\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`."
                    },
                    "displayOrder": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label."
                    },
                    "label": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline."
                    }
                  },
                  "description": "Pipeline stage inputs used to create the new or replacement pipeline."
                },
                "label": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A unique label used to organize pipelines in HubSpot's UI"
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "An input used to create or replace a pipeline's definition.",
              "properties": {
                "displayOrder": {
                  "type": "integer",
                  "description": "The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label.",
                  "format": "int32"
                },
                "stages": {
                  "type": "array",
                  "description": "Pipeline stage inputs used to create the new or replacement pipeline.",
                  "items": {
                    "type": "object",
                    "description": "An input used to create or replace a pipeline stage's definition.",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "description": "A JSON object containing properties that are not present on all object pipelines.\n\nFor `deals` pipelines, the `probability` field is required (`{ \"probability\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "displayOrder": {
                        "type": "integer",
                        "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.",
                        "format": "int32"
                      },
                      "label": {
                        "type": "string",
                        "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline."
                      }
                    },
                    "required": [
                      "displayOrder",
                      "label"
                    ]
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A unique label used to organize pipelines in HubSpot's UI"
                }
              },
              "required": [
                "displayOrder",
                "label",
                "stages"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"displayOrder\",\n          \"label\",\n          \"stages\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"displayOrder\": {\n            \"type\": \"integer\",\n            \"description\": \"The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label.\",\n            \"format\": \"int32\"\n          },\n          \"stages\": {\n            \"type\": \"array\",\n            \"description\": \"Pipeline stage inputs used to create the new or replacement pipeline.\",\n            \"items\": {\n              \"required\": [\n                \"displayOrder\",\n                \"label\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"metadata\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"A JSON object containing properties that are not present on all object pipelines.\\n\\nFor `deals` pipelines, the `probability` field is required (`{ \\\"probability\\\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\\n\\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \\\"ticketState\\\": \\\"OPEN\\\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`.\"\n                },\n                \"displayOrder\": {\n                  \"type\": \"integer\",\n                  \"description\": \"The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.\",\n                  \"format\": \"int32\"\n                },\n                \"label\": {\n                  \"type\": \"string\",\n                  \"description\": \"A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline.\"\n                }\n              },\n              \"description\": \"An input used to create or replace a pipeline stage's definition.\",\n              \"example\": {\n                \"label\": \"Done\",\n                \"displayOrder\": 1,\n                \"metadata\": {\n                  \"ticketState\": \"CLOSED\"\n                }\n              }\n            }\n          },\n          \"label\": {\n            \"type\": \"string\",\n            \"description\": \"A unique label used to organize pipelines in HubSpot's UI\"\n          }\n        },\n        \"description\": \"An input used to create or replace a pipeline's definition.\",\n        \"example\": {\n          \"label\": \"My replaced pipeline\",\n          \"displayOrder\": 0,\n          \"stages\": [\n            {\n              \"label\": \"In Progress\",\n              \"displayOrder\": 0,\n              \"metadata\": {\n                \"ticketState\": \"OPEN\"\n              }\n            },\n            {\n              \"label\": \"Done\",\n              \"displayOrder\": 1,\n              \"metadata\": {\n                \"ticketState\": \"CLOSED\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/pipelines/{objectType}/{pipelineId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_pipeline",
        "description": {
          "tagline": "Delete a specific pipeline in the CRM.",
          "detailed": "This tool is used to delete a specific pipeline in HubSpot CRM by providing the object type and pipeline ID. Call this tool when a pipeline needs to be removed."
        },
        "return_annotation": "Confirmation of pipeline deletion action.",
        "arguments": [
          {
            "name": "pipeline_object_type",
            "alternative_names": [
              "pipeline_category",
              "pipeline_entity_type"
            ],
            "description": "Specify the type of object for the pipeline, such as 'deals' or 'tickets'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "pipeline_id",
            "alternative_names": [
              "pipeline_identifier",
              "pipeline_key"
            ],
            "description": "The unique identifier of the pipeline to be deleted. Required for specifying which pipeline to remove.",
            "endpoint_argument_name": "pipelineId"
          },
          {
            "name": "validate_references_before_delete",
            "alternative_names": [
              "check_references_before_delete",
              "ensure_reference_check"
            ],
            "description": "Set to true to validate references before deleting the pipeline. This prevents accidental deletion when references are present.",
            "endpoint_argument_name": "validateReferencesBeforeDelete"
          },
          {
            "name": "validate_deal_stage_usages_before_deletion",
            "alternative_names": [
              "check_deal_stage_usages",
              "verify_stage_usages_before_delete"
            ],
            "description": "Set to true to validate deal stage usages before deleting a pipeline, preventing deletion if usages are found.",
            "endpoint_argument_name": "validateDealStageUsagesBeforeDelete"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/pipelines/{objectType}/{pipelineId}",
      "tags": [
        "Pipelines"
      ],
      "summary": "Delete a pipeline",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "validateReferencesBeforeDelete",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "validateDealStageUsagesBeforeDelete",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "pipelineId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/pipelines/{objectType}/{pipelineId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_pipeline_in_crm",
        "description": {
          "tagline": "Partially update a pipeline in the CRM.",
          "detailed": "Use this tool to perform a partial update of a pipeline identified by its pipeline ID within a specified object type in the CRM. The tool will return the updated pipeline details."
        },
        "return_annotation": "The updated pipeline details.",
        "arguments": [
          {
            "name": "crm_object_type",
            "alternative_names": [
              "pipeline_object_type",
              "type_of_crm_object"
            ],
            "description": "Specify the type of CRM object (e.g., deals, tickets) to update the pipeline for.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "pipeline_identifier",
            "alternative_names": [
              "pipeline_id_value",
              "pipeline_unique_id"
            ],
            "description": "The unique identifier for the pipeline to be updated. This is required to specify which pipeline to modify.",
            "endpoint_argument_name": "pipelineId"
          },
          {
            "name": "pipeline_display_order",
            "alternative_names": [
              "pipeline_display_position",
              "crm_pipeline_order"
            ],
            "description": "The display order number to determine the position of the pipeline in the CRM. Pipelines with the same display order are sorted alphabetically by label.",
            "endpoint_argument_name": "displayOrder"
          },
          {
            "name": "pipeline_label",
            "alternative_names": [
              "pipeline_name",
              "pipeline_identifier"
            ],
            "description": "A unique label to organize and identify the pipeline within HubSpot's UI.",
            "endpoint_argument_name": "label"
          },
          {
            "name": "validate_references_before_deletion",
            "alternative_names": [
              "check_refs_prior_to_deletion",
              "ensure_references_validated_before_delete"
            ],
            "description": "Set to true to validate references before deletion.",
            "endpoint_argument_name": "validateReferencesBeforeDelete"
          },
          {
            "name": "validate_deal_stage_usages_before_delete",
            "alternative_names": [
              "check_deal_stage_usages_before_deletion",
              "confirm_deal_stage_usages_prior_to_deletion"
            ],
            "description": "Indicate if deal stage usages should be validated before deletion. A boolean value is expected.",
            "endpoint_argument_name": "validateDealStageUsagesBeforeDelete"
          },
          {
            "name": "is_pipeline_archived",
            "alternative_names": [
              "pipeline_archived_status",
              "check_pipeline_archived"
            ],
            "description": "Set to true if the pipeline is currently archived and you intend to restore it. Use only for restoration calls.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/pipelines/{objectType}/{pipelineId}",
      "tags": [
        "Pipelines"
      ],
      "summary": "",
      "description": "Perform a partial update of the pipeline identified by `{pipelineId}`. The updated pipeline will be returned in the response.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "validateReferencesBeforeDelete",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "validateDealStageUsagesBeforeDelete",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "pipelineId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether the pipeline is archived. This property should only be provided when restoring an archived pipeline. If it's provided in any other call, the request will fail and a `400 Bad Request` will be returned."
            },
            "description": "Whether the pipeline is archived. This property should only be provided when restoring an archived pipeline. If it's provided in any other call, the request will fail and a `400 Bad Request` will be returned.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean",
              "description": "Whether the pipeline is archived. This property should only be provided when restoring an archived pipeline. If it's provided in any other call, the request will fail and a `400 Bad Request` will be returned."
            },
            "schema_required": false
          },
          {
            "name": "displayOrder",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label."
            },
            "description": "The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer",
              "description": "The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label.",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "label",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A unique label used to organize pipelines in HubSpot's UI"
            },
            "description": "A unique label used to organize pipelines in HubSpot's UI",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "A unique label used to organize pipelines in HubSpot's UI"
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"archived\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the pipeline is archived. This property should only be provided when restoring an archived pipeline. If it's provided in any other call, the request will fail and a `400 Bad Request` will be returned.\"\n          },\n          \"displayOrder\": {\n            \"type\": \"integer\",\n            \"description\": \"The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label.\",\n            \"format\": \"int32\"\n          },\n          \"label\": {\n            \"type\": \"string\",\n            \"description\": \"A unique label used to organize pipelines in HubSpot's UI\"\n          }\n        },\n        \"description\": \"An input used to update some properties on a pipeline definition.\",\n        \"example\": {\n          \"label\": \"My updated pipeline\",\n          \"displayOrder\": 0\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "get-/crm/v3/pipelines/{objectType}/{pipelineId}/stages_getAll",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_pipeline_stages",
        "description": {
          "tagline": "Retrieve all stages of a specified pipeline.",
          "detailed": "Use this tool to get all the stages associated with a specific pipeline in HubSpot CRM. It requires specifying the pipeline through its ID and object type."
        },
        "return_annotation": "Stages associated with the specified pipeline.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "entity_type",
              "category_type"
            ],
            "description": "Specify the type of CRM object, such as deals or tickets, associated with the pipeline.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "pipeline_id",
            "alternative_names": [
              "pipeline_identifier",
              "pipeline_key"
            ],
            "description": "The ID of the pipeline to retrieve stages for. Must be a valid pipeline ID in HubSpot CRM.",
            "endpoint_argument_name": "pipelineId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/pipelines/{objectType}/{pipelineId}/stages",
      "tags": [
        "Pipeline Stages"
      ],
      "summary": "Return all stages of a pipeline",
      "description": "Return all the stages associated with the pipeline identified by `{pipelineId}`.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.subscriptions.write",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.pipelines.orders.read",
        "automation",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.appointments.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.marketing_events.read",
        "crm.objects.appointments.read",
        "crm.schemas.appointments.read",
        "crm.objects.subscriptions.read",
        "crm.schemas.deals.read",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.schemas.line_items.read",
        "crm.objects.goals.read",
        "media_bridge.read",
        "crm.objects.products.write",
        "crm.schemas.listings.read",
        "crm.objects.contacts.write",
        "crm.objects.goals.write",
        "crm.schemas.custom.read",
        "crm.objects.marketing_events.write",
        "crm.objects.leads.read",
        "crm.schemas.orders.read",
        "crm.objects.feedback_submissions.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.schemas.quotes.read",
        "tickets",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.schemas.commercepayments.read",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.leads.write",
        "crm.objects.commercepayments.write",
        "crm.objects.orders.read",
        "crm.schemas.carts.read",
        "tickets.sensitive.v2",
        "crm.schemas.invoices.read",
        "crm.objects.contacts.sensitive.write.v2",
        "e-commerce",
        "crm.objects.owners.read",
        "crm.objects.quotes.write",
        "crm.objects.line_items.write",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.schemas.services.read",
        "crm.objects.courses.write",
        "crm.schemas.contacts.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.services.write",
        "crm.objects.courses.read",
        "crm.schemas.courses.read",
        "crm.objects.custom.read",
        "crm.schemas.subscriptions.read",
        "crm.schemas.companies.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.companies.write",
        "crm.objects.quotes.read",
        "crm.objects.companies.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.invoices.read",
        "crm.objects.listings.write",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "pipelineId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/pipelines/{objectType}/{pipelineId}/stages_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_pipeline_stage",
        "description": {
          "tagline": "Create a stage in a specified pipeline.",
          "detailed": "This tool creates a new stage within a specified pipeline in the HubSpot CRM. Use it when you need to add a new stage to an existing pipeline, specifying the object type and pipeline ID."
        },
        "return_annotation": "Details of the created pipeline stage.",
        "arguments": [
          {
            "name": "crm_object_type",
            "alternative_names": [
              "pipeline_object_type",
              "stage_object_type"
            ],
            "description": "Specify the CRM object type, such as deals or tickets, for the pipeline.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "pipeline_id",
            "alternative_names": [
              "pipeline_identifier",
              "pipeline_reference"
            ],
            "description": "The unique identifier of the pipeline where the new stage will be created.",
            "endpoint_argument_name": "pipelineId"
          },
          {
            "name": "pipeline_stage_details",
            "alternative_names": [
              "stage_data",
              "pipeline_stage_info"
            ],
            "description": "JSON object with details for the pipeline stage, including metadata, display order, and label.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/pipelines/{objectType}/{pipelineId}/stages",
      "tags": [
        "Pipeline Stages"
      ],
      "summary": "Create a pipeline stage",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "pipelineId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "metadata": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A JSON object containing properties that are not present on all object pipelines.\n\nFor `deals` pipelines, the `probability` field is required (`{ \"probability\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`."
                },
                "displayOrder": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label."
                },
                "label": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "An input used to create or replace a pipeline stage's definition.",
              "properties": {
                "metadata": {
                  "type": "object",
                  "description": "A JSON object containing properties that are not present on all object pipelines.\n\nFor `deals` pipelines, the `probability` field is required (`{ \"probability\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "displayOrder": {
                  "type": "integer",
                  "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.",
                  "format": "int32"
                },
                "label": {
                  "type": "string",
                  "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline."
                }
              },
              "required": [
                "displayOrder",
                "label"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"displayOrder\",\n          \"label\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"metadata\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"A JSON object containing properties that are not present on all object pipelines.\\n\\nFor `deals` pipelines, the `probability` field is required (`{ \\\"probability\\\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\\n\\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \\\"ticketState\\\": \\\"OPEN\\\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`.\"\n          },\n          \"displayOrder\": {\n            \"type\": \"integer\",\n            \"description\": \"The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.\",\n            \"format\": \"int32\"\n          },\n          \"label\": {\n            \"type\": \"string\",\n            \"description\": \"A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline.\"\n          }\n        },\n        \"description\": \"An input used to create or replace a pipeline stage's definition.\",\n        \"example\": {\n          \"label\": \"Done\",\n          \"displayOrder\": 1,\n          \"metadata\": {\n            \"ticketState\": \"CLOSED\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/pipelines/{objectType}/{pipelineId}/audit_getAudit",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_pipeline_audit_log",
        "description": {
          "tagline": "Retrieves the audit log for a specified CRM pipeline.",
          "detailed": "Call this tool to obtain a list of all changes made to a specified pipeline in HubSpot CRM, in reverse chronological order."
        },
        "return_annotation": "List of mutations on the specified pipeline.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "entity_type",
              "crm_category"
            ],
            "description": "The type of CRM object for which audit logs are being retrieved, such as 'deals' or 'contacts'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "pipeline_id",
            "alternative_names": [
              "pipeline_identifier",
              "pipeline_key"
            ],
            "description": "The unique identifier for the pipeline to fetch the audit log from. This ID is used to target a specific pipeline within HubSpot CRM.",
            "endpoint_argument_name": "pipelineId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/pipelines/{objectType}/{pipelineId}/audit",
      "tags": [
        "Pipeline Audits"
      ],
      "summary": "Return an audit of all changes to the pipeline",
      "description": "Return a reverse chronological list of all mutations that have occurred on the pipeline identified by `{pipelineId}`.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.subscriptions.write",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.pipelines.orders.read",
        "automation",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.appointments.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.marketing_events.read",
        "crm.objects.appointments.read",
        "crm.schemas.appointments.read",
        "crm.objects.subscriptions.read",
        "crm.schemas.deals.read",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.schemas.line_items.read",
        "crm.objects.goals.read",
        "media_bridge.read",
        "crm.objects.products.write",
        "crm.schemas.listings.read",
        "crm.objects.contacts.write",
        "crm.objects.goals.write",
        "crm.schemas.custom.read",
        "crm.objects.marketing_events.write",
        "crm.objects.leads.read",
        "crm.schemas.orders.read",
        "crm.objects.feedback_submissions.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.schemas.quotes.read",
        "tickets",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.schemas.commercepayments.read",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.leads.write",
        "crm.objects.commercepayments.write",
        "crm.objects.orders.read",
        "crm.schemas.carts.read",
        "tickets.sensitive.v2",
        "crm.schemas.invoices.read",
        "crm.objects.contacts.sensitive.write.v2",
        "e-commerce",
        "crm.objects.owners.read",
        "crm.objects.quotes.write",
        "crm.objects.line_items.write",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.schemas.services.read",
        "crm.objects.courses.write",
        "crm.schemas.contacts.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.services.write",
        "crm.objects.courses.read",
        "crm.schemas.courses.read",
        "crm.objects.custom.read",
        "crm.schemas.subscriptions.read",
        "crm.schemas.companies.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.companies.write",
        "crm.objects.quotes.read",
        "crm.objects.companies.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.invoices.read",
        "crm.objects.listings.write",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "pipelineId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/pipelines/{objectType}_getAll",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_all_pipelines",
        "description": {
          "tagline": "Retrieve all pipelines for a specified object type.",
          "detailed": "Use this tool to fetch all pipelines related to a specific object type in HubSpot CRM. This is useful for obtaining pipeline information for various CRM entities such as contacts, deals, etc."
        },
        "return_annotation": "Returns all pipelines for the specified object type.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "entity_type",
              "crm_object_type"
            ],
            "description": "Specify the CRM object type (e.g., contacts, deals) to retrieve pipelines for.",
            "endpoint_argument_name": "objectType"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/pipelines/{objectType}",
      "tags": [
        "Pipelines"
      ],
      "summary": "Retrieve all pipelines",
      "description": "Return all pipelines for the object type specified by `{objectType}`.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.subscriptions.write",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.pipelines.orders.read",
        "automation",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.appointments.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.marketing_events.read",
        "crm.objects.appointments.read",
        "crm.schemas.appointments.read",
        "crm.objects.subscriptions.read",
        "crm.schemas.deals.read",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.schemas.line_items.read",
        "crm.objects.goals.read",
        "media_bridge.read",
        "crm.objects.products.write",
        "crm.schemas.listings.read",
        "crm.objects.contacts.write",
        "crm.objects.goals.write",
        "crm.schemas.custom.read",
        "crm.objects.marketing_events.write",
        "crm.objects.leads.read",
        "crm.schemas.orders.read",
        "crm.objects.feedback_submissions.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.schemas.quotes.read",
        "tickets",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.schemas.commercepayments.read",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.leads.write",
        "crm.objects.commercepayments.write",
        "crm.objects.orders.read",
        "crm.schemas.carts.read",
        "tickets.sensitive.v2",
        "crm.schemas.invoices.read",
        "crm.objects.contacts.sensitive.write.v2",
        "e-commerce",
        "crm.objects.owners.read",
        "crm.objects.quotes.write",
        "crm.objects.line_items.write",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.schemas.services.read",
        "crm.objects.courses.write",
        "crm.schemas.contacts.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.services.write",
        "crm.objects.courses.read",
        "crm.schemas.courses.read",
        "crm.objects.custom.read",
        "crm.schemas.subscriptions.read",
        "crm.schemas.companies.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.companies.write",
        "crm.objects.quotes.read",
        "crm.objects.companies.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.invoices.read",
        "crm.objects.listings.write",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/pipelines/{objectType}_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_crm_pipeline",
        "description": {
          "tagline": "Create a new CRM pipeline in HubSpot.",
          "detailed": "Use this tool to create a new pipeline in HubSpot CRM with given property values. It returns the entire pipeline object, including its unique ID."
        },
        "return_annotation": "Returns the newly created pipeline object with its unique ID.",
        "arguments": [
          {
            "name": "pipeline_object_type",
            "alternative_names": [
              "pipeline_type",
              "crm_object_type"
            ],
            "description": "Specify the type of CRM object for the pipeline, such as 'deals' or 'tickets'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "pipeline_details",
            "alternative_names": [
              "pipeline_properties",
              "pipeline_configuration"
            ],
            "description": "JSON object containing pipeline details such as display order, stages, and label to create a CRM pipeline in HubSpot.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/pipelines/{objectType}",
      "tags": [
        "Pipelines"
      ],
      "summary": "Create a pipeline",
      "description": "Create a new pipeline with the provided property values. The entire pipeline object, including its unique ID, will be returned in the response.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "displayOrder": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label."
                },
                "stages": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "metadata": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A JSON object containing properties that are not present on all object pipelines.\n\nFor `deals` pipelines, the `probability` field is required (`{ \"probability\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`."
                    },
                    "displayOrder": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label."
                    },
                    "label": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline."
                    }
                  },
                  "description": "Pipeline stage inputs used to create the new or replacement pipeline."
                },
                "label": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A unique label used to organize pipelines in HubSpot's UI"
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "An input used to create or replace a pipeline's definition.",
              "properties": {
                "displayOrder": {
                  "type": "integer",
                  "description": "The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label.",
                  "format": "int32"
                },
                "stages": {
                  "type": "array",
                  "description": "Pipeline stage inputs used to create the new or replacement pipeline.",
                  "items": {
                    "type": "object",
                    "description": "An input used to create or replace a pipeline stage's definition.",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "description": "A JSON object containing properties that are not present on all object pipelines.\n\nFor `deals` pipelines, the `probability` field is required (`{ \"probability\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "displayOrder": {
                        "type": "integer",
                        "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.",
                        "format": "int32"
                      },
                      "label": {
                        "type": "string",
                        "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline."
                      }
                    },
                    "required": [
                      "displayOrder",
                      "label"
                    ]
                  }
                },
                "label": {
                  "type": "string",
                  "description": "A unique label used to organize pipelines in HubSpot's UI"
                }
              },
              "required": [
                "displayOrder",
                "label",
                "stages"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"displayOrder\",\n          \"label\",\n          \"stages\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"displayOrder\": {\n            \"type\": \"integer\",\n            \"description\": \"The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label.\",\n            \"format\": \"int32\"\n          },\n          \"stages\": {\n            \"type\": \"array\",\n            \"description\": \"Pipeline stage inputs used to create the new or replacement pipeline.\",\n            \"items\": {\n              \"required\": [\n                \"displayOrder\",\n                \"label\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"metadata\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"A JSON object containing properties that are not present on all object pipelines.\\n\\nFor `deals` pipelines, the `probability` field is required (`{ \\\"probability\\\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\\n\\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \\\"ticketState\\\": \\\"OPEN\\\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`.\"\n                },\n                \"displayOrder\": {\n                  \"type\": \"integer\",\n                  \"description\": \"The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.\",\n                  \"format\": \"int32\"\n                },\n                \"label\": {\n                  \"type\": \"string\",\n                  \"description\": \"A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline.\"\n                }\n              },\n              \"description\": \"An input used to create or replace a pipeline stage's definition.\",\n              \"example\": {\n                \"label\": \"Done\",\n                \"displayOrder\": 1,\n                \"metadata\": {\n                  \"ticketState\": \"CLOSED\"\n                }\n              }\n            }\n          },\n          \"label\": {\n            \"type\": \"string\",\n            \"description\": \"A unique label used to organize pipelines in HubSpot's UI\"\n          }\n        },\n        \"description\": \"An input used to create or replace a pipeline's definition.\",\n        \"example\": {\n          \"label\": \"My replaced pipeline\",\n          \"displayOrder\": 0,\n          \"stages\": [\n            {\n              \"label\": \"In Progress\",\n              \"displayOrder\": 0,\n              \"metadata\": {\n                \"ticketState\": \"OPEN\"\n              }\n            },\n            {\n              \"label\": \"Done\",\n              \"displayOrder\": 1,\n              \"metadata\": {\n                \"ticketState\": \"CLOSED\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_pipeline_stage_by_id",
        "description": {
          "tagline": "Retrieve a specific pipeline stage by its ID.",
          "detailed": "Use this tool to get details of a particular stage within a pipeline in HubSpot CRM, identified by its unique stage ID."
        },
        "return_annotation": "Details of a specific pipeline stage by ID.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "object_category",
              "entity_type"
            ],
            "description": "The type of CRM object, such as 'deals' or 'tickets', to access the pipeline stage for.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "pipeline_id",
            "alternative_names": [
              "pipeline_identifier",
              "pipeline_reference"
            ],
            "description": "The unique identifier for the pipeline in HubSpot CRM. Use this ID to specify which pipeline the stage belongs to.",
            "endpoint_argument_name": "pipelineId"
          },
          {
            "name": "stage_id",
            "alternative_names": [
              "pipeline_stage_id",
              "stage_identifier"
            ],
            "description": "Unique ID of the pipeline stage to retrieve details from HubSpot CRM.",
            "endpoint_argument_name": "stageId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}",
      "tags": [
        "Pipeline Stages"
      ],
      "summary": "Return a pipeline stage by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.subscriptions.write",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.pipelines.orders.read",
        "automation",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.appointments.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.marketing_events.read",
        "crm.objects.appointments.read",
        "crm.schemas.appointments.read",
        "crm.objects.subscriptions.read",
        "crm.schemas.deals.read",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.schemas.line_items.read",
        "crm.objects.goals.read",
        "media_bridge.read",
        "crm.objects.products.write",
        "crm.schemas.listings.read",
        "crm.objects.contacts.write",
        "crm.objects.goals.write",
        "crm.schemas.custom.read",
        "crm.objects.marketing_events.write",
        "crm.objects.leads.read",
        "crm.schemas.orders.read",
        "crm.objects.feedback_submissions.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.schemas.quotes.read",
        "tickets",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.schemas.commercepayments.read",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.leads.write",
        "crm.objects.commercepayments.write",
        "crm.objects.orders.read",
        "crm.schemas.carts.read",
        "tickets.sensitive.v2",
        "crm.schemas.invoices.read",
        "crm.objects.contacts.sensitive.write.v2",
        "e-commerce",
        "crm.objects.owners.read",
        "crm.objects.quotes.write",
        "crm.objects.line_items.write",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.schemas.services.read",
        "crm.objects.courses.write",
        "crm.schemas.contacts.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.services.write",
        "crm.objects.courses.read",
        "crm.schemas.courses.read",
        "crm.objects.custom.read",
        "crm.schemas.subscriptions.read",
        "crm.schemas.companies.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.companies.write",
        "crm.objects.quotes.read",
        "crm.objects.companies.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.invoices.read",
        "crm.objects.listings.write",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "pipelineId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "stageId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "put-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}_replace",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "replace_pipeline_stage_properties",
        "description": {
          "tagline": "Replace and update a pipeline stage in HubSpot CRM.",
          "detailed": "Use this tool to replace all properties of an existing pipeline stage in HubSpot CRM with the provided values. The modified stage's details are returned in the response."
        },
        "return_annotation": "The updated pipeline stage details.",
        "arguments": [
          {
            "name": "crm_object_type",
            "alternative_names": [
              "pipeline_object_type",
              "crm_entity_type"
            ],
            "description": "Specifies the CRM object type like 'deals' or 'contacts' to identify the pipeline stage being replaced.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "pipeline_id",
            "alternative_names": [
              "pipeline_identifier",
              "pipeline_key"
            ],
            "description": "The unique identifier for the pipeline whose stage properties are to be replaced. This must match the ID used in HubSpot CRM.",
            "endpoint_argument_name": "pipelineId"
          },
          {
            "name": "pipeline_stage_id",
            "alternative_names": [
              "stage_identifier",
              "pipeline_stage_identifier"
            ],
            "description": "The unique identifier for the pipeline stage to be replaced. This is required to specify which stage's properties will be updated.",
            "endpoint_argument_name": "stageId"
          },
          {
            "name": "pipeline_stage_properties",
            "alternative_names": [
              "stage_properties",
              "pipeline_stage_update"
            ],
            "description": "A JSON object with new properties for the pipeline stage. Includes fields like `metadata`, `displayOrder`, and `label`.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "PUT",
      "path": "/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}",
      "tags": [
        "Pipeline Stages"
      ],
      "summary": "Replace a pipeline stage",
      "description": "Replace all the properties of an existing pipeline stage with the values provided. The updated stage will be returned in the response.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "pipelineId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "stageId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "metadata": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A JSON object containing properties that are not present on all object pipelines.\n\nFor `deals` pipelines, the `probability` field is required (`{ \"probability\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`."
                },
                "displayOrder": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label."
                },
                "label": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "An input used to create or replace a pipeline stage's definition.",
              "properties": {
                "metadata": {
                  "type": "object",
                  "description": "A JSON object containing properties that are not present on all object pipelines.\n\nFor `deals` pipelines, the `probability` field is required (`{ \"probability\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "displayOrder": {
                  "type": "integer",
                  "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.",
                  "format": "int32"
                },
                "label": {
                  "type": "string",
                  "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline."
                }
              },
              "required": [
                "displayOrder",
                "label"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"displayOrder\",\n          \"label\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"metadata\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"A JSON object containing properties that are not present on all object pipelines.\\n\\nFor `deals` pipelines, the `probability` field is required (`{ \\\"probability\\\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\\n\\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \\\"ticketState\\\": \\\"OPEN\\\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`.\"\n          },\n          \"displayOrder\": {\n            \"type\": \"integer\",\n            \"description\": \"The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.\",\n            \"format\": \"int32\"\n          },\n          \"label\": {\n            \"type\": \"string\",\n            \"description\": \"A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline.\"\n          }\n        },\n        \"description\": \"An input used to create or replace a pipeline stage's definition.\",\n        \"example\": {\n          \"label\": \"Done\",\n          \"displayOrder\": 1,\n          \"metadata\": {\n            \"ticketState\": \"CLOSED\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_pipeline_stage",
        "description": {
          "tagline": "Deletes a pipeline stage from HubSpot CRM.",
          "detailed": "Use to remove a specific stage from a pipeline in HubSpot CRM by specifying the object type, pipeline ID, and stage ID."
        },
        "return_annotation": "Confirmation of pipeline stage deletion.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "entity_type",
              "crm_object_type"
            ],
            "description": "Specify the type of CRM object (e.g., deals, tickets) for which the pipeline stage is being deleted.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "pipeline_id",
            "alternative_names": [
              "pipeline_identifier",
              "pipeline_reference"
            ],
            "description": "The unique ID of the pipeline containing the stage to be deleted.",
            "endpoint_argument_name": "pipelineId"
          },
          {
            "name": "stage_identifier",
            "alternative_names": [
              "stage_id",
              "pipeline_stage_id"
            ],
            "description": "The unique identifier of the pipeline stage to be deleted.",
            "endpoint_argument_name": "stageId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}",
      "tags": [
        "Pipeline Stages"
      ],
      "summary": "Delete a pipeline stage",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "pipelineId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "stageId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_pipeline_stage",
        "description": {
          "tagline": "Update a stage in a CRM pipeline.",
          "detailed": "Use this tool to update the details of a specific stage within a CRM pipeline. It is useful when you need to modify the attributes of a pipeline stage, such as its name or order, to reflect changes in the sales or business process."
        },
        "return_annotation": "Confirmation of pipeline stage update.",
        "arguments": [
          {
            "name": "pipeline_object_type",
            "alternative_names": [
              "crm_object_type",
              "pipeline_entity_type"
            ],
            "description": "The type of CRM object in the pipeline, such as 'deals' or 'tickets'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "pipeline_id",
            "alternative_names": [
              "pipeline_identifier",
              "pipeline_ref"
            ],
            "description": "A unique identifier for the pipeline to be updated. This is necessary to specify which pipeline contains the stage you want to modify.",
            "endpoint_argument_name": "pipelineId"
          },
          {
            "name": "stage_id",
            "alternative_names": [
              "pipeline_stage_id",
              "stage_identifier"
            ],
            "description": "The unique identifier of the stage to be updated within the pipeline. This is required to specify which stage's details need modification.",
            "endpoint_argument_name": "stageId"
          },
          {
            "name": "pipeline_stage_details",
            "alternative_names": [
              "stage_update_data",
              "stage_attributes"
            ],
            "description": "A JSON object detailing the stage attributes to update. Includes fields like `archived`, `metadata`, `displayOrder`, and `label`.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}",
      "tags": [
        "Pipeline Stages"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "pipelineId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "stageId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "archived": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Whether the pipeline is archived."
                },
                "metadata": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A JSON object containing properties that are not present on all object pipelines.\n\nFor `deals` pipelines, the `probability` field is required (`{ \"probability\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`."
                },
                "displayOrder": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label."
                },
                "label": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "An input used to update some properties on a pipeline definition.",
              "properties": {
                "archived": {
                  "type": "boolean",
                  "description": "Whether the pipeline is archived."
                },
                "metadata": {
                  "type": "object",
                  "description": "A JSON object containing properties that are not present on all object pipelines.\n\nFor `deals` pipelines, the `probability` field is required (`{ \"probability\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "displayOrder": {
                  "type": "integer",
                  "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.",
                  "format": "int32"
                },
                "label": {
                  "type": "string",
                  "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline."
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"archived\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether the pipeline is archived.\"\n          },\n          \"metadata\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"A JSON object containing properties that are not present on all object pipelines.\\n\\nFor `deals` pipelines, the `probability` field is required (`{ \\\"probability\\\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\\n\\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \\\"ticketState\\\": \\\"OPEN\\\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`.\"\n          },\n          \"displayOrder\": {\n            \"type\": \"integer\",\n            \"description\": \"The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.\",\n            \"format\": \"int32\"\n          },\n          \"label\": {\n            \"type\": \"string\",\n            \"description\": \"A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline.\"\n          }\n        },\n        \"description\": \"An input used to update some properties on a pipeline definition.\",\n        \"example\": {\n          \"label\": \"Done\",\n          \"displayOrder\": 1,\n          \"metadata\": {\n            \"ticketState\": \"CLOSED\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/postal_mail/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_multiple_postal_mail_objects",
        "description": {
          "tagline": "Retrieve multiple postal mail objects by IDs or unique values.",
          "detailed": "This tool retrieves multiple postal mail objects from HubSpot CRM using their internal IDs or unique property values. It is useful when you need to access detailed information on several postal mail entries at once."
        },
        "return_annotation": "Information on multiple postal mail objects.",
        "arguments": [
          {
            "name": "postal_mail_request_details",
            "alternative_names": [
              "postal_mail_batch_request",
              "postal_mail_data_request"
            ],
            "description": "JSON object including properties with history, unique ID property, inputs, and properties for the postal mail batch retrieval.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "include_archived",
            "alternative_names": [
              "show_archived",
              "fetch_archived"
            ],
            "description": "Set to true to include archived postal mail objects in the results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/postal_mail/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "",
      "description": "Retrieve multiple postal mail objects using their internal IDs or unique property values.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/postal_mail/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_postal_mail_batch",
        "description": {
          "tagline": "Archive a batch of postal mail objects using their IDs.",
          "detailed": "Use this tool to archive multiple postal mail objects in HubSpot CRM by providing their IDs. This is useful for managing large volumes of mailing data efficiently."
        },
        "return_annotation": "Confirmation of postal mail objects archived.",
        "arguments": [
          {
            "name": "postal_mail_ids",
            "alternative_names": [
              "postal_mail_object_ids",
              "mail_ids"
            ],
            "description": "A JSON array of objects, each containing an 'id' field for the postal mail objects to be archived.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/postal_mail/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Batch archive",
      "description": "Archive a batch of postal mail objects using their IDs.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/postal_mail_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_postal_mail_records",
        "description": {
          "tagline": "Retrieve postal mail records from the CRM.",
          "detailed": "Use this tool to access postal mail records from the CRM. It is helpful for obtaining stored postal mail information."
        },
        "return_annotation": "List of postal mail records from CRM.",
        "arguments": [
          {
            "name": "max_records",
            "alternative_names": [
              "record_limit",
              "limit_records"
            ],
            "description": "The maximum number of postal mail records to return. Must be an integer.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "pagination_cursor_after",
            "alternative_names": [
              "continuation_token_after",
              "record_offset_after"
            ],
            "description": "A cursor for pagination. Use it to retrieve the next set of postal mail records after a specific point.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "retrieve_specific_properties",
            "alternative_names": [
              "fetch_specific_fields",
              "get_selected_properties"
            ],
            "description": "List of specific properties to include in the response. Provide property names as strings.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "include_properties_history",
            "alternative_names": [
              "properties_with_history",
              "historical_properties"
            ],
            "description": "Specify property names to include their history in the records. Use an array of strings.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_objects",
            "alternative_names": [
              "related_entities",
              "linked_items"
            ],
            "description": "A list of object types to retrieve associations for, such as contacts or companies.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "include_archived_records",
            "alternative_names": [
              "retrieve_archived_records",
              "fetch_archived_records"
            ],
            "description": "Include archived postal mail records if true; exclude them if false.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/postal_mail",
      "tags": [
        "Basic"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/postal_mail_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_postal_mail_object",
        "description": {
          "tagline": "Create a postal mail object in HubSpot CRM.",
          "detailed": "This tool is used to create a postal mail object in the HubSpot CRM with the provided properties. It returns a copy of the created object, including its unique identifier. Use this tool to record postal mail interactions in your CRM."
        },
        "return_annotation": "A copy of the created postal mail object, including its ID.",
        "arguments": [
          {
            "name": "postal_mail_properties",
            "alternative_names": [
              "postal_mail_data",
              "mail_object_properties"
            ],
            "description": "JSON object containing key-value pairs for the properties of the new postal mail object and any associations.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/postal_mail",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a postal mail object with the given properties and return a copy of the object, including the ID. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/postal_mail/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_postal_mail_batch",
        "description": {
          "tagline": "Create a batch of postal mail objects in HubSpot CRM.",
          "detailed": "Use this tool to create multiple postal mail records within the HubSpot CRM system. Ideal for handling bulk postal mail operations efficiently."
        },
        "return_annotation": "Confirmation of postal mail batch creation.",
        "arguments": [
          {
            "name": "postal_mail_batch_data",
            "alternative_names": [
              "mail_batch_details",
              "postal_mail_entries"
            ],
            "description": "A JSON object containing an array of postal mail entries with details like associations, properties, and trace IDs for batch creation.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/postal_mail/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Batch create",
      "description": "Create a batch of postal mail objects.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/postal_mail/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_postal_mail_in_hubspot",
        "description": {
          "tagline": "Create or update postal mail records in HubSpot CRM.",
          "detailed": "This tool creates or updates postal mail records in HubSpot CRM based on a unique property value specified by the `idProperty` query parameter. Use it to ensure postal mail records are up-to-date and accurately maintained."
        },
        "return_annotation": "Confirmation of postal mail records creation or update.",
        "arguments": [
          {
            "name": "postal_mail_records",
            "alternative_names": [
              "postal_mail_data",
              "postal_mail_entries"
            ],
            "description": "An array of postal mail records with unique identifiers and their properties. Each record should include `idProperty`, `objectWriteTraceId`, `id`, and `properties` to specify the unique aspects and data of the postal mail object.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/postal_mail/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Batch upsert",
      "description": "Create or update postal mails identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/postal_mail/{postalMailId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_postal_mail_by_id",
        "description": {
          "tagline": "Retrieve details of a postal mail record by ID from HubSpot CRM.",
          "detailed": "Use this tool to get detailed information about a specific postal mail record in HubSpot CRM by providing the postal mail ID."
        },
        "return_annotation": "Details of a specific postal mail record in HubSpot CRM.",
        "arguments": [
          {
            "name": "postal_mail_id",
            "alternative_names": [
              "mail_record_id",
              "postal_id"
            ],
            "description": "The unique identifier for the postal mail record to retrieve details from HubSpot CRM.",
            "endpoint_argument_name": "postalMailId"
          },
          {
            "name": "specified_properties",
            "alternative_names": [
              "selected_properties",
              "chosen_attributes"
            ],
            "description": "A list of specific postal mail properties to retrieve. Leave empty to get all properties.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "property_history",
              "historical_properties"
            ],
            "description": "A list of property names for which history should be returned. Accepts an array of strings.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "related_objects_associations",
            "alternative_names": [
              "linked_entities",
              "connected_records"
            ],
            "description": "List of string identifiers representing related objects to retrieve alongside the postal mail record.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "identify_by_id_property",
            "alternative_names": [
              "use_property_id_for_identification",
              "id_property_for_lookup"
            ],
            "description": "Specifies which property will be used as the primary identifier. Accepts a string that represents the property within the postal mail object that should be used to identify and retrieve details.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "include_archived",
            "alternative_names": [
              "show_archived",
              "retrieve_archived"
            ],
            "description": "Set to true to include archived postal mail records in the response.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/postal_mail/{postalMailId}",
      "tags": [
        "Basic"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "postalMailId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/postal_mail/{postalMailId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_postal_mail",
        "description": {
          "tagline": "Archive a postal mail object in HubSpot CRM.",
          "detailed": "This tool moves a postal mail object, specified by its ID, to the recycling bin in HubSpot CRM. Use this tool when you need to archive a specific postal mail entry."
        },
        "return_annotation": "Confirmation of postal mail archived.",
        "arguments": [
          {
            "name": "postal_mail_id",
            "alternative_names": [
              "postal_mail_identifier",
              "mail_id"
            ],
            "description": "The unique identifier of the postal mail object to be archived.",
            "endpoint_argument_name": "postalMailId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/postal_mail/{postalMailId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move the postal mail object with the ID `{postalMailId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "postalMailId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/postal_mail/{postalMailId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_postal_mail_record",
        "description": {
          "tagline": "Update a postal mail record in HubSpot CRM.",
          "detailed": "Use this tool to update an existing postal mail record in HubSpot CRM by specifying the postalMailId of the record to be updated."
        },
        "return_annotation": "Details of the updated postal mail record.",
        "arguments": [
          {
            "name": "postal_mail_id",
            "alternative_names": [
              "mail_record_id",
              "postal_id"
            ],
            "description": "A unique identifier for the postal mail record to be updated in HubSpot CRM.",
            "endpoint_argument_name": "postalMailId"
          },
          {
            "name": "postal_mail_update_data",
            "alternative_names": [
              "postal_mail_update_details",
              "postal_mail_update_properties"
            ],
            "description": "JSON object containing key-value pairs of the postal mail properties to update.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "property_identifier",
            "alternative_names": [
              "property_id",
              "field_identifier"
            ],
            "description": "Specify the property key of the postal mail record to identify which field to update. This is typically the name of the field in the CRM record.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/postal_mail/{postalMailId}",
      "tags": [
        "Basic"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "postalMailId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/postal_mail/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_multiple_postal_mails",
        "description": {
          "tagline": "Update multiple postal mail records at once in HubSpot CRM.",
          "detailed": "Use this tool to update several postal mail objects within HubSpot CRM in a single request, streamlining batch modifications."
        },
        "return_annotation": "Confirmation of postal mail updates.",
        "arguments": [
          {
            "name": "postal_mail_updates",
            "alternative_names": [
              "mail_batch_updates",
              "postal_mail_records"
            ],
            "description": "JSON array containing objects with ids and properties to update postal mail records. Each object should include `idProperty`, `objectWriteTraceId`, `id`, and `properties`.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/postal_mail/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "",
      "description": "Update multiple postal mail objects in a single request.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/postal_mail/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_postal_mail_hubspot",
        "description": {
          "tagline": "Search for postal mail objects in HubSpot CRM.",
          "detailed": "Use this tool to search for postal mail records in HubSpot CRM based on specific criteria. This is useful when you need to retrieve details about postal interactions stored within the CRM."
        },
        "return_annotation": "Search results for postal mail records.",
        "arguments": [
          {
            "name": "search_criteria",
            "alternative_names": [
              "query_parameters",
              "search_request_body"
            ],
            "description": "A JSON object defining the search criteria, including query, limit, paging, sorting, and filtering options.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/postal_mail/search",
      "tags": [
        "Search"
      ],
      "summary": "Search",
      "description": "Search for postal mail objects using specific criteria in the request.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/products/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_products_batch",
        "description": {
          "tagline": "Archive a batch of products by ID in HubSpot CRM.",
          "detailed": "Use this tool to archive multiple products in HubSpot CRM by providing their IDs. It should be called when you need to bulk remove products from the CRM database."
        },
        "return_annotation": "Confirms batch archival of products by ID.",
        "arguments": [
          {
            "name": "product_ids",
            "alternative_names": [
              "product_id_list",
              "ids_to_archive"
            ],
            "description": "A list of product IDs to be archived from HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/products/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of products by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/products_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_products_page",
        "description": {
          "tagline": "Fetch a page of products from HubSpot CRM.",
          "detailed": "Use this tool to retrieve a page of products from the HubSpot CRM. You can control the returned product details using the `properties` query parameter."
        },
        "return_annotation": "Page of products with specified properties.",
        "arguments": [
          {
            "name": "maximum_results_per_page",
            "alternative_names": [
              "results_per_page_limit",
              "page_results_max"
            ],
            "description": "The maximum number of results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "after_cursor"
            ],
            "description": "The cursor token for the last read resource, used for paged responses.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "product_properties_to_return",
            "alternative_names": [
              "properties_list",
              "requested_properties"
            ],
            "description": "Comma-separated properties to include in the response. Any non-existent properties for the requested objects will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "include_properties_with_history",
            "alternative_names": [
              "properties_with_history",
              "historical_properties"
            ],
            "description": "Comma separated list of product properties to include along with their history. Reduces maximum results per request if used.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_ids",
              "linked_object_types"
            ],
            "description": "Provide a comma-separated list of object types to retrieve associated IDs for. Ignored if not existing.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "include_archived_results",
              "show_archived_only"
            ],
            "description": "Set to true to return only results that have been archived.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/products",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of products. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.products.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of products that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of products that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/products_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_product_in_hubspot",
        "description": {
          "tagline": "Create a new product in HubSpot CRM.",
          "detailed": "Use this tool to create a product in HubSpot CRM with specified properties. It returns the created product details, including the ID, which can be used for further referencing or operations."
        },
        "return_annotation": "Returns the created product details, including the ID.",
        "arguments": [
          {
            "name": "product_properties",
            "alternative_names": [
              "product_details",
              "new_product_data"
            ],
            "description": "A JSON object containing key-value pairs for the product's properties and any associations, defining attributes and connections.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/products",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a product with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard products is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/products/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_hubspot_products",
        "description": {
          "tagline": "Search for products in HubSpot CRM.",
          "detailed": "Use this tool to search for and retrieve product information from HubSpot CRM. It calls the endpoint designed to query products based on specified criteria."
        },
        "return_annotation": "Search results for HubSpot CRM products.",
        "arguments": [
          {
            "name": "search_criteria",
            "alternative_names": [
              "product_search_criteria",
              "hubspot_search_filters"
            ],
            "description": "JSON object containing search parameters such as query, limit, paging cursor, sorting order, properties to return, and filter groups for product search in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/products/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.products.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/products/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_hubspot_product_records",
        "description": {
          "tagline": "Retrieve HubSpot product records by ID or unique property.",
          "detailed": "This tool retrieves HubSpot CRM product records using a record ID or a custom unique value property (`idProperty`). It is useful for accessing detailed product data stored in HubSpot CRM based on specific identifiers."
        },
        "return_annotation": "Retrieves HubSpot product records based on ID or unique properties.",
        "arguments": [
          {
            "name": "product_record_request_body",
            "alternative_names": [
              "product_data_request_body",
              "product_query_payload"
            ],
            "description": "JSON object containing 'idProperty', 'properties', 'propertiesWithHistory', and 'inputs'. Used to specify product records by ID or unique properties.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "only_archived",
            "alternative_names": [
              "archived_only",
              "filter_archived"
            ],
            "description": "Set to true to retrieve only archived product records. False returns unarchived records.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/products/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of products by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.products.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/products/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_of_products",
        "description": {
          "tagline": "Create a batch of products in HubSpot CRM.",
          "detailed": "Use this tool to add multiple products to the HubSpot CRM in a single batch. Ideal for updating product catalogs efficiently."
        },
        "return_annotation": "Confirmation of product batch creation.",
        "arguments": [
          {
            "name": "product_batch_data",
            "alternative_names": [
              "product_data_list",
              "batch_product_data"
            ],
            "description": "A JSON object containing an array of products to be created. Each product should include details like properties, associations, and an optional object write trace ID.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/products/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of products",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/products/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_hubspot_products_batch",
        "description": {
          "tagline": "Batch create or update HubSpot product records.",
          "detailed": "This tool is used to create or update HubSpot product records in bulk, identified by a unique property value specified by the `idProperty`. It should be called when there's a need to synchronize or modify multiple product entries in the HubSpot CRM."
        },
        "return_annotation": "Confirmation of product records upsert status.",
        "arguments": [
          {
            "name": "product_batch_input_data",
            "alternative_names": [
              "products_bulk_data_input",
              "batch_product_entries"
            ],
            "description": "JSON array of product records to upsert. Each record must include `idProperty`, `objectWriteTraceId`, `id`, and `properties`.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/products/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of products by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/products/{productId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_product_details_by_id",
        "description": {
          "tagline": "Retrieve product details using a product ID.",
          "detailed": "This tool retrieves the details of a product in HubSpot CRM using its product ID. It can also use any unique property specified by the `idProperty` query parameter. Use this tool to obtain specific product information from HubSpot CRM."
        },
        "return_annotation": "Product details identified by productId.",
        "arguments": [
          {
            "name": "product_id",
            "alternative_names": [
              "unique_product_identifier",
              "product_reference_id"
            ],
            "description": "A unique identifier for the product. Can be the internal ID or any unique property as specified by `idProperty`.",
            "endpoint_argument_name": "productId"
          },
          {
            "name": "properties_to_return",
            "alternative_names": [
              "product_properties",
              "fields_to_retrieve"
            ],
            "description": "A list of product properties to include in the response. Any missing properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_with_past_values"
            ],
            "description": "List properties to return with their history of past values, separated by commas. Ignored if not present in object.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associated_object_ids",
            "alternative_names": [
              "fetch_associated_object_ids",
              "get_related_object_ids"
            ],
            "description": "A list of object types to retrieve associated IDs for. Any non-existent associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_identifier_name"
            ],
            "description": "Specify the property name with unique values for the product object, instead of default productId.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "archived_only",
              "archived_results_only"
            ],
            "description": "Set to true to return only archived results. If false, only non-archived results are returned.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/products/{productId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{productId}`. `{productId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.products.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "productId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/products/{productId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_product",
        "description": {
          "tagline": "Archive a product by moving it to the recycling bin.",
          "detailed": "Use this tool to move a product, identified by its productId, to the recycling bin in HubSpot CRM."
        },
        "return_annotation": "Confirmation of product archival.",
        "arguments": [
          {
            "name": "product_id",
            "alternative_names": [
              "product_identifier",
              "product_key"
            ],
            "description": "The unique identifier of the product to be archived in HubSpot CRM.",
            "endpoint_argument_name": "productId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/products/{productId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{productId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "productId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/products/{productId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_product_info",
        "description": {
          "tagline": "Partially update product information in HubSpot CRM.",
          "detailed": "This tool updates specific properties of a product identified by `productId` in HubSpot CRM. It will override existing property values, and returning errors for read-only or non-existent properties. Use when you need to modify product attributes such as name, price, or description."
        },
        "return_annotation": "Confirmation of the product update operation.",
        "arguments": [
          {
            "name": "product_id",
            "alternative_names": [
              "product_identifier",
              "product_unique_id"
            ],
            "description": "The internal object ID of the product to be updated. This identifies the specific product in HubSpot CRM for the update operation.",
            "endpoint_argument_name": "productId"
          },
          {
            "name": "product_properties_update",
            "alternative_names": [
              "update_product_properties",
              "modify_product_info"
            ],
            "description": "JSON object with key-value pairs of product properties to update. Only existing properties can be updated. Pass empty strings to clear values.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_key_name"
            ],
            "description": "The unique property name used to identify the product. It should be a string representing a property with unique values.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/products/{productId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{productId}`or optionally a unique property value as specified by the `idProperty` query param. `{productId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "productId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/products/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_hubspot_products_batch",
        "description": {
          "tagline": "Update a batch of HubSpot products by ID or unique properties.",
          "detailed": "Use this tool to update multiple products in HubSpot CRM with new details by internal IDs or unique property values."
        },
        "return_annotation": "Confirmation of batch update for products.",
        "arguments": [
          {
            "name": "product_updates_payload",
            "alternative_names": [
              "products_batch_update_payload",
              "hubspot_update_payload"
            ],
            "description": "JSON payload containing an array of product updates. Each update includes 'id' or 'idProperty', 'objectWriteTraceId', and 'properties'.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/products/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of products by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.products.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/properties/{objectType}/batch/archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_crm_properties",
        "description": {
          "tagline": "Archive a list of properties in HubSpot CRM.",
          "detailed": "Use this tool to archive a provided list of properties within a specified object type in HubSpot CRM. It returns a confirmation of successful archiving, regardless of the properties' initial state."
        },
        "return_annotation": "Indicates if properties were archived successfully.",
        "arguments": [
          {
            "name": "crm_object_type",
            "alternative_names": [
              "property_object_type",
              "hubspot_object_type"
            ],
            "description": "Specify the type of CRM object (e.g., 'contacts', 'companies') for which the properties should be archived.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "properties_list_to_archive",
            "alternative_names": [
              "properties_batch",
              "properties_array"
            ],
            "description": "A JSON array of properties to archive, each with a 'name' field specifying the property name.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/properties/{objectType}/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of properties",
      "description": "Archive a provided list of properties. This method will return a 204 No Content response on success regardless of the initial state of the property (e.g. active, already archived, non-existent).",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "name": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of the property to read or modify."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the property to read or modify."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"name\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of the property to read or modify.\"\n                }\n              },\n              \"example\": {\n                \"name\": \"my_custom_property\"\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/properties/{objectType}/groups/{groupName}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "read_property_group",
        "description": {
          "tagline": "Retrieve details of a property group by its name.",
          "detailed": "Use this tool to get detailed information about a property group identified by {groupName} within a specified object type in HubSpot CRM."
        },
        "return_annotation": "Details of the specified property group.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "entity_type",
              "crm_object"
            ],
            "description": "Specify the type of CRM object, such as 'contacts' or 'deals'.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "property_group_name",
            "alternative_names": [
              "group_name",
              "property_identifier"
            ],
            "description": "The name of the property group to be retrieved.",
            "endpoint_argument_name": "groupName"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/properties/{objectType}/groups/{groupName}",
      "tags": [
        "Groups"
      ],
      "summary": "Read a property group",
      "description": "Read a property group identified by {groupName}.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.subscriptions.write",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.pipelines.orders.read",
        "automation",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.appointments.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.marketing_events.read",
        "crm.objects.appointments.read",
        "crm.schemas.appointments.read",
        "crm.objects.subscriptions.read",
        "crm.schemas.deals.read",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.schemas.line_items.read",
        "crm.objects.goals.read",
        "media_bridge.read",
        "crm.objects.products.write",
        "crm.schemas.listings.read",
        "crm.objects.contacts.write",
        "crm.objects.goals.write",
        "crm.schemas.custom.read",
        "crm.objects.marketing_events.write",
        "crm.objects.leads.read",
        "crm.schemas.orders.read",
        "crm.objects.feedback_submissions.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.schemas.quotes.read",
        "tickets",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.schemas.commercepayments.read",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.leads.write",
        "crm.objects.commercepayments.write",
        "crm.objects.orders.read",
        "crm.schemas.carts.read",
        "tickets.sensitive.v2",
        "crm.schemas.invoices.read",
        "crm.objects.contacts.sensitive.write.v2",
        "e-commerce",
        "crm.objects.owners.read",
        "crm.objects.quotes.write",
        "crm.objects.line_items.write",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.schemas.services.read",
        "crm.objects.courses.write",
        "crm.schemas.contacts.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.services.write",
        "crm.objects.courses.read",
        "crm.schemas.courses.read",
        "crm.objects.custom.read",
        "crm.schemas.subscriptions.read",
        "crm.schemas.companies.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.companies.write",
        "crm.objects.quotes.read",
        "crm.objects.companies.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.invoices.read",
        "crm.objects.listings.write",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "groupName",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/properties/{objectType}/groups/{groupName}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_property_group",
        "description": {
          "tagline": "Delete a property group and move it to recycling bin.",
          "detailed": "Use this tool to move a specified property group to the recycling bin in HubSpot CRM. Ideal when a property group is no longer needed and should be removed."
        },
        "return_annotation": "Confirmation of the property group's deletion.",
        "arguments": [
          {
            "name": "crm_object_type",
            "alternative_names": [
              "entity_type",
              "object_category"
            ],
            "description": "Specify the type of CRM object, such as 'contacts', 'companies', etc.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "property_group_name",
            "alternative_names": [
              "group_name_identifier",
              "group_identifier"
            ],
            "description": "The name of the property group to delete. This identifies which group to move to the recycling bin in HubSpot CRM.",
            "endpoint_argument_name": "groupName"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/properties/{objectType}/groups/{groupName}",
      "tags": [
        "Groups"
      ],
      "summary": "Archive a property group",
      "description": "Move a property group identified by {groupName} to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "groupName",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/properties/{objectType}/groups/{groupName}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_property_group",
        "description": {
          "tagline": "Update fields in a specified property group.",
          "detailed": "This tool performs a partial update on a property group identified by {groupName} in HubSpot CRM. It overwrites the provided fields in the property group. Useful for modifying specific attributes within a property group without altering the entire group."
        },
        "return_annotation": "Confirmation of the property group update.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "entity_type",
              "object_category"
            ],
            "description": "Specifies the type of object in HubSpot CRM (e.g., contacts, companies).",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "property_group_name",
            "alternative_names": [
              "group_identifier",
              "group_key"
            ],
            "description": "The unique name of the property group to be updated in HubSpot CRM.",
            "endpoint_argument_name": "groupName"
          },
          {
            "name": "property_group_display_order",
            "alternative_names": [
              "group_display_priority",
              "group_sort_order"
            ],
            "description": "Set the display order of the property group. Use positive integers for ordering, or -1 to display after positive values.",
            "endpoint_argument_name": "displayOrder"
          },
          {
            "name": "property_group_label",
            "alternative_names": [
              "group_label",
              "label_for_group"
            ],
            "description": "A human-readable label for the property group in HubSpot.",
            "endpoint_argument_name": "label"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/properties/{objectType}/groups/{groupName}",
      "tags": [
        "Groups"
      ],
      "summary": "Update a property group",
      "description": "Perform a partial update of a property group identified by {groupName}. Provided fields will be overwritten.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "groupName",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "displayOrder",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values."
            },
            "description": "Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer",
              "description": "Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "label",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A human-readable label that will be shown in HubSpot."
            },
            "description": "A human-readable label that will be shown in HubSpot.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "A human-readable label that will be shown in HubSpot."
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"displayOrder\": {\n            \"type\": \"integer\",\n            \"description\": \"Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.\",\n            \"format\": \"int32\"\n          },\n          \"label\": {\n            \"type\": \"string\",\n            \"description\": \"A human-readable label that will be shown in HubSpot.\"\n          }\n        },\n        \"example\": {\n          \"displayOrder\": -1,\n          \"label\": \"My Property Group\"\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "get-/crm/v3/properties/{objectType}/{propertyName}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "read_property",
        "description": {
          "tagline": "Retrieve CRM property details by name and type.",
          "detailed": "This tool fetches details of a specific property from HubSpot CRM by providing the property name and object type. Use this tool to access property information when dealing with HubSpot CRM data."
        },
        "return_annotation": "Details of the specified CRM property.",
        "arguments": [
          {
            "name": "crm_object_type",
            "alternative_names": [
              "type_of_object",
              "crm_entity_type"
            ],
            "description": "Specify the CRM object type, such as 'contact' or 'company', to retrieve the property for.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "property_name",
            "alternative_names": [
              "property_identifier",
              "property_title"
            ],
            "description": "The unique name of the property to retrieve. This should match the property name in HubSpot CRM.",
            "endpoint_argument_name": "propertyName"
          },
          {
            "name": "property_specifications",
            "alternative_names": [
              "property_details",
              "property_attributes"
            ],
            "description": "Specify the details or attributes of the property to retrieve. Use a comma-separated list for multiple specifications.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "show_only_archived",
              "fetch_archived_only"
            ],
            "description": "Set to True to return only archived property results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/properties/{objectType}/{propertyName}",
      "tags": [
        "Core"
      ],
      "summary": "Read a property",
      "description": "Read a property identified by {propertyName}.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.subscriptions.write",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.pipelines.orders.read",
        "automation",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.appointments.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.marketing_events.read",
        "crm.objects.appointments.read",
        "crm.schemas.appointments.read",
        "crm.objects.subscriptions.read",
        "crm.schemas.deals.read",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.schemas.line_items.read",
        "crm.objects.goals.read",
        "media_bridge.read",
        "crm.objects.products.write",
        "crm.schemas.listings.read",
        "crm.objects.contacts.write",
        "crm.objects.goals.write",
        "crm.schemas.custom.read",
        "crm.objects.marketing_events.write",
        "crm.objects.leads.read",
        "crm.schemas.orders.read",
        "crm.objects.feedback_submissions.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.schemas.quotes.read",
        "tickets",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.schemas.commercepayments.read",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.leads.write",
        "crm.objects.commercepayments.write",
        "crm.objects.orders.read",
        "crm.schemas.carts.read",
        "tickets.sensitive.v2",
        "crm.schemas.invoices.read",
        "crm.objects.contacts.sensitive.write.v2",
        "e-commerce",
        "crm.objects.owners.read",
        "crm.objects.quotes.write",
        "crm.objects.line_items.write",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.schemas.services.read",
        "crm.objects.courses.write",
        "crm.schemas.contacts.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.services.write",
        "crm.objects.courses.read",
        "crm.schemas.courses.read",
        "crm.objects.custom.read",
        "crm.schemas.subscriptions.read",
        "crm.schemas.companies.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.companies.write",
        "crm.objects.quotes.read",
        "crm.objects.companies.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.invoices.read",
        "crm.objects.listings.write",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "propertyName",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/properties/{objectType}/{propertyName}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_property_hubspot_crm",
        "description": {
          "tagline": "Delete a property in HubSpot CRM and move it to the recycling bin.",
          "detailed": "Use this tool to delete a specific property from the HubSpot CRM by specifying the object type and property name. This action moves the property to the recycling bin."
        },
        "return_annotation": "Confirmation of property deletion.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "entity_type",
              "object_category"
            ],
            "description": "Specify the type of object in HubSpot CRM (e.g., 'contacts', 'companies').",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "property_name",
            "alternative_names": [
              "property_identifier",
              "property_key"
            ],
            "description": "The name of the property to delete, identified by its unique name within the object type.",
            "endpoint_argument_name": "propertyName"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/properties/{objectType}/{propertyName}",
      "tags": [
        "Core"
      ],
      "summary": "Archive a property",
      "description": "Move a property identified by {propertyName} to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "propertyName",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/properties/{objectType}/{propertyName}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_property_value",
        "description": {
          "tagline": "Update specific fields of a CRM property partially.",
          "detailed": "Use this tool to partially update specific fields of a CRM property identified by its name. Only the specified fields will be overwritten."
        },
        "return_annotation": "Confirmation of property update success or failure.",
        "arguments": [
          {
            "name": "crm_object_type",
            "alternative_names": [
              "entity_type",
              "crm_entity"
            ],
            "description": "Specify the type of CRM object (e.g., 'contacts', 'deals') to update.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "property_identifier",
            "alternative_names": [
              "property_id",
              "property_key"
            ],
            "description": "The unique name of the CRM property to be updated.",
            "endpoint_argument_name": "propertyName"
          },
          {
            "name": "property_update_details",
            "alternative_names": [
              "property_update_data",
              "property_update_info"
            ],
            "description": "A JSON object containing fields to update a CRM property, such as group name, visibility, options, display order, description, calculation formula, label, type, field type, and form field status.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/properties/{objectType}/{propertyName}",
      "tags": [
        "Core"
      ],
      "summary": "Update a property",
      "description": "Perform a partial update of a property identified by { propertyName }. Provided fields will be overwritten.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "propertyName",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "groupName": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The name of the property group the property belongs to."
                },
                "hidden": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "If true, the property won't be visible and can't be used in HubSpot."
                },
                "options": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "hidden": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties."
                    },
                    "displayOrder": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values."
                    },
                    "description": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A description of the option."
                    },
                    "label": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A human-readable option label that will be shown in HubSpot."
                    },
                    "value": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The internal value of the option, which must be used when setting the property value through the API."
                    }
                  },
                  "description": "A list of valid options for the property."
                },
                "displayOrder": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the Property to be displayed after any positive values."
                },
                "description": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A description of the property that will be shown as help text in HubSpot."
                },
                "calculationFormula": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Represents a formula that is used to compute a calculated property."
                },
                "label": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A human-readable property label that will be shown in HubSpot."
                },
                "type": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "bool",
                    "date",
                    "datetime",
                    "enumeration",
                    "number",
                    "phone_number",
                    "string"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The data type of the property."
                },
                "fieldType": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "booleancheckbox",
                    "calculation_equation",
                    "checkbox",
                    "date",
                    "file",
                    "html",
                    "number",
                    "phonenumber",
                    "radio",
                    "select",
                    "text",
                    "textarea"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "Controls how the property appears in HubSpot."
                },
                "formField": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Whether or not the property can be used in a HubSpot form."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "groupName": {
                  "type": "string",
                  "description": "The name of the property group the property belongs to."
                },
                "hidden": {
                  "type": "boolean",
                  "description": "If true, the property won't be visible and can't be used in HubSpot."
                },
                "options": {
                  "type": "array",
                  "description": "A list of valid options for the property.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hidden": {
                        "type": "boolean",
                        "description": "If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties."
                      },
                      "displayOrder": {
                        "type": "integer",
                        "description": "Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.",
                        "format": "int32"
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the option."
                      },
                      "label": {
                        "type": "string",
                        "description": "A human-readable option label that will be shown in HubSpot."
                      },
                      "value": {
                        "type": "string",
                        "description": "The internal value of the option, which must be used when setting the property value through the API."
                      }
                    },
                    "required": [
                      "hidden",
                      "label",
                      "value"
                    ]
                  }
                },
                "displayOrder": {
                  "type": "integer",
                  "description": "Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the Property to be displayed after any positive values.",
                  "format": "int32"
                },
                "description": {
                  "type": "string",
                  "description": "A description of the property that will be shown as help text in HubSpot."
                },
                "calculationFormula": {
                  "type": "string",
                  "description": "Represents a formula that is used to compute a calculated property."
                },
                "label": {
                  "type": "string",
                  "description": "A human-readable property label that will be shown in HubSpot."
                },
                "type": {
                  "type": "string",
                  "description": "The data type of the property.",
                  "enum": [
                    "bool",
                    "date",
                    "datetime",
                    "enumeration",
                    "number",
                    "phone_number",
                    "string"
                  ]
                },
                "fieldType": {
                  "type": "string",
                  "description": "Controls how the property appears in HubSpot.",
                  "enum": [
                    "booleancheckbox",
                    "calculation_equation",
                    "checkbox",
                    "date",
                    "file",
                    "html",
                    "number",
                    "phonenumber",
                    "radio",
                    "select",
                    "text",
                    "textarea"
                  ]
                },
                "formField": {
                  "type": "boolean",
                  "description": "Whether or not the property can be used in a HubSpot form."
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"groupName\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the property group the property belongs to.\"\n          },\n          \"hidden\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, the property won't be visible and can't be used in HubSpot.\"\n          },\n          \"options\": {\n            \"type\": \"array\",\n            \"description\": \"A list of valid options for the property.\",\n            \"items\": {\n              \"required\": [\n                \"hidden\",\n                \"label\",\n                \"value\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"hidden\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties.\"\n                },\n                \"displayOrder\": {\n                  \"type\": \"integer\",\n                  \"description\": \"Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.\",\n                  \"format\": \"int32\"\n                },\n                \"description\": {\n                  \"type\": \"string\",\n                  \"description\": \"A description of the option.\"\n                },\n                \"label\": {\n                  \"type\": \"string\",\n                  \"description\": \"A human-readable option label that will be shown in HubSpot.\"\n                },\n                \"value\": {\n                  \"type\": \"string\",\n                  \"description\": \"The internal value of the option, which must be used when setting the property value through the API.\"\n                }\n              },\n              \"example\": {\n                \"description\": \"Choice number one\",\n                \"displayOrder\": 1,\n                \"hidden\": false,\n                \"label\": \"Option A\",\n                \"value\": \"A\"\n              }\n            }\n          },\n          \"displayOrder\": {\n            \"type\": \"integer\",\n            \"description\": \"Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the Property to be displayed after any positive values.\",\n            \"format\": \"int32\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"A description of the property that will be shown as help text in HubSpot.\"\n          },\n          \"calculationFormula\": {\n            \"type\": \"string\",\n            \"description\": \"Represents a formula that is used to compute a calculated property.\"\n          },\n          \"label\": {\n            \"type\": \"string\",\n            \"description\": \"A human-readable property label that will be shown in HubSpot.\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The data type of the property.\",\n            \"enum\": [\n              \"bool\",\n              \"date\",\n              \"datetime\",\n              \"enumeration\",\n              \"number\",\n              \"phone_number\",\n              \"string\"\n            ]\n          },\n          \"fieldType\": {\n            \"type\": \"string\",\n            \"description\": \"Controls how the property appears in HubSpot.\",\n            \"enum\": [\n              \"booleancheckbox\",\n              \"calculation_equation\",\n              \"checkbox\",\n              \"date\",\n              \"file\",\n              \"html\",\n              \"number\",\n              \"phonenumber\",\n              \"radio\",\n              \"select\",\n              \"text\",\n              \"textarea\"\n            ]\n          },\n          \"formField\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether or not the property can be used in a HubSpot form.\"\n          }\n        },\n        \"example\": {\n          \"displayOrder\": 2,\n          \"fieldType\": \"select\",\n          \"formField\": true,\n          \"groupName\": \"contactinformation\",\n          \"hidden\": false,\n          \"label\": \"My Contact Property\",\n          \"name\": \"my_contact_property\",\n          \"options\": [\n            {\n              \"description\": \"Choice number one\",\n              \"displayOrder\": 1,\n              \"hidden\": false,\n              \"label\": \"Option A\",\n              \"value\": \"A\"\n            },\n            {\n              \"description\": \"Choice number two\",\n              \"displayOrder\": 2,\n              \"hidden\": false,\n              \"label\": \"Option B\",\n              \"value\": \"B\"\n            }\n          ],\n          \"type\": \"enumeration\"\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/properties/{objectType}/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "read_batch_properties",
        "description": {
          "tagline": "Fetches a batch of properties for a specified CRM object type.",
          "detailed": "Use this tool to retrieve a list of properties for a given object type in the CRM. This can be useful when you need detailed information about multiple properties at once."
        },
        "return_annotation": "List of requested properties for the specified object type.",
        "arguments": [
          {
            "name": "crm_object_type",
            "alternative_names": [
              "object_category",
              "entity_type"
            ],
            "description": "The type of CRM object for which properties are being read (e.g., contacts, deals).",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "property_request_details",
            "alternative_names": [
              "batch_property_request",
              "property_retrieval_request"
            ],
            "description": "A JSON object specifying properties to read. Includes 'archived', 'inputs' list, and 'dataSensitivity' level.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/properties/{objectType}/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of properties",
      "description": "Read a provided list of properties.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.subscriptions.write",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.pipelines.orders.read",
        "automation",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.appointments.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.marketing_events.read",
        "crm.objects.appointments.read",
        "crm.schemas.appointments.read",
        "crm.objects.subscriptions.read",
        "crm.schemas.deals.read",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.schemas.line_items.read",
        "crm.objects.goals.read",
        "media_bridge.read",
        "crm.objects.products.write",
        "crm.schemas.listings.read",
        "crm.objects.contacts.write",
        "crm.objects.goals.write",
        "crm.schemas.custom.read",
        "crm.objects.marketing_events.write",
        "crm.objects.leads.read",
        "crm.schemas.orders.read",
        "crm.objects.feedback_submissions.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.schemas.quotes.read",
        "tickets",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.schemas.commercepayments.read",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.leads.write",
        "crm.objects.commercepayments.write",
        "crm.objects.orders.read",
        "crm.schemas.carts.read",
        "tickets.sensitive.v2",
        "crm.schemas.invoices.read",
        "crm.objects.contacts.sensitive.write.v2",
        "e-commerce",
        "crm.objects.owners.read",
        "crm.objects.quotes.write",
        "crm.objects.line_items.write",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.schemas.services.read",
        "crm.objects.courses.write",
        "crm.schemas.contacts.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.services.write",
        "crm.objects.courses.read",
        "crm.schemas.courses.read",
        "crm.objects.custom.read",
        "crm.schemas.subscriptions.read",
        "crm.schemas.companies.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.companies.write",
        "crm.objects.quotes.read",
        "crm.objects.companies.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.invoices.read",
        "crm.objects.listings.write",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "archived": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "name": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of the property to read or modify."
                    }
                  },
                  "description": null
                },
                "dataSensitivity": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "non_sensitive",
                    "sensitive",
                    "highly_sensitive"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "archived": {
                  "type": "boolean"
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the property to read or modify."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "dataSensitivity": {
                  "type": "string",
                  "enum": [
                    "non_sensitive",
                    "sensitive",
                    "highly_sensitive"
                  ]
                }
              },
              "required": [
                "archived",
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"archived\",\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"archived\": {\n            \"type\": \"boolean\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"name\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of the property to read or modify.\"\n                }\n              },\n              \"example\": {\n                \"name\": \"my_custom_property\"\n              }\n            }\n          },\n          \"dataSensitivity\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"non_sensitive\",\n              \"sensitive\",\n              \"highly_sensitive\"\n            ]\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/properties/{objectType}/batch/create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_properties",
        "description": {
          "tagline": "Create a batch of properties for a specified object type in HubSpot.",
          "detailed": "This tool facilitates the creation of multiple properties at once for any specified object type in HubSpot CRM, using the standard rules applied to individual property creation."
        },
        "return_annotation": "Confirmation of batch property creation.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "entity_type",
              "crm_object_type"
            ],
            "description": "Specifies the type of CRM object for which to create properties (e.g., contacts, deals, companies).",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "property_batch_request",
            "alternative_names": [
              "property_creation_payload",
              "property_data_batch"
            ],
            "description": "A JSON object containing an array of property creations. Each entry should define attributes like name, label, type, and options.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/properties/{objectType}/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of properties",
      "description": "Create a batch of properties using the same rules as when creating an individual property.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "hidden": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties."
                    },
                    "displayOrder": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property to be displayed after any positive values."
                    },
                    "description": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A description of the property that will be shown as help text in HubSpot."
                    },
                    "label": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A human-readable property label that will be shown in HubSpot."
                    },
                    "type": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "bool",
                        "date",
                        "datetime",
                        "enumeration",
                        "number",
                        "phone_number",
                        "string"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": "The data type of the property."
                    },
                    "formField": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Whether or not the property can be used in a HubSpot form."
                    },
                    "dataSensitivity": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "non_sensitive",
                        "sensitive",
                        "highly_sensitive"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "groupName": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of the property group the property belongs to."
                    },
                    "referencedObjectType": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Should be set to 'OWNER' when 'externalOptions' is true, which causes the property to dynamically pull option values from the current HubSpot users."
                    },
                    "name": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The internal property name, which must be used when referencing the property via the API."
                    },
                    "options": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "hidden": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties."
                        },
                        "displayOrder": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values."
                        },
                        "description": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "A description of the option."
                        },
                        "label": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "A human-readable option label that will be shown in HubSpot."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The internal value of the option, which must be used when setting the property value through the API."
                        }
                      },
                      "description": "A list of valid options for the property. This field is required for enumerated properties."
                    },
                    "calculationFormula": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Represents a formula that is used to compute a calculated property."
                    },
                    "hasUniqueValue": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Whether or not the property's value must be unique. Once set, this can't be changed."
                    },
                    "fieldType": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "booleancheckbox",
                        "calculation_equation",
                        "checkbox",
                        "date",
                        "file",
                        "html",
                        "number",
                        "phonenumber",
                        "radio",
                        "select",
                        "text",
                        "textarea"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": "Controls how the property appears in HubSpot."
                    },
                    "externalOptions": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Applicable only for 'enumeration' type properties.  Should be set to true in conjunction with a 'referencedObjectType' of 'OWNER'.  Otherwise false."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hidden": {
                        "type": "boolean",
                        "description": "If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties."
                      },
                      "displayOrder": {
                        "type": "integer",
                        "description": "Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property to be displayed after any positive values.",
                        "format": "int32"
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the property that will be shown as help text in HubSpot."
                      },
                      "label": {
                        "type": "string",
                        "description": "A human-readable property label that will be shown in HubSpot."
                      },
                      "type": {
                        "type": "string",
                        "description": "The data type of the property.",
                        "enum": [
                          "bool",
                          "date",
                          "datetime",
                          "enumeration",
                          "number",
                          "phone_number",
                          "string"
                        ]
                      },
                      "formField": {
                        "type": "boolean",
                        "description": "Whether or not the property can be used in a HubSpot form."
                      },
                      "dataSensitivity": {
                        "type": "string",
                        "enum": [
                          "non_sensitive",
                          "sensitive",
                          "highly_sensitive"
                        ]
                      },
                      "groupName": {
                        "type": "string",
                        "description": "The name of the property group the property belongs to."
                      },
                      "referencedObjectType": {
                        "type": "string",
                        "description": "Should be set to 'OWNER' when 'externalOptions' is true, which causes the property to dynamically pull option values from the current HubSpot users."
                      },
                      "name": {
                        "type": "string",
                        "description": "The internal property name, which must be used when referencing the property via the API."
                      },
                      "options": {
                        "type": "array",
                        "description": "A list of valid options for the property. This field is required for enumerated properties.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "hidden": {
                              "type": "boolean",
                              "description": "If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties."
                            },
                            "displayOrder": {
                              "type": "integer",
                              "description": "Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.",
                              "format": "int32"
                            },
                            "description": {
                              "type": "string",
                              "description": "A description of the option."
                            },
                            "label": {
                              "type": "string",
                              "description": "A human-readable option label that will be shown in HubSpot."
                            },
                            "value": {
                              "type": "string",
                              "description": "The internal value of the option, which must be used when setting the property value through the API."
                            }
                          },
                          "required": [
                            "hidden",
                            "label",
                            "value"
                          ]
                        }
                      },
                      "calculationFormula": {
                        "type": "string",
                        "description": "Represents a formula that is used to compute a calculated property."
                      },
                      "hasUniqueValue": {
                        "type": "boolean",
                        "description": "Whether or not the property's value must be unique. Once set, this can't be changed."
                      },
                      "fieldType": {
                        "type": "string",
                        "description": "Controls how the property appears in HubSpot.",
                        "enum": [
                          "booleancheckbox",
                          "calculation_equation",
                          "checkbox",
                          "date",
                          "file",
                          "html",
                          "number",
                          "phonenumber",
                          "radio",
                          "select",
                          "text",
                          "textarea"
                        ]
                      },
                      "externalOptions": {
                        "type": "boolean",
                        "description": "Applicable only for 'enumeration' type properties.  Should be set to true in conjunction with a 'referencedObjectType' of 'OWNER'.  Otherwise false."
                      }
                    },
                    "required": [
                      "fieldType",
                      "groupName",
                      "label",
                      "name",
                      "type"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"fieldType\",\n                \"groupName\",\n                \"label\",\n                \"name\",\n                \"type\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"hidden\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties.\"\n                },\n                \"displayOrder\": {\n                  \"type\": \"integer\",\n                  \"description\": \"Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property to be displayed after any positive values.\",\n                  \"format\": \"int32\"\n                },\n                \"description\": {\n                  \"type\": \"string\",\n                  \"description\": \"A description of the property that will be shown as help text in HubSpot.\"\n                },\n                \"label\": {\n                  \"type\": \"string\",\n                  \"description\": \"A human-readable property label that will be shown in HubSpot.\"\n                },\n                \"type\": {\n                  \"type\": \"string\",\n                  \"description\": \"The data type of the property.\",\n                  \"enum\": [\n                    \"bool\",\n                    \"date\",\n                    \"datetime\",\n                    \"enumeration\",\n                    \"number\",\n                    \"phone_number\",\n                    \"string\"\n                  ]\n                },\n                \"formField\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"Whether or not the property can be used in a HubSpot form.\"\n                },\n                \"dataSensitivity\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"non_sensitive\",\n                    \"sensitive\",\n                    \"highly_sensitive\"\n                  ]\n                },\n                \"groupName\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of the property group the property belongs to.\"\n                },\n                \"referencedObjectType\": {\n                  \"type\": \"string\",\n                  \"description\": \"Should be set to 'OWNER' when 'externalOptions' is true, which causes the property to dynamically pull option values from the current HubSpot users.\"\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"description\": \"The internal property name, which must be used when referencing the property via the API.\"\n                },\n                \"options\": {\n                  \"type\": \"array\",\n                  \"description\": \"A list of valid options for the property. This field is required for enumerated properties.\",\n                  \"items\": {\n                    \"required\": [\n                      \"hidden\",\n                      \"label\",\n                      \"value\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"hidden\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties.\"\n                      },\n                      \"displayOrder\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.\",\n                        \"format\": \"int32\"\n                      },\n                      \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"A description of the option.\"\n                      },\n                      \"label\": {\n                        \"type\": \"string\",\n                        \"description\": \"A human-readable option label that will be shown in HubSpot.\"\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The internal value of the option, which must be used when setting the property value through the API.\"\n                      }\n                    },\n                    \"example\": {\n                      \"description\": \"Choice number one\",\n                      \"displayOrder\": 1,\n                      \"hidden\": false,\n                      \"label\": \"Option A\",\n                      \"value\": \"A\"\n                    }\n                  }\n                },\n                \"calculationFormula\": {\n                  \"type\": \"string\",\n                  \"description\": \"Represents a formula that is used to compute a calculated property.\"\n                },\n                \"hasUniqueValue\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"Whether or not the property's value must be unique. Once set, this can't be changed.\"\n                },\n                \"fieldType\": {\n                  \"type\": \"string\",\n                  \"description\": \"Controls how the property appears in HubSpot.\",\n                  \"enum\": [\n                    \"booleancheckbox\",\n                    \"calculation_equation\",\n                    \"checkbox\",\n                    \"date\",\n                    \"file\",\n                    \"html\",\n                    \"number\",\n                    \"phonenumber\",\n                    \"radio\",\n                    \"select\",\n                    \"text\",\n                    \"textarea\"\n                  ]\n                },\n                \"externalOptions\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"Applicable only for 'enumeration' type properties.  Should be set to true in conjunction with a 'referencedObjectType' of 'OWNER'.  Otherwise false.\"\n                }\n              },\n              \"example\": {\n                \"displayOrder\": 2,\n                \"fieldType\": \"select\",\n                \"formField\": true,\n                \"groupName\": \"contactinformation\",\n                \"hasUniqueValue\": false,\n                \"hidden\": false,\n                \"label\": \"My Contact Property\",\n                \"name\": \"my_contact_property\",\n                \"options\": [\n                  {\n                    \"description\": \"Choice number one\",\n                    \"displayOrder\": 1,\n                    \"hidden\": false,\n                    \"label\": \"Option A\",\n                    \"value\": \"A\"\n                  },\n                  {\n                    \"description\": \"Choice number two\",\n                    \"displayOrder\": 2,\n                    \"hidden\": false,\n                    \"label\": \"Option B\",\n                    \"value\": \"B\"\n                  }\n                ],\n                \"type\": \"enumeration\"\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/properties/{objectType}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_hubspot_properties",
        "description": {
          "tagline": "Retrieve all properties for a HubSpot object type.",
          "detailed": "Use this tool to read all existing properties for a specified object type in HubSpot CRM. It provides property details relevant to the chosen object type within a HubSpot account."
        },
        "return_annotation": "All existing properties for a specified HubSpot object type.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "entity_type",
              "item_type"
            ],
            "description": "Specifies the HubSpot object type (e.g., contact, deal) to retrieve properties for.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "selected_properties",
            "alternative_names": [
              "specified_properties",
              "property_fields"
            ],
            "description": "A comma-separated list of specific properties to retrieve for the object type. Leave empty to retrieve all properties.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "include_only_archived",
              "fetch_archived_properties"
            ],
            "description": "Set to true to return only results that have been archived. Otherwise, return all properties.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/properties/{objectType}",
      "tags": [
        "Core"
      ],
      "summary": "Read all properties",
      "description": "Read all existing properties for the specified object type and HubSpot account.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.subscriptions.write",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.pipelines.orders.read",
        "automation",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.appointments.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.marketing_events.read",
        "crm.objects.appointments.read",
        "crm.schemas.appointments.read",
        "crm.objects.subscriptions.read",
        "crm.schemas.deals.read",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.schemas.line_items.read",
        "crm.objects.goals.read",
        "media_bridge.read",
        "crm.objects.products.write",
        "crm.schemas.listings.read",
        "crm.objects.contacts.write",
        "crm.objects.goals.write",
        "crm.schemas.custom.read",
        "crm.objects.marketing_events.write",
        "crm.objects.leads.read",
        "crm.schemas.orders.read",
        "crm.objects.feedback_submissions.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.schemas.quotes.read",
        "tickets",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.schemas.commercepayments.read",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.leads.write",
        "crm.objects.commercepayments.write",
        "crm.objects.orders.read",
        "crm.schemas.carts.read",
        "tickets.sensitive.v2",
        "crm.schemas.invoices.read",
        "crm.objects.contacts.sensitive.write.v2",
        "e-commerce",
        "crm.objects.owners.read",
        "crm.objects.quotes.write",
        "crm.objects.line_items.write",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.schemas.services.read",
        "crm.objects.courses.write",
        "crm.schemas.contacts.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.services.write",
        "crm.objects.courses.read",
        "crm.schemas.courses.read",
        "crm.objects.custom.read",
        "crm.schemas.subscriptions.read",
        "crm.schemas.companies.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.companies.write",
        "crm.objects.quotes.read",
        "crm.objects.companies.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.invoices.read",
        "crm.objects.listings.write",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/properties/{objectType}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_crm_property",
        "description": {
          "tagline": "Create a new property for a specified object type in HubSpot CRM.",
          "detailed": "This tool creates and returns a new property for the specified object type in HubSpot CRM. It should be used when you need to add a custom property to an object such as a contact, company, or deal in HubSpot."
        },
        "return_annotation": "Creates a new property for a specified object type in HubSpot CRM.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "entity_type",
              "crm_object_type"
            ],
            "description": "Specify the object type to which the new property will be added, such as contact, company, or deal.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "new_property_request",
            "alternative_names": [
              "property_creation_data",
              "property_attributes"
            ],
            "description": "A JSON object defining attributes for the new HubSpot CRM property, including type, label, options, and more.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/properties/{objectType}",
      "tags": [
        "Core"
      ],
      "summary": "Create a property",
      "description": "Create and return a copy of a new property for the specified object type.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "hidden": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties."
                },
                "displayOrder": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property to be displayed after any positive values."
                },
                "description": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A description of the property that will be shown as help text in HubSpot."
                },
                "label": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A human-readable property label that will be shown in HubSpot."
                },
                "type": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "bool",
                    "date",
                    "datetime",
                    "enumeration",
                    "number",
                    "phone_number",
                    "string"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The data type of the property."
                },
                "formField": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Whether or not the property can be used in a HubSpot form."
                },
                "dataSensitivity": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "non_sensitive",
                    "sensitive",
                    "highly_sensitive"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "groupName": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The name of the property group the property belongs to."
                },
                "referencedObjectType": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Should be set to 'OWNER' when 'externalOptions' is true, which causes the property to dynamically pull option values from the current HubSpot users."
                },
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The internal property name, which must be used when referencing the property via the API."
                },
                "options": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "hidden": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties."
                    },
                    "displayOrder": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values."
                    },
                    "description": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A description of the option."
                    },
                    "label": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A human-readable option label that will be shown in HubSpot."
                    },
                    "value": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The internal value of the option, which must be used when setting the property value through the API."
                    }
                  },
                  "description": "A list of valid options for the property. This field is required for enumerated properties."
                },
                "calculationFormula": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Represents a formula that is used to compute a calculated property."
                },
                "hasUniqueValue": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Whether or not the property's value must be unique. Once set, this can't be changed."
                },
                "fieldType": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "booleancheckbox",
                    "calculation_equation",
                    "checkbox",
                    "date",
                    "file",
                    "html",
                    "number",
                    "phonenumber",
                    "radio",
                    "select",
                    "text",
                    "textarea"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "Controls how the property appears in HubSpot."
                },
                "externalOptions": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Applicable only for 'enumeration' type properties.  Should be set to true in conjunction with a 'referencedObjectType' of 'OWNER'.  Otherwise false."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "hidden": {
                  "type": "boolean",
                  "description": "If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties."
                },
                "displayOrder": {
                  "type": "integer",
                  "description": "Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property to be displayed after any positive values.",
                  "format": "int32"
                },
                "description": {
                  "type": "string",
                  "description": "A description of the property that will be shown as help text in HubSpot."
                },
                "label": {
                  "type": "string",
                  "description": "A human-readable property label that will be shown in HubSpot."
                },
                "type": {
                  "type": "string",
                  "description": "The data type of the property.",
                  "enum": [
                    "bool",
                    "date",
                    "datetime",
                    "enumeration",
                    "number",
                    "phone_number",
                    "string"
                  ]
                },
                "formField": {
                  "type": "boolean",
                  "description": "Whether or not the property can be used in a HubSpot form."
                },
                "dataSensitivity": {
                  "type": "string",
                  "enum": [
                    "non_sensitive",
                    "sensitive",
                    "highly_sensitive"
                  ]
                },
                "groupName": {
                  "type": "string",
                  "description": "The name of the property group the property belongs to."
                },
                "referencedObjectType": {
                  "type": "string",
                  "description": "Should be set to 'OWNER' when 'externalOptions' is true, which causes the property to dynamically pull option values from the current HubSpot users."
                },
                "name": {
                  "type": "string",
                  "description": "The internal property name, which must be used when referencing the property via the API."
                },
                "options": {
                  "type": "array",
                  "description": "A list of valid options for the property. This field is required for enumerated properties.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hidden": {
                        "type": "boolean",
                        "description": "If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties."
                      },
                      "displayOrder": {
                        "type": "integer",
                        "description": "Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.",
                        "format": "int32"
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the option."
                      },
                      "label": {
                        "type": "string",
                        "description": "A human-readable option label that will be shown in HubSpot."
                      },
                      "value": {
                        "type": "string",
                        "description": "The internal value of the option, which must be used when setting the property value through the API."
                      }
                    },
                    "required": [
                      "hidden",
                      "label",
                      "value"
                    ]
                  }
                },
                "calculationFormula": {
                  "type": "string",
                  "description": "Represents a formula that is used to compute a calculated property."
                },
                "hasUniqueValue": {
                  "type": "boolean",
                  "description": "Whether or not the property's value must be unique. Once set, this can't be changed."
                },
                "fieldType": {
                  "type": "string",
                  "description": "Controls how the property appears in HubSpot.",
                  "enum": [
                    "booleancheckbox",
                    "calculation_equation",
                    "checkbox",
                    "date",
                    "file",
                    "html",
                    "number",
                    "phonenumber",
                    "radio",
                    "select",
                    "text",
                    "textarea"
                  ]
                },
                "externalOptions": {
                  "type": "boolean",
                  "description": "Applicable only for 'enumeration' type properties.  Should be set to true in conjunction with a 'referencedObjectType' of 'OWNER'.  Otherwise false."
                }
              },
              "required": [
                "fieldType",
                "groupName",
                "label",
                "name",
                "type"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"fieldType\",\n          \"groupName\",\n          \"label\",\n          \"name\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"hidden\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties.\"\n          },\n          \"displayOrder\": {\n            \"type\": \"integer\",\n            \"description\": \"Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property to be displayed after any positive values.\",\n            \"format\": \"int32\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"A description of the property that will be shown as help text in HubSpot.\"\n          },\n          \"label\": {\n            \"type\": \"string\",\n            \"description\": \"A human-readable property label that will be shown in HubSpot.\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The data type of the property.\",\n            \"enum\": [\n              \"bool\",\n              \"date\",\n              \"datetime\",\n              \"enumeration\",\n              \"number\",\n              \"phone_number\",\n              \"string\"\n            ]\n          },\n          \"formField\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether or not the property can be used in a HubSpot form.\"\n          },\n          \"dataSensitivity\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"non_sensitive\",\n              \"sensitive\",\n              \"highly_sensitive\"\n            ]\n          },\n          \"groupName\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the property group the property belongs to.\"\n          },\n          \"referencedObjectType\": {\n            \"type\": \"string\",\n            \"description\": \"Should be set to 'OWNER' when 'externalOptions' is true, which causes the property to dynamically pull option values from the current HubSpot users.\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The internal property name, which must be used when referencing the property via the API.\"\n          },\n          \"options\": {\n            \"type\": \"array\",\n            \"description\": \"A list of valid options for the property. This field is required for enumerated properties.\",\n            \"items\": {\n              \"required\": [\n                \"hidden\",\n                \"label\",\n                \"value\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"hidden\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties.\"\n                },\n                \"displayOrder\": {\n                  \"type\": \"integer\",\n                  \"description\": \"Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.\",\n                  \"format\": \"int32\"\n                },\n                \"description\": {\n                  \"type\": \"string\",\n                  \"description\": \"A description of the option.\"\n                },\n                \"label\": {\n                  \"type\": \"string\",\n                  \"description\": \"A human-readable option label that will be shown in HubSpot.\"\n                },\n                \"value\": {\n                  \"type\": \"string\",\n                  \"description\": \"The internal value of the option, which must be used when setting the property value through the API.\"\n                }\n              },\n              \"example\": {\n                \"description\": \"Choice number one\",\n                \"displayOrder\": 1,\n                \"hidden\": false,\n                \"label\": \"Option A\",\n                \"value\": \"A\"\n              }\n            }\n          },\n          \"calculationFormula\": {\n            \"type\": \"string\",\n            \"description\": \"Represents a formula that is used to compute a calculated property.\"\n          },\n          \"hasUniqueValue\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether or not the property's value must be unique. Once set, this can't be changed.\"\n          },\n          \"fieldType\": {\n            \"type\": \"string\",\n            \"description\": \"Controls how the property appears in HubSpot.\",\n            \"enum\": [\n              \"booleancheckbox\",\n              \"calculation_equation\",\n              \"checkbox\",\n              \"date\",\n              \"file\",\n              \"html\",\n              \"number\",\n              \"phonenumber\",\n              \"radio\",\n              \"select\",\n              \"text\",\n              \"textarea\"\n            ]\n          },\n          \"externalOptions\": {\n            \"type\": \"boolean\",\n            \"description\": \"Applicable only for 'enumeration' type properties.  Should be set to true in conjunction with a 'referencedObjectType' of 'OWNER'.  Otherwise false.\"\n          }\n        },\n        \"example\": {\n          \"displayOrder\": 2,\n          \"fieldType\": \"select\",\n          \"formField\": true,\n          \"groupName\": \"contactinformation\",\n          \"hasUniqueValue\": false,\n          \"hidden\": false,\n          \"label\": \"My Contact Property\",\n          \"name\": \"my_contact_property\",\n          \"options\": [\n            {\n              \"description\": \"Choice number one\",\n              \"displayOrder\": 1,\n              \"hidden\": false,\n              \"label\": \"Option A\",\n              \"value\": \"A\"\n            },\n            {\n              \"description\": \"Choice number two\",\n              \"displayOrder\": 2,\n              \"hidden\": false,\n              \"label\": \"Option B\",\n              \"value\": \"B\"\n            }\n          ],\n          \"type\": \"enumeration\"\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/properties/{objectType}/groups",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_hubspot_property_groups",
        "description": {
          "tagline": "Retrieve HubSpot CRM property groups for a specified object type.",
          "detailed": "This tool retrieves all existing property groups for a specified object type within a HubSpot account. Use it to access property group information for organizing and managing CRM data effectively."
        },
        "return_annotation": "List of property groups for a specified HubSpot object type.",
        "arguments": [
          {
            "name": "hubspot_object_type",
            "alternative_names": [
              "crm_object_type",
              "object_type_in_hubspot"
            ],
            "description": "Specify the HubSpot object type to retrieve property groups, such as 'contacts', 'companies', or 'deals'.",
            "endpoint_argument_name": "objectType"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/properties/{objectType}/groups",
      "tags": [
        "Groups"
      ],
      "summary": "Read all property groups",
      "description": "Read all existing property groups for the specified object type and HubSpot account.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.subscriptions.write",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.pipelines.orders.read",
        "automation",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.appointments.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.marketing_events.read",
        "crm.objects.appointments.read",
        "crm.schemas.appointments.read",
        "crm.objects.subscriptions.read",
        "crm.schemas.deals.read",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.schemas.line_items.read",
        "crm.objects.goals.read",
        "media_bridge.read",
        "crm.objects.products.write",
        "crm.schemas.listings.read",
        "crm.objects.contacts.write",
        "crm.objects.goals.write",
        "crm.schemas.custom.read",
        "crm.objects.marketing_events.write",
        "crm.objects.leads.read",
        "crm.schemas.orders.read",
        "crm.objects.feedback_submissions.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.schemas.quotes.read",
        "tickets",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.schemas.commercepayments.read",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.leads.write",
        "crm.objects.commercepayments.write",
        "crm.objects.orders.read",
        "crm.schemas.carts.read",
        "tickets.sensitive.v2",
        "crm.schemas.invoices.read",
        "crm.objects.contacts.sensitive.write.v2",
        "e-commerce",
        "crm.objects.owners.read",
        "crm.objects.quotes.write",
        "crm.objects.line_items.write",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.schemas.services.read",
        "crm.objects.courses.write",
        "crm.schemas.contacts.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.services.write",
        "crm.objects.courses.read",
        "crm.schemas.courses.read",
        "crm.objects.custom.read",
        "crm.schemas.subscriptions.read",
        "crm.schemas.companies.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.companies.write",
        "crm.objects.quotes.read",
        "crm.objects.companies.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.invoices.read",
        "crm.objects.listings.write",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/properties/{objectType}/groups",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_property_group",
        "description": {
          "tagline": "Create a new property group in HubSpot CRM.",
          "detailed": "This tool creates and returns a new property group for a specified object type in HubSpot CRM. Use it when you need to organize CRM properties into groups."
        },
        "return_annotation": "A copy of the newly created property group.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "crm_object_type",
              "entity_type"
            ],
            "description": "Specifies the CRM object type for the property group (e.g., contacts, companies).",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "internal_property_group_name",
            "alternative_names": [
              "property_group_identifier",
              "property_group_internal_name"
            ],
            "description": "The unique name used internally to reference the property group via the API.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "property_group_label",
            "alternative_names": [
              "group_label",
              "label_for_group"
            ],
            "description": "A human-readable label for the property group, displayed in HubSpot.",
            "endpoint_argument_name": "label"
          },
          {
            "name": "property_group_display_order",
            "alternative_names": [
              "group_display_order",
              "display_order_value"
            ],
            "description": "Defines the display order of the property group, with lowest positive integers displayed first. Use -1 to display after positive values.",
            "endpoint_argument_name": "displayOrder"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/properties/{objectType}/groups",
      "tags": [
        "Groups"
      ],
      "summary": "Create a property group",
      "description": "Create and return a copy of a new property group.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.carts.write",
        "crm.schemas.invoices.write",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.write",
        "crm.schemas.services.write",
        "e-commerce",
        "crm.objects.orders.write",
        "crm.schemas.deals.write",
        "tickets.highly_sensitive.v2",
        "tickets",
        "crm.objects.carts.write",
        "crm.schemas.courses.write",
        "crm.schemas.custom.write",
        "crm.schemas.commercepayments.write",
        "crm.objects.users.write",
        "crm.schemas.companies.write",
        "crm.schemas.orders.write",
        "crm.schemas.appointments.write",
        "crm.pipelines.orders.write",
        "crm.schemas.subscriptions.write",
        "crm.schemas.listings.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The internal property group name, which must be used when referencing the property group via the API."
            },
            "description": "The internal property group name, which must be used when referencing the property group via the API.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "The internal property group name, which must be used when referencing the property group via the API."
            },
            "schema_required": true
          },
          {
            "name": "displayOrder",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values."
            },
            "description": "Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer",
              "description": "Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "label",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A human-readable label that will be shown in HubSpot."
            },
            "description": "A human-readable label that will be shown in HubSpot.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "A human-readable label that will be shown in HubSpot."
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"label\",\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The internal property group name, which must be used when referencing the property group via the API.\"\n          },\n          \"displayOrder\": {\n            \"type\": \"integer\",\n            \"description\": \"Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.\",\n            \"format\": \"int32\"\n          },\n          \"label\": {\n            \"type\": \"string\",\n            \"description\": \"A human-readable label that will be shown in HubSpot.\"\n          }\n        },\n        \"example\": {\n          \"displayOrder\": -1,\n          \"label\": \"My Property Group\",\n          \"name\": \"mypropertygroup\"\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "get-/crm/v3/property-validations/{objectTypeId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_property_validation_rules",
        "description": {
          "tagline": "Retrieve validation rules for properties of a given object in HubSpot CRM.",
          "detailed": "Use this tool to get detailed validation rules for all properties associated with a specified object type ID in HubSpot CRM. This can be helpful for understanding constraints and rules applied to object properties."
        },
        "return_annotation": "Validation rules for properties of the specified object.",
        "arguments": [
          {
            "name": "object_type_id",
            "alternative_names": [
              "object_id",
              "entity_type_id"
            ],
            "description": "The unique identifier for the object type in HubSpot CRM whose property validation rules you want to retrieve. This is a string value.",
            "endpoint_argument_name": "objectTypeId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/property-validations/{objectTypeId}",
      "tags": [
        "Public_Property_Validations"
      ],
      "summary": "Read all property validation rules for an object",
      "description": "Read all properties with validation rules for a given object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.subscriptions.write",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.pipelines.orders.read",
        "automation",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.appointments.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.marketing_events.read",
        "crm.objects.appointments.read",
        "crm.schemas.appointments.read",
        "crm.objects.subscriptions.read",
        "crm.schemas.deals.read",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.schemas.line_items.read",
        "crm.objects.goals.read",
        "media_bridge.read",
        "crm.objects.products.write",
        "crm.schemas.listings.read",
        "crm.objects.contacts.write",
        "crm.objects.goals.write",
        "crm.schemas.custom.read",
        "crm.objects.marketing_events.write",
        "crm.objects.leads.read",
        "crm.schemas.orders.read",
        "crm.objects.feedback_submissions.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.schemas.quotes.read",
        "tickets",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.schemas.commercepayments.read",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.leads.write",
        "crm.objects.commercepayments.write",
        "crm.objects.orders.read",
        "crm.schemas.carts.read",
        "tickets.sensitive.v2",
        "crm.schemas.invoices.read",
        "crm.objects.contacts.sensitive.write.v2",
        "e-commerce",
        "crm.objects.owners.read",
        "crm.objects.quotes.write",
        "crm.objects.line_items.write",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.schemas.services.read",
        "crm.objects.courses.write",
        "crm.schemas.contacts.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.services.write",
        "crm.objects.courses.read",
        "crm.schemas.courses.read",
        "crm.objects.custom.read",
        "crm.schemas.subscriptions.read",
        "crm.schemas.companies.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.companies.write",
        "crm.objects.quotes.read",
        "crm.objects.companies.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.invoices.read",
        "crm.objects.listings.write",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectTypeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/property-validations/{objectTypeId}/{propertyName}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "fetch_property_validation",
        "description": {
          "tagline": "Retrieve validation rules for a specific property in HubSpot CRM.",
          "detailed": "This tool is used to read the validation rules of a property identified by {propertyName} within a specified object type in HubSpot CRM. It helps to understand the constraints and validations applied to a property."
        },
        "return_annotation": "Validation rules for the specified property.",
        "arguments": [
          {
            "name": "object_type_id",
            "alternative_names": [
              "entity_type_id",
              "crm_object_id"
            ],
            "description": "The unique identifier for the object type in HubSpot CRM, such as \"contacts\" or \"deals\".",
            "endpoint_argument_name": "objectTypeId"
          },
          {
            "name": "property_name",
            "alternative_names": [
              "property_identifier",
              "property_key"
            ],
            "description": "The name of the property whose validation rules you want to retrieve in HubSpot CRM. It must match exactly to identify the property correctly.",
            "endpoint_argument_name": "propertyName"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/property-validations/{objectTypeId}/{propertyName}",
      "tags": [
        "Public_Property_Validations"
      ],
      "summary": "Read validation rules for a property",
      "description": "Read a property's validation rules identified by {propertyName}.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.carts.read",
        "crm.objects.deals.read",
        "crm.objects.custom.write",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.subscriptions.write",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.pipelines.orders.read",
        "automation",
        "crm.objects.companies.highly_sensitive.write.v2",
        "crm.objects.appointments.write",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.marketing_events.read",
        "crm.objects.appointments.read",
        "crm.schemas.appointments.read",
        "crm.objects.subscriptions.read",
        "crm.schemas.deals.read",
        "crm.objects.invoices.write",
        "crm.objects.line_items.read",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.schemas.line_items.read",
        "crm.objects.goals.read",
        "media_bridge.read",
        "crm.objects.products.write",
        "crm.schemas.listings.read",
        "crm.objects.contacts.write",
        "crm.objects.goals.write",
        "crm.schemas.custom.read",
        "crm.objects.marketing_events.write",
        "crm.objects.leads.read",
        "crm.schemas.orders.read",
        "crm.objects.feedback_submissions.read",
        "crm.objects.custom.sensitive.write.v2",
        "crm.schemas.quotes.read",
        "tickets",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.schemas.commercepayments.read",
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.objects.users.read",
        "crm.objects.contacts.read",
        "crm.objects.deals.write",
        "crm.objects.services.read",
        "crm.objects.custom.highly_sensitive.write.v2",
        "crm.objects.listings.read",
        "crm.objects.leads.write",
        "crm.objects.commercepayments.write",
        "crm.objects.orders.read",
        "crm.schemas.carts.read",
        "tickets.sensitive.v2",
        "crm.schemas.invoices.read",
        "crm.objects.contacts.sensitive.write.v2",
        "e-commerce",
        "crm.objects.owners.read",
        "crm.objects.quotes.write",
        "crm.objects.line_items.write",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.schemas.services.read",
        "crm.objects.courses.write",
        "crm.schemas.contacts.read",
        "crm.objects.appointments.sensitive.write.v2",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.services.write",
        "crm.objects.courses.read",
        "crm.schemas.courses.read",
        "crm.objects.custom.read",
        "crm.schemas.subscriptions.read",
        "crm.schemas.companies.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.companies.write",
        "crm.objects.quotes.read",
        "crm.objects.companies.read",
        "crm.objects.custom.sensitive.read.v2",
        "crm.objects.invoices.read",
        "crm.objects.listings.write",
        "crm.objects.appointments.sensitive.read.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectTypeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "propertyName",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/quotes/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_quotes_batch",
        "description": {
          "tagline": "Archive a batch of quotes in HubSpot CRM.",
          "detailed": "Use this tool to archive multiple quotes in HubSpot CRM by providing their IDs. It should be called when there's a need to bulk archive quotes to manage CRM records efficiently."
        },
        "return_annotation": "Confirmation of batch quotes archiving.",
        "arguments": [
          {
            "name": "quote_ids_batch",
            "alternative_names": [
              "batch_of_quote_ids",
              "quotes_id_list"
            ],
            "description": "A JSON array of objects, each containing an `id` field representing the quote ID to be archived. Use this to specify multiple quotes you want to archive in a single request.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/quotes/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of quotes by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.quotes.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/quotes_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_quotes_page",
        "description": {
          "tagline": "Retrieve a page of quotes with specified properties.",
          "detailed": "Use this tool to read a page of quotes from HubSpot CRM. You can control the details returned by specifying properties through query parameters."
        },
        "return_annotation": "A page of quotes and their properties.",
        "arguments": [
          {
            "name": "results_limit",
            "alternative_names": [
              "max_results_per_page",
              "page_size"
            ],
            "description": "The maximum number of quote results to display per page. Accepts an integer value.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "cursor_token"
            ],
            "description": "The token to identify the last read resource for pagination. Use it to get the next page of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "quote_properties_to_return",
            "alternative_names": [
              "requested_quote_properties",
              "quote_fields_to_include"
            ],
            "description": "List the properties to retrieve for each quote. Only present properties will be returned.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_with_past_values"
            ],
            "description": "List of properties to return with their history. Reduces max quotes per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associated_ids_for_object_types",
            "alternative_names": [
              "get_associated_ids_for_objects",
              "fetch_associated_object_ids"
            ],
            "description": "A list of object types to retrieve associated IDs for. Non-existing associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "archived_only_results",
              "only_archived_results"
            ],
            "description": "Set to true to return only archived results. False to include active results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/quotes",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of quotes. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.quotes.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of quotes that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of quotes that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/quotes_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_quote",
        "description": {
          "tagline": "Create a new quote in HubSpot CRM.",
          "detailed": "Use this tool to create a new quote in HubSpot CRM with specified properties. It returns the created quote, including its ID."
        },
        "return_annotation": "Returns a copy of the created quote with its ID.",
        "arguments": [
          {
            "name": "quote_details",
            "alternative_names": [
              "quote_properties",
              "quote_data"
            ],
            "description": "A JSON object containing details for the new quote, including properties and associations.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/quotes",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a quote with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard quotes is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.quotes.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/quotes/{quoteId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_quote_by_id",
        "description": {
          "tagline": "Retrieve details of a quote by its ID.",
          "detailed": "Fetches a quote from HubSpot CRM using its ID or a unique property value. Allows control over returned properties."
        },
        "return_annotation": "Details of the specified quote.",
        "arguments": [
          {
            "name": "quote_id",
            "alternative_names": [
              "quote_identifier",
              "quote_reference_id"
            ],
            "description": "The ID or unique property value of the quote to be retrieved. This identifies the specific quote in HubSpot CRM.",
            "endpoint_argument_name": "quoteId"
          },
          {
            "name": "included_properties",
            "alternative_names": [
              "requested_properties",
              "desired_properties"
            ],
            "description": "List of properties to be returned in the response. If a property is not present, it will be ignored. Input should be an array of strings.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_history"
            ],
            "description": "Comma-separated list of properties to return with their value history. Ignored if not present.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associated_object_types",
            "alternative_names": [
              "get_linked_object_types",
              "fetch_connected_object_types"
            ],
            "description": "List of object types to retrieve associated IDs for; ignored if non-existent.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "property_name",
              "unique_id_property"
            ],
            "description": "The property name with unique values for the quote object, used in the retrieval process.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "only_return_archived",
            "alternative_names": [
              "archive_filter",
              "show_archived_only"
            ],
            "description": "Set to true to only return results that have been archived for the quote.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/quotes/{quoteId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{quoteId}`. `{quoteId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.quotes.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "quoteId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/quotes/{quoteId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_quote",
        "description": {
          "tagline": "Archive a quote by moving it to the recycling bin.",
          "detailed": "This tool archives a quote in HubSpot CRM, identified by its `quoteId`, by moving it to the recycling bin. Use this tool when you need to delete a quote temporarily."
        },
        "return_annotation": "Confirmation of the quote being archived.",
        "arguments": [
          {
            "name": "quote_identifier",
            "alternative_names": [
              "quote_id",
              "quote_reference"
            ],
            "description": "The unique identifier for the quote to be archived in HubSpot CRM.",
            "endpoint_argument_name": "quoteId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/quotes/{quoteId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{quoteId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.quotes.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "quoteId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/quotes/{quoteId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_quote_information",
        "description": {
          "tagline": "Update a quote's details in HubSpot CRM.",
          "detailed": "Use this tool to perform a partial update of a quote in HubSpot CRM identified by `quoteId` or a unique property value. It allows overwriting specific property values, but read-only or invalid properties will cause an error. Properties can be cleared by passing an empty string."
        },
        "return_annotation": "Confirmation of the quote update operation.",
        "arguments": [
          {
            "name": "quote_identifier",
            "alternative_names": [
              "quote_id",
              "hubspot_quote_id"
            ],
            "description": "The identifier of the quote to be updated. This can be the internal ID or a unique property value specified by `idProperty`.",
            "endpoint_argument_name": "quoteId"
          },
          {
            "name": "quote_properties_update",
            "alternative_names": [
              "quote_properties_modification",
              "quote_property_edits"
            ],
            "description": "JSON object of key-value pairs to update specific properties of a quote. Clears properties by passing an empty string.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_with_unique_values"
            ],
            "description": "The name of a property with unique values for identifying the quote object. Used instead of `quoteId`.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/quotes/{quoteId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{quoteId}`or optionally a unique property value as specified by the `idProperty` query param. `{quoteId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.quotes.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "quoteId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/quotes/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_quote_batch",
        "description": {
          "tagline": "Update a batch of quotes using internal ID or property values.",
          "detailed": "Use this tool to update multiple quotes at once in the CRM. It should be called when you need to modify details of several quotes by their internal IDs or unique property values."
        },
        "return_annotation": "Updates confirmation for batch of quotes.",
        "arguments": [
          {
            "name": "quote_update_requests",
            "alternative_names": [
              "quotes_update_payloads",
              "batch_quote_updates"
            ],
            "description": "A JSON array of quote update objects, each containing `id`, `properties`, `idProperty`, and an optional `objectWriteTraceId`. Each object specifies which quote to update and the new values.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/quotes/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of quotes by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.quotes.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/quotes/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_or_update_quotes",
        "description": {
          "tagline": "Create or update quote records in HubSpot CRM.",
          "detailed": "This tool is used to create or update quote records in HubSpot CRM based on a unique property value specified by `idProperty`. Use it when you need to ensure quotes are updated or added to the CRM system efficiently."
        },
        "return_annotation": "Confirms creation or update of quotes in CRM.",
        "arguments": [
          {
            "name": "quote_records_list",
            "alternative_names": [
              "quotes_batch_data",
              "quote_records_payload"
            ],
            "description": "A list of quote objects with unique identifiers and properties for batch creation or update. Each object must include `idProperty`, `objectWriteTraceId`, `id`, and `properties`.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/quotes/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of quotes by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.quotes.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/quotes/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_of_quotes",
        "description": {
          "tagline": "Creates a batch of quotes in HubSpot CRM.",
          "detailed": "This tool is used to create multiple quotes at once using HubSpot CRM's batch creation endpoint. Ideal for automating the quote generation process for multiple clients or deals."
        },
        "return_annotation": "Detail about the batch of created quotes.",
        "arguments": [
          {
            "name": "quotes_batch_data",
            "alternative_names": [
              "quotes_creation_payload",
              "bulk_quotes_input"
            ],
            "description": "A structured JSON object containing an array of quote details to create. Each quote entry should include associations, objectWriteTraceId, and custom properties.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/quotes/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of quotes",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.quotes.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/quotes/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_quotes_in_hubspot",
        "description": {
          "tagline": "Search for quotes in HubSpot CRM.",
          "detailed": "Use this tool to perform a search for quotes stored in HubSpot CRM. Useful for retrieving information about sales quotes based on specific criteria or parameters."
        },
        "return_annotation": "Results of the HubSpot quotes search query.",
        "arguments": [
          {
            "name": "search_criteria",
            "alternative_names": [
              "search_parameters",
              "quote_query_parameters"
            ],
            "description": "JSON object containing the search criteria for quotes. Includes query string, limit, paging, sorting options, properties to include, and filter groups.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/quotes/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.quotes.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/quotes/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_quotes_batch",
        "description": {
          "tagline": "Retrieve multiple quotes by ID or custom property.",
          "detailed": "This tool retrieves multiple quote records by their IDs or a custom unique value property. It should be called when you need to access specific quotes in batch format from the HubSpot CRM."
        },
        "return_annotation": "Batch of quotes retrieved by IDs or custom properties.",
        "arguments": [
          {
            "name": "quote_retrieval_criteria",
            "alternative_names": [
              "retrieve_criteria",
              "quote_batch_retrieval_params"
            ],
            "description": "JSON object specifying properties to retrieve quotes by ID or custom property. Use 'idProperty' for custom property and 'inputs' for IDs.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "archived_results_only",
            "alternative_names": [
              "only_archived_quotes",
              "return_archived_results"
            ],
            "description": "Specify `true` to return only archived results; `false` to include non-archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/quotes/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of quotes by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.quotes.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm-object-schemas/v3/schemas_getAll",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_hubspot_crm_object_schemas",
        "description": {
          "tagline": "Retrieve HubSpot CRM object schemas.",
          "detailed": "Call this tool to fetch all object schemas from the HubSpot CRM, which can help understand data structure within the CRM."
        },
        "return_annotation": "List of HubSpot CRM object schemas.",
        "arguments": [
          {
            "name": "return_archived_only",
            "alternative_names": [
              "include_archived_results",
              "fetch_archived_items"
            ],
            "description": "Set to True to return only results that have been archived.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm-object-schemas/v3/schemas",
      "tags": [
        "Core"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.custom.sensitive.read.v2",
        "crm.schemas.custom.read",
        "crm.objects.custom.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm-object-schemas/v3/schemas_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_crm_object_schema",
        "description": {
          "tagline": "Create a new CRM object schema in HubSpot.",
          "detailed": "Use this tool to create a new object schema in HubSpot's CRM. This is useful when you need to define a new structure for CRM objects tailored to specific business needs."
        },
        "return_annotation": "Confirmation of CRM object schema creation.",
        "arguments": [
          {
            "name": "object_schema_definition",
            "alternative_names": [
              "schema_definition",
              "crm_schema_definition"
            ],
            "description": "JSON object defining the CRM object schema, including properties, associations, and display settings.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm-object-schemas/v3/schemas",
      "tags": [
        "Core"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.custom.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "secondaryDisplayProperties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type."
                },
                "requiredProperties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The names of properties that should be **required** when creating an object of this type."
                },
                "searchableProperties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Names of properties that will be indexed for this object type in by HubSpot's product search."
                },
                "primaryDisplayProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type."
                },
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A unique name for this object. For internal use only."
                },
                "description": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "associatedObjects": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Associations defined for this object type."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "hidden": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "optionSortStrategy": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "DISPLAY_ORDER",
                        "ALPHABETICAL"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": "Controls how the property options will be sorted in the HubSpot UI."
                    },
                    "displayOrder": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The order that this property should be displayed in the HubSpot UI relative to other properties for this object type. Properties are displayed in order starting with the lowest positive integer value. A value of -1 will cause the property to be displayed **after** any positive values."
                    },
                    "description": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A description of the property that will be shown as help text in HubSpot."
                    },
                    "showCurrencySymbol": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Whether the property will display the currency symbol in the HubSpot UI."
                    },
                    "label": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A human-readable property label that will be shown in HubSpot."
                    },
                    "type": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "string",
                        "number",
                        "date",
                        "datetime",
                        "enumeration",
                        "bool"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": "The data type of the property."
                    },
                    "formField": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Whether the property can be used in a HubSpot form."
                    },
                    "groupName": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of the group this property belongs to."
                    },
                    "referencedObjectType": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Defines the options this property will return, e.g. OWNER would return name of users on the portal."
                    },
                    "textDisplayHint": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "unformatted_single_line",
                        "multi_line",
                        "email",
                        "phone_number",
                        "domain_name",
                        "ip_address",
                        "physical_address",
                        "postal_code"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": "Controls how text properties are formatted in the HubSpot UI"
                    },
                    "name": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The internal property name, which must be used when referencing the property from the API."
                    },
                    "options": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "hidden": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties."
                        },
                        "displayOrder": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values."
                        },
                        "description": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "A description of the option."
                        },
                        "label": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "A human-readable option label that will be shown in HubSpot."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The internal value of the option, which must be used when setting the property value through the API."
                        }
                      },
                      "description": "A list of available options for the property. This field is only required for enumerated properties."
                    },
                    "searchableInGlobalSearch": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Allow users to search for information entered to this field (limited to 3 properties)"
                    },
                    "numberDisplayHint": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "unformatted",
                        "formatted",
                        "currency",
                        "percentage",
                        "duration",
                        "probability"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": "Controls how numeric properties are formatted in the HubSpot UI"
                    },
                    "hasUniqueValue": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Whether or not the property's value must be unique. Once set, this can't be changed."
                    },
                    "fieldType": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Controls how the property appears in HubSpot."
                    }
                  },
                  "description": "Properties defined for this object type."
                },
                "labels": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "plural": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The word for multiple objects. (There\u2019s no way to change this later.)"
                    },
                    "singular": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The word for one object. (There\u2019s no way to change this later.)"
                    }
                  },
                  "inner_properties": null,
                  "description": "Singular and plural labels for the object. Used in CRM display."
                }
              },
              "inner_properties": null,
              "description": "Object schema definition, including properties and associations."
            },
            "description": "Object schema definition, including properties and associations.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Defines a new object type, its properties, and associations.",
              "properties": {
                "secondaryDisplayProperties": {
                  "type": "array",
                  "description": "The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.",
                  "items": {
                    "type": "string"
                  }
                },
                "requiredProperties": {
                  "type": "array",
                  "description": "The names of properties that should be **required** when creating an object of this type.",
                  "items": {
                    "type": "string"
                  }
                },
                "searchableProperties": {
                  "type": "array",
                  "description": "Names of properties that will be indexed for this object type in by HubSpot's product search.",
                  "items": {
                    "type": "string"
                  }
                },
                "primaryDisplayProperty": {
                  "type": "string",
                  "description": "The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type."
                },
                "name": {
                  "type": "string",
                  "description": "A unique name for this object. For internal use only."
                },
                "description": {
                  "type": "string"
                },
                "associatedObjects": {
                  "type": "array",
                  "description": "Associations defined for this object type.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Properties defined for this object type.",
                  "items": {
                    "type": "object",
                    "description": "Defines a property to create.",
                    "properties": {
                      "hidden": {
                        "type": "boolean"
                      },
                      "optionSortStrategy": {
                        "type": "string",
                        "description": "Controls how the property options will be sorted in the HubSpot UI.",
                        "enum": [
                          "DISPLAY_ORDER",
                          "ALPHABETICAL"
                        ]
                      },
                      "displayOrder": {
                        "type": "integer",
                        "description": "The order that this property should be displayed in the HubSpot UI relative to other properties for this object type. Properties are displayed in order starting with the lowest positive integer value. A value of -1 will cause the property to be displayed **after** any positive values.",
                        "format": "int32"
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the property that will be shown as help text in HubSpot."
                      },
                      "showCurrencySymbol": {
                        "type": "boolean",
                        "description": "Whether the property will display the currency symbol in the HubSpot UI."
                      },
                      "label": {
                        "type": "string",
                        "description": "A human-readable property label that will be shown in HubSpot."
                      },
                      "type": {
                        "type": "string",
                        "description": "The data type of the property.",
                        "enum": [
                          "string",
                          "number",
                          "date",
                          "datetime",
                          "enumeration",
                          "bool"
                        ]
                      },
                      "formField": {
                        "type": "boolean",
                        "description": "Whether the property can be used in a HubSpot form."
                      },
                      "groupName": {
                        "type": "string",
                        "description": "The name of the group this property belongs to."
                      },
                      "referencedObjectType": {
                        "type": "string",
                        "description": "Defines the options this property will return, e.g. OWNER would return name of users on the portal."
                      },
                      "textDisplayHint": {
                        "type": "string",
                        "description": "Controls how text properties are formatted in the HubSpot UI",
                        "enum": [
                          "unformatted_single_line",
                          "multi_line",
                          "email",
                          "phone_number",
                          "domain_name",
                          "ip_address",
                          "physical_address",
                          "postal_code"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "The internal property name, which must be used when referencing the property from the API."
                      },
                      "options": {
                        "type": "array",
                        "description": "A list of available options for the property. This field is only required for enumerated properties.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "hidden": {
                              "type": "boolean",
                              "description": "If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties."
                            },
                            "displayOrder": {
                              "type": "integer",
                              "description": "Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.",
                              "format": "int32"
                            },
                            "description": {
                              "type": "string",
                              "description": "A description of the option."
                            },
                            "label": {
                              "type": "string",
                              "description": "A human-readable option label that will be shown in HubSpot."
                            },
                            "value": {
                              "type": "string",
                              "description": "The internal value of the option, which must be used when setting the property value through the API."
                            }
                          },
                          "required": [
                            "hidden",
                            "label",
                            "value"
                          ]
                        }
                      },
                      "searchableInGlobalSearch": {
                        "type": "boolean",
                        "description": "Allow users to search for information entered to this field (limited to 3 properties)"
                      },
                      "numberDisplayHint": {
                        "type": "string",
                        "description": "Controls how numeric properties are formatted in the HubSpot UI",
                        "enum": [
                          "unformatted",
                          "formatted",
                          "currency",
                          "percentage",
                          "duration",
                          "probability"
                        ]
                      },
                      "hasUniqueValue": {
                        "type": "boolean",
                        "description": "Whether or not the property's value must be unique. Once set, this can't be changed."
                      },
                      "fieldType": {
                        "type": "string",
                        "description": "Controls how the property appears in HubSpot."
                      }
                    },
                    "required": [
                      "fieldType",
                      "label",
                      "name",
                      "type"
                    ]
                  }
                },
                "labels": {
                  "type": "object",
                  "description": "Singular and plural labels for the object. Used in CRM display.",
                  "properties": {
                    "plural": {
                      "type": "string",
                      "description": "The word for multiple objects. (There\u2019s no way to change this later.)"
                    },
                    "singular": {
                      "type": "string",
                      "description": "The word for one object. (There\u2019s no way to change this later.)"
                    }
                  }
                }
              },
              "required": [
                "associatedObjects",
                "labels",
                "name",
                "properties",
                "requiredProperties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"Object schema definition, including properties and associations.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"associatedObjects\",\n          \"labels\",\n          \"name\",\n          \"properties\",\n          \"requiredProperties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"secondaryDisplayProperties\": {\n            \"type\": \"array\",\n            \"description\": \"The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"requiredProperties\": {\n            \"type\": \"array\",\n            \"description\": \"The names of properties that should be **required** when creating an object of this type.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"searchableProperties\": {\n            \"type\": \"array\",\n            \"description\": \"Names of properties that will be indexed for this object type in by HubSpot's product search.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"primaryDisplayProperty\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type.\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"A unique name for this object. For internal use only.\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"associatedObjects\": {\n            \"type\": \"array\",\n            \"description\": \"Associations defined for this object type.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Properties defined for this object type.\",\n            \"items\": {\n              \"required\": [\n                \"fieldType\",\n                \"label\",\n                \"name\",\n                \"type\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"hidden\": {\n                  \"type\": \"boolean\"\n                },\n                \"optionSortStrategy\": {\n                  \"type\": \"string\",\n                  \"description\": \"Controls how the property options will be sorted in the HubSpot UI.\",\n                  \"enum\": [\n                    \"DISPLAY_ORDER\",\n                    \"ALPHABETICAL\"\n                  ]\n                },\n                \"displayOrder\": {\n                  \"type\": \"integer\",\n                  \"description\": \"The order that this property should be displayed in the HubSpot UI relative to other properties for this object type. Properties are displayed in order starting with the lowest positive integer value. A value of -1 will cause the property to be displayed **after** any positive values.\",\n                  \"format\": \"int32\"\n                },\n                \"description\": {\n                  \"type\": \"string\",\n                  \"description\": \"A description of the property that will be shown as help text in HubSpot.\"\n                },\n                \"showCurrencySymbol\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"Whether the property will display the currency symbol in the HubSpot UI.\"\n                },\n                \"label\": {\n                  \"type\": \"string\",\n                  \"description\": \"A human-readable property label that will be shown in HubSpot.\"\n                },\n                \"type\": {\n                  \"type\": \"string\",\n                  \"description\": \"The data type of the property.\",\n                  \"enum\": [\n                    \"string\",\n                    \"number\",\n                    \"date\",\n                    \"datetime\",\n                    \"enumeration\",\n                    \"bool\"\n                  ]\n                },\n                \"formField\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"Whether the property can be used in a HubSpot form.\"\n                },\n                \"groupName\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of the group this property belongs to.\"\n                },\n                \"referencedObjectType\": {\n                  \"type\": \"string\",\n                  \"description\": \"Defines the options this property will return, e.g. OWNER would return name of users on the portal.\"\n                },\n                \"textDisplayHint\": {\n                  \"type\": \"string\",\n                  \"description\": \"Controls how text properties are formatted in the HubSpot UI\",\n                  \"enum\": [\n                    \"unformatted_single_line\",\n                    \"multi_line\",\n                    \"email\",\n                    \"phone_number\",\n                    \"domain_name\",\n                    \"ip_address\",\n                    \"physical_address\",\n                    \"postal_code\"\n                  ]\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"description\": \"The internal property name, which must be used when referencing the property from the API.\"\n                },\n                \"options\": {\n                  \"type\": \"array\",\n                  \"description\": \"A list of available options for the property. This field is only required for enumerated properties.\",\n                  \"items\": {\n                    \"required\": [\n                      \"hidden\",\n                      \"label\",\n                      \"value\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"hidden\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"If true, the option will not be shown in forms, bots, or meeting scheduling pages. Supported for contact, company, ticket, and custom object enumeration properties.\"\n                      },\n                      \"displayOrder\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.\",\n                        \"format\": \"int32\"\n                      },\n                      \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"A description of the option.\"\n                      },\n                      \"label\": {\n                        \"type\": \"string\",\n                        \"description\": \"A human-readable option label that will be shown in HubSpot.\"\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The internal value of the option, which must be used when setting the property value through the API.\"\n                      }\n                    },\n                    \"example\": {\n                      \"description\": \"Choice number one\",\n                      \"displayOrder\": 1,\n                      \"hidden\": false,\n                      \"label\": \"Option A\",\n                      \"value\": \"A\"\n                    }\n                  }\n                },\n                \"searchableInGlobalSearch\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"Allow users to search for information entered to this field (limited to 3 properties)\"\n                },\n                \"numberDisplayHint\": {\n                  \"type\": \"string\",\n                  \"description\": \"Controls how numeric properties are formatted in the HubSpot UI\",\n                  \"enum\": [\n                    \"unformatted\",\n                    \"formatted\",\n                    \"currency\",\n                    \"percentage\",\n                    \"duration\",\n                    \"probability\"\n                  ]\n                },\n                \"hasUniqueValue\": {\n                  \"type\": \"boolean\",\n                  \"description\": \"Whether or not the property's value must be unique. Once set, this can't be changed.\"\n                },\n                \"fieldType\": {\n                  \"type\": \"string\",\n                  \"description\": \"Controls how the property appears in HubSpot.\"\n                }\n              },\n              \"description\": \"Defines a property to create.\",\n              \"example\": {\n                \"label\": \"My object property\",\n                \"type\": \"enumeration\",\n                \"fieldType\": \"select\",\n                \"groupName\": \"my_object_information\",\n                \"displayOrder\": 2,\n                \"hasUniqueValue\": false,\n                \"options\": [\n                  {\n                    \"label\": \"Option A\",\n                    \"description\": \"Choice number one\",\n                    \"value\": \"A\",\n                    \"displayOrder\": 1\n                  },\n                  {\n                    \"label\": \"Option B\",\n                    \"description\": \"Choice number two\",\n                    \"value\": \"B\",\n                    \"displayOrder\": 2\n                  }\n                ]\n              }\n            }\n          },\n          \"labels\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"plural\": {\n                \"type\": \"string\",\n                \"description\": \"The word for multiple objects. (There\\u2019s no way to change this later.)\"\n              },\n              \"singular\": {\n                \"type\": \"string\",\n                \"description\": \"The word for one object. (There\\u2019s no way to change this later.)\"\n              }\n            },\n            \"description\": \"Singular and plural labels for the object. Used in CRM display.\",\n            \"example\": {\n              \"singular\": \"My object\",\n              \"plural\": \"My objects\"\n            }\n          }\n        },\n        \"description\": \"Defines a new object type, its properties, and associations.\",\n        \"example\": {\n          \"name\": \"my_object\",\n          \"labels\": {\n            \"singular\": \"My object\",\n            \"plural\": \"My objects\"\n          },\n          \"primaryDisplayProperty\": \"my_object_property\",\n          \"requiredProperties\": [\n            \"my_object_property\"\n          ],\n          \"properties\": [\n            {\n              \"name\": \"my_object_property\",\n              \"label\": \"My object property\",\n              \"isPrimaryDisplayLabel\": true\n            }\n          ],\n          \"associatedObjects\": [\n            \"CONTACT\"\n          ],\n          \"metaType\": \"PORTAL_SPECIFIC\"\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm-object-schemas/v3/schemas/{objectType}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_crm_object_schema",
        "description": {
          "tagline": "Retrieve a CRM object schema by its type.",
          "detailed": "Use this tool to get detailed information about a specific CRM object schema by providing the object type. This helps in understanding the structure and properties of the CRM object within HubSpot."
        },
        "return_annotation": "Information about the specified CRM object schema.",
        "arguments": [
          {
            "name": "object_type",
            "alternative_names": [
              "schema_id",
              "type_identifier"
            ],
            "description": "The fully qualified name or object type ID of the CRM schema to retrieve.",
            "endpoint_argument_name": "objectType"
          }
        ]
      },
      "method": "GET",
      "path": "/crm-object-schemas/v3/schemas/{objectType}",
      "tags": [
        "Core"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.custom.highly_sensitive.read.v2",
        "crm.objects.custom.sensitive.read.v2",
        "crm.schemas.custom.read",
        "crm.objects.custom.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Fully qualified name or object type ID of your schema."
            },
            "description": "Fully qualified name or object type ID of your schema.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm-object-schemas/v3/schemas/{objectType}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_crm_object_schema",
        "description": {
          "tagline": "Delete a CRM object schema in HubSpot.",
          "detailed": "This tool deletes a specified CRM object schema in HubSpot. Use it when you need to remove an existing schema, ensuring it's no longer accessible or in use."
        },
        "return_annotation": "Confirmation of CRM object schema deletion.",
        "arguments": [
          {
            "name": "object_type_identifier",
            "alternative_names": [
              "schema_type_id",
              "object_type_name"
            ],
            "description": "The fully qualified name or object type ID of the schema to delete.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "show_only_archived",
              "include_archived_only"
            ],
            "description": "Set to True to return only archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm-object-schemas/v3/schemas/{objectType}",
      "tags": [
        "Core"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.custom.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Fully qualified name or object type ID of your schema."
            },
            "description": "Fully qualified name or object type ID of your schema.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm-object-schemas/v3/schemas/{objectType}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_crm_object_schema",
        "description": {
          "tagline": "Update a CRM object's schema in HubSpot.",
          "detailed": "This tool updates the schema of a specified CRM object type in HubSpot. Call this tool when you need to modify the structure or attributes of an existing CRM object schema."
        },
        "return_annotation": "Updates the CRM object schema and returns confirmation details.",
        "arguments": [
          {
            "name": "object_type_identifier",
            "alternative_names": [
              "schema_object_type",
              "crm_object_type_id"
            ],
            "description": "Fully qualified name or object type ID of your CRM schema for updates.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "secondary_display_properties",
            "alternative_names": [
              "secondary_properties_names",
              "additional_display_properties"
            ],
            "description": "Names of secondary properties displayed on the HubSpot record page for this object type.",
            "endpoint_argument_name": "secondaryDisplayProperties"
          },
          {
            "name": "required_properties",
            "alternative_names": [
              "mandatory_properties",
              "compulsory_properties"
            ],
            "description": "List of property names that must be provided when creating an object of this type in HubSpot.",
            "endpoint_argument_name": "requiredProperties"
          },
          {
            "name": "searchable_properties",
            "alternative_names": [
              "indexable_properties",
              "search_index_properties"
            ],
            "description": "List of property names to be indexed for HubSpot's product search, enhancing searchability of the CRM object type.",
            "endpoint_argument_name": "searchableProperties"
          },
          {
            "name": "primary_display_property",
            "alternative_names": [
              "primary_property_name",
              "main_display_property"
            ],
            "description": "The primary property's name for this object, displayed prominently on the HubSpot record page.",
            "endpoint_argument_name": "primaryDisplayProperty"
          },
          {
            "name": "object_description",
            "alternative_names": [
              "schema_description",
              "entity_description"
            ],
            "description": "A description for the CRM object schema, providing details about its purpose or usage in HubSpot.",
            "endpoint_argument_name": "description"
          },
          {
            "name": "plural_labels",
            "alternative_names": [
              "multiple_object_words",
              "object_plural_names"
            ],
            "description": "Specify the word representing multiple instances of the object type. This value is permanent and cannot be changed after setting.",
            "endpoint_argument_name": "labels.plural"
          },
          {
            "name": "object_singular_name",
            "alternative_names": [
              "single_object_label",
              "singular_label"
            ],
            "description": "The word representing a single object. This cannot be changed later.",
            "endpoint_argument_name": "labels.singular"
          },
          {
            "name": "clear_description",
            "alternative_names": [
              "reset_description",
              "empty_description"
            ],
            "description": "Set to true to clear the description field for the object type schema.",
            "endpoint_argument_name": "clearDescription"
          },
          {
            "name": "restorable",
            "alternative_names": [
              "is_restorable",
              "object_restorable"
            ],
            "description": "Indicates if the object can be restored after deletion. Accepts a boolean value.",
            "endpoint_argument_name": "restorable"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm-object-schemas/v3/schemas/{objectType}",
      "tags": [
        "Core"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.custom.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Fully qualified name or object type ID of your schema."
            },
            "description": "Fully qualified name or object type ID of your schema.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "secondaryDisplayProperties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type."
            },
            "description": "The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "requiredProperties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The names of properties that should be **required** when creating an object of this type."
            },
            "description": "The names of properties that should be **required** when creating an object of this type.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "The names of properties that should be **required** when creating an object of this type.",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "searchableProperties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Names of properties that will be indexed for this object type in by HubSpot's product search."
            },
            "description": "Names of properties that will be indexed for this object type in by HubSpot's product search.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "Names of properties that will be indexed for this object type in by HubSpot's product search.",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "clearDescription",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "primaryDisplayProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type."
            },
            "description": "The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type."
            },
            "schema_required": false
          },
          {
            "name": "description",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "restorable",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "labels.plural",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The word for multiple objects. (There\u2019s no way to change this later.)"
            },
            "description": "The word for multiple objects. (There\u2019s no way to change this later.)",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "The word for multiple objects. (There\u2019s no way to change this later.)"
            },
            "schema_required": false
          },
          {
            "name": "labels.singular",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The word for one object. (There\u2019s no way to change this later.)"
            },
            "description": "The word for one object. (There\u2019s no way to change this later.)",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "The word for one object. (There\u2019s no way to change this later.)"
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"Attributes to update in your schema.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"secondaryDisplayProperties\": {\n            \"type\": \"array\",\n            \"description\": \"The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"requiredProperties\": {\n            \"type\": \"array\",\n            \"description\": \"The names of properties that should be **required** when creating an object of this type.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"searchableProperties\": {\n            \"type\": \"array\",\n            \"description\": \"Names of properties that will be indexed for this object type in by HubSpot's product search.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"clearDescription\": {\n            \"type\": \"boolean\"\n          },\n          \"primaryDisplayProperty\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type.\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"restorable\": {\n            \"type\": \"boolean\"\n          },\n          \"labels\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"plural\": {\n                \"type\": \"string\",\n                \"description\": \"The word for multiple objects. (There\\u2019s no way to change this later.)\"\n              },\n              \"singular\": {\n                \"type\": \"string\",\n                \"description\": \"The word for one object. (There\\u2019s no way to change this later.)\"\n              }\n            },\n            \"description\": \"Singular and plural labels for the object. Used in CRM display.\",\n            \"example\": {\n              \"singular\": \"My object\",\n              \"plural\": \"My objects\"\n            }\n          }\n        },\n        \"description\": \"Defines attributes to update on an object type.\",\n        \"example\": {\n          \"primaryDisplayProperty\": \"my_object_property\",\n          \"requiredProperties\": [\n            \"my_object_property\"\n          ],\n          \"searchableProperties\": [\n            \"my_object_property\"\n          ]\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "post-/crm-object-schemas/v3/schemas/{objectType}/associations_createAssociation",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_crm_object_association",
        "description": {
          "tagline": "Create an association between HubSpot CRM objects.",
          "detailed": "This tool creates an association between specified HubSpot CRM objects. Use it when you need to link different CRM objects (like contacts and companies) within the HubSpot platform."
        },
        "return_annotation": "Information about the new CRM object association created.",
        "arguments": [
          {
            "name": "crm_object_type_schema",
            "alternative_names": [
              "crm_object_type_id",
              "crm_object_schema"
            ],
            "description": "Fully qualified name or object type ID of your CRM object schema to create the association.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "primary_object_type_id",
            "alternative_names": [
              "source_object_type_id",
              "main_object_type_id"
            ],
            "description": "ID of the primary object type to link from in the CRM system.",
            "endpoint_argument_name": "fromObjectTypeId"
          },
          {
            "name": "target_object_type_id",
            "alternative_names": [
              "destination_object_type_id",
              "link_to_object_type_id"
            ],
            "description": "ID of the target object type to link to in the CRM association.",
            "endpoint_argument_name": "toObjectTypeId"
          },
          {
            "name": "association_name",
            "alternative_names": [
              "link_name",
              "connection_name"
            ],
            "description": "A unique name for the association between CRM objects. This helps identify the link.",
            "endpoint_argument_name": "name"
          }
        ]
      },
      "method": "POST",
      "path": "/crm-object-schemas/v3/schemas/{objectType}/associations",
      "tags": [
        "Core"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.custom.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Fully qualified name or object type ID of your schema."
            },
            "description": "Fully qualified name or object type ID of your schema.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "fromObjectTypeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "ID of the primary object type to link from."
            },
            "description": "ID of the primary object type to link from.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "ID of the primary object type to link from."
            },
            "schema_required": true
          },
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A unique name for this association."
            },
            "description": "A unique name for this association.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "A unique name for this association."
            },
            "schema_required": false
          },
          {
            "name": "toObjectTypeId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "ID of the target object type to link to."
            },
            "description": "ID of the target object type to link to.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "ID of the target object type to link to."
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"Attributes that define the association.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"fromObjectTypeId\",\n          \"toObjectTypeId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"fromObjectTypeId\": {\n            \"type\": \"string\",\n            \"description\": \"ID of the primary object type to link from.\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"A unique name for this association.\"\n          },\n          \"toObjectTypeId\": {\n            \"type\": \"string\",\n            \"description\": \"ID of the target object type to link to.\"\n          }\n        },\n        \"description\": \"Defines an association between two object types.\",\n        \"example\": {\n          \"fromObjectTypeId\": \"2-123456\",\n          \"toObjectTypeId\": \"contact\",\n          \"name\": \"my_object_to_contact\"\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "delete-/crm-object-schemas/v3/schemas/{objectType}/associations/{associationIdentifier}_archiveAssociation",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_crm_association",
        "description": {
          "tagline": "Remove an association between CRM object schemas.",
          "detailed": "This tool is used to delete an association between specified CRM object schemas in HubSpot. It should be called when there is a need to remove or archive a link between two object types."
        },
        "return_annotation": "Confirmation of association deletion.",
        "arguments": [
          {
            "name": "schema_object_type",
            "alternative_names": [
              "object_type_identifier",
              "schema_fqn"
            ],
            "description": "The fully qualified name or object type ID of your schema to identify which CRM object to target.",
            "endpoint_argument_name": "objectType"
          },
          {
            "name": "association_id",
            "alternative_names": [
              "association_identifier",
              "association_unique_id"
            ],
            "description": "Unique ID of the association to be removed.",
            "endpoint_argument_name": "associationIdentifier"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm-object-schemas/v3/schemas/{objectType}/associations/{associationIdentifier}",
      "tags": [
        "Core"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.custom.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "objectType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Fully qualified name or object type ID of your schema."
            },
            "description": "Fully qualified name or object type ID of your schema.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "associationIdentifier",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Unique ID of the association to remove."
            },
            "description": "Unique ID of the association to remove.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-162/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "fetch_hubspot_object_records",
        "description": {
          "tagline": "Retrieve HubSpot CRM records by ID or custom property.",
          "detailed": "Use this tool to retrieve HubSpot CRM records by specifying record IDs or by using a custom unique value property with the `idProperty` parameter."
        },
        "return_annotation": "Records retrieved by ID or custom property.",
        "arguments": [
          {
            "name": "record_retrieval_body",
            "alternative_names": [
              "record_fetch_request_body",
              "hubspot_crm_retrieval_body"
            ],
            "description": "JSON object for specifying the IDs or custom properties to retrieve records. Include properties, propertiesWithHistory, idProperty (if using custom unique value), and inputs to specify the required records.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "archived_results_only",
              "fetch_archived_only"
            ],
            "description": "Indicate if only archived records should be returned when retrieving HubSpot CRM data.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-162/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of services by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.services.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-162/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_services_batch",
        "description": {
          "tagline": "Update multiple service records in HubSpot CRM.",
          "detailed": "Use this tool to update a batch of service records in the HubSpot CRM by their internal IDs or unique property values. Suitable for synchronizing or modifying multiple records efficiently."
        },
        "return_annotation": "Details of batch update success or failure.",
        "arguments": [
          {
            "name": "service_update_requests",
            "alternative_names": [
              "batch_update_requests",
              "service_update_payload"
            ],
            "description": "JSON array of objects with service record IDs and properties to update. Each object must include `id`, `idProperty`, `objectWriteTraceId`, and `properties`.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-162/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of services by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.services.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-162/batch/upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "hubspot_crm_upsert_records",
        "description": {
          "tagline": "Create or update unique records in HubSpot CRM.",
          "detailed": "This tool allows for the creation or update of CRM records in HubSpot, identified by a unique property. Use it when you need to batch upload or modify records based on a unique identifier."
        },
        "return_annotation": "Confirms the creation or update of records in HubSpot CRM.",
        "arguments": [
          {
            "name": "records_to_upsert",
            "alternative_names": [
              "upsert_records_payload",
              "batch_records_input"
            ],
            "description": "JSON array containing records to upsert, each with unique properties: `idProperty`, `objectWriteTraceId`, `id`, and `properties`.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-162/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of services by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.services.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-162/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "hubspot_search_custom_objects",
        "description": {
          "tagline": "Search for custom objects in HubSpot CRM.",
          "detailed": "Use this tool to search for custom objects within the HubSpot CRM. It should be called when you need to retrieve specific custom object data based on certain criteria."
        },
        "return_annotation": "Search results for custom objects in HubSpot CRM.",
        "arguments": [
          {
            "name": "search_request_body",
            "alternative_names": [
              "search_parameters",
              "query_parameters"
            ],
            "description": "JSON object containing search query, limit, paging token, sorting order, properties to include, and filter groups for HubSpot CRM custom object search.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-162/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.services.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-162/batch/archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_services_batch",
        "description": {
          "tagline": "Archive multiple services using their IDs in bulk.",
          "detailed": "Use this tool to archive a batch of services in the CRM by providing their IDs. This is useful for managing large sets of records efficiently."
        },
        "return_annotation": "Confirmation of services archived.",
        "arguments": [
          {
            "name": "service_ids_to_archive",
            "alternative_names": [
              "ids_for_archiving",
              "archive_ids"
            ],
            "description": "A JSON array of service IDs to archive. Each ID should be a string.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-162/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of services by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.services.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/0-162/{serviceId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_hubspot_object_by_id",
        "description": {
          "tagline": "Retrieve a HubSpot CRM object using its service ID.",
          "detailed": "This tool is used to read a specific HubSpot CRM object identified by its `serviceId`. It can optionally use any unique property value by specifying the `idProperty`. The returned data can be customized with the `properties` query parameter."
        },
        "return_annotation": "Details of the specified HubSpot CRM object.",
        "arguments": [
          {
            "name": "hubspot_crm_service_id",
            "alternative_names": [
              "crm_object_service_id",
              "hubspot_object_id"
            ],
            "description": "The unique identifier (service ID) of the HubSpot CRM object to retrieve. This can be the internal object ID or any unique property defined by the `idProperty`.",
            "endpoint_argument_name": "serviceId"
          },
          {
            "name": "return_properties_list",
            "alternative_names": [
              "properties_to_return",
              "include_properties"
            ],
            "description": "A list of properties to be returned in the response. Non-existing properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "property_history_list",
              "historical_properties"
            ],
            "description": "A list of properties to return along with their history for a HubSpot CRM object. Properties should be specified as strings in the list.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_ids",
              "linked_object_types"
            ],
            "description": "A list of object types whose associated IDs should be retrieved. Non-existent associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_id_property",
              "object_unique_property"
            ],
            "description": "Specify the name of a property with unique values for the object.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "include_only_archived",
              "fetch_only_archived"
            ],
            "description": "Set to true to return only archived results. False returns non-archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/0-162/{serviceId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{serviceId}`. `{serviceId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.services.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "serviceId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/0-162/{serviceId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_object_hubspot",
        "description": {
          "tagline": "Move an object to the recycling bin in HubSpot CRM.",
          "detailed": "Use this tool to delete an object identified by `serviceId` within the HubSpot CRM, moving it to the recycling bin."
        },
        "return_annotation": "Confirmation of object moved to recycling bin.",
        "arguments": [
          {
            "name": "object_service_id",
            "alternative_names": [
              "hubspot_object_id",
              "crm_object_service_id"
            ],
            "description": "The unique identifier for the object to be moved to the recycling bin in HubSpot CRM.",
            "endpoint_argument_name": "serviceId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/0-162/{serviceId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{serviceId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.services.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "serviceId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/0-162/{serviceId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "edit_hubspot_object",
        "description": {
          "tagline": "Partially update a HubSpot CRM object with specified properties.",
          "detailed": "This tool performs a partial update on a HubSpot CRM object identified by the `serviceId` or a unique property value using the `idProperty` query parameter. It overwrites provided properties while ensuring read-only or non-existent properties result in errors. Properties can be cleared with an empty string."
        },
        "return_annotation": "Result of the object update operation in HubSpot CRM.",
        "arguments": [
          {
            "name": "object_identifier",
            "alternative_names": [
              "unique_service_id",
              "object_id"
            ],
            "description": "The unique identifier or `{serviceId}` for the object to be updated. This can be an internal object ID or a unique property value when used with `idProperty`.",
            "endpoint_argument_name": "serviceId"
          },
          {
            "name": "object_properties_update",
            "alternative_names": [
              "properties_update",
              "update_properties"
            ],
            "description": "JSON object with key-value pairs representing the properties to be updated. Use empty strings to clear values.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_name",
              "unique_field_name"
            ],
            "description": "The name of a unique property for the object, used instead of the internal ID if specified.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/0-162/{serviceId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{serviceId}`or optionally a unique property value as specified by the `idProperty` query param. `{serviceId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.services.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "serviceId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/0-162",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "read_services_page",
        "description": {
          "tagline": "Retrieve a page of services with customizable properties.",
          "detailed": "This tool retrieves a page of services from the HubSpot CRM API, allowing customization of returned data via the `properties` query parameter. Use this tool to access service information efficiently."
        },
        "return_annotation": "A page of service records with optional properties.",
        "arguments": [
          {
            "name": "max_results_per_page",
            "alternative_names": [
              "results_limit",
              "page_size"
            ],
            "description": "Specify the maximum number of results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "last_read_resource_token",
              "next_page_token"
            ],
            "description": "The cursor token from the last read to retrieve the next page of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "requested_properties",
            "alternative_names": [
              "return_properties",
              "selected_properties"
            ],
            "description": "Comma-separated list of properties to include in the response. Non-existent properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_with_past_values"
            ],
            "description": "A list of properties to return with their history of values. If absent, properties are ignored. Reduces max services per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_categories"
            ],
            "description": "A list of object types to retrieve associated IDs for each service. Ignored if associations do not exist.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "only_archived",
              "exclusive_archived"
            ],
            "description": "Set to true to return only archived results; false to include non-archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/0-162",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of services. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.services.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of services that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of services that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-162",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_service_record",
        "description": {
          "tagline": "Create a service record in HubSpot CRM.",
          "detailed": "This tool creates a new service object in HubSpot CRM with the specified properties and returns the created object, including its ID. It's useful for adding new service records to the CRM system."
        },
        "return_annotation": "Returns the created service object with its ID.",
        "arguments": [
          {
            "name": "service_creation_data",
            "alternative_names": [
              "new_service_data",
              "service_object_properties"
            ],
            "description": "A JSON object with key-value pairs for service properties and associations. Include 'properties' for the service details, and 'associations' for related objects.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-162",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a service with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard services is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.services.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/0-162/batch/create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_of_services",
        "description": {
          "tagline": "Create a batch of services in HubSpot CRM.",
          "detailed": "Use this tool to create multiple service entries at once within HubSpot CRM. This is useful for efficiently managing and organizing service-related data."
        },
        "return_annotation": "Information about created service batch.",
        "arguments": [
          {
            "name": "service_batch_creation_data",
            "alternative_names": [
              "services_creation_payload",
              "batch_services_data"
            ],
            "description": "A JSON array of service objects to create, each with properties, associations, and specific trace IDs.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/0-162/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of services",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.services.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/tasks/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_hubspot_tasks",
        "description": {
          "tagline": "Archive multiple HubSpot tasks by their IDs.",
          "detailed": "Use this tool to archive a batch of tasks in HubSpot CRM by specifying their IDs. It should be called when you need to update the status of tasks to archived."
        },
        "return_annotation": "Confirmation of tasks archiving status.",
        "arguments": [
          {
            "name": "task_ids_to_archive",
            "alternative_names": [
              "ids_of_tasks_to_archive",
              "tasks_ids_for_archiving"
            ],
            "description": "A JSON array of task IDs to be archived. Each element is an object containing the 'id' of the task.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tasks/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of tasks by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/tasks/{taskId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_task_details",
        "description": {
          "tagline": "Retrieve HubSpot CRM task details using task ID.",
          "detailed": "Call this tool to get detailed information about a specific task in HubSpot CRM by providing the task ID. Modify the returned data using query parameters if needed."
        },
        "return_annotation": "Details of the specified CRM task.",
        "arguments": [
          {
            "name": "task_id",
            "alternative_names": [
              "task_identifier",
              "unique_task_key"
            ],
            "description": "The unique identifier for the HubSpot CRM task. Retrieve specific task details using this ID.",
            "endpoint_argument_name": "taskId"
          },
          {
            "name": "requested_properties",
            "alternative_names": [
              "fields_to_return",
              "output_properties"
            ],
            "description": "List of properties to return for the task. Only available properties will be returned.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_previous_values",
              "historical_properties"
            ],
            "description": "List of properties to return with their previous values. Comma-separated and ignored if not present.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_categories"
            ],
            "description": "List of object types to retrieve associated IDs for. Returns IDs of related objects.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_name_for_id"
            ],
            "description": "Specify the name of the property with unique values to identify the task.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_only_archived",
            "alternative_names": [
              "return_archived_only",
              "archived_only_results"
            ],
            "description": "Set to true to return only archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/tasks/{taskId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{taskId}`. `{taskId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "taskId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/tasks/{taskId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_task_in_hubspot",
        "description": {
          "tagline": "Delete a task in HubSpot by task ID.",
          "detailed": "Use this tool to move a specific task in HubSpot CRM to the recycling bin by providing the task ID."
        },
        "return_annotation": "Confirmation of task deletion in HubSpot CRM.",
        "arguments": [
          {
            "name": "task_id",
            "alternative_names": [
              "hubspot_task_id",
              "crm_task_id"
            ],
            "description": "The unique identifier of the task to be deleted from HubSpot CRM. Required to move the task to the recycling bin.",
            "endpoint_argument_name": "taskId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/tasks/{taskId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{taskId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "taskId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/tasks/{taskId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_hubspot_task",
        "description": {
          "tagline": "Update properties of a HubSpot task using its ID.",
          "detailed": "This tool allows partial updates to a task in HubSpot CRM by specifying a `{taskId}` or a unique property defined by `idProperty`. It overwrites specified properties, with read-only and non-existent properties triggering errors. To clear a property, pass an empty string."
        },
        "return_annotation": "Information about the updated task.",
        "arguments": [
          {
            "name": "task_identifier",
            "alternative_names": [
              "task_id",
              "unique_task_property"
            ],
            "description": "The internal ID or unique property name of the task to update. Defaults to internal ID.",
            "endpoint_argument_name": "taskId"
          },
          {
            "name": "task_properties_to_update",
            "alternative_names": [
              "task_fields_to_overwrite",
              "task_data_to_modify"
            ],
            "description": "JSON object with key-value pairs for the properties to update in the task. Overwrites existing values.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_with_unique_values"
            ],
            "description": "Specify the name of the property with unique values. Used for identifying the object instead of `taskId`.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/tasks/{taskId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{taskId}`or optionally a unique property value as specified by the `idProperty` query param. `{taskId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "taskId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/tasks/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_tasks",
        "description": {
          "tagline": "Create a batch of tasks in HubSpot CRM.",
          "detailed": "This tool is used to create multiple tasks at once in HubSpot CRM, streamlining task management processes."
        },
        "return_annotation": "Confirms creation of a batch of tasks.",
        "arguments": [
          {
            "name": "task_batch_request",
            "alternative_names": [
              "task_batch_data",
              "batch_task_payload"
            ],
            "description": "A JSON object containing an array of tasks to be created, each with properties, associations, and optional trace IDs.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tasks/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of tasks",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/tasks/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_batch_tasks",
        "description": {
          "tagline": "Update a batch of tasks in HubSpot CRM.",
          "detailed": "Use this tool to update multiple tasks in HubSpot CRM by their internal ID or unique property values. It should be called when you need to modify several tasks at once, such as changing task details or status across multiple entries."
        },
        "return_annotation": "Confirmation of task updates.",
        "arguments": [
          {
            "name": "task_update_requests",
            "alternative_names": [
              "batch_task_updates",
              "task_batch_update_data"
            ],
            "description": "A JSON array containing objects with task update details. Each object includes an 'id' or 'idProperty', 'properties' for new values, and an optional 'objectWriteTraceId'.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tasks/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of tasks by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/tasks/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_hubspot_tasks",
        "description": {
          "tagline": "Retrieve HubSpot task records by ID or custom property.",
          "detailed": "Use this tool to fetch task records from HubSpot CRM by specifying record IDs or a custom unique value property via the `idProperty` parameter."
        },
        "return_annotation": "List of HubSpot task records retrieved by their IDs.",
        "arguments": [
          {
            "name": "task_request_body",
            "alternative_names": [
              "tasks_body_payload",
              "hubspot_task_data"
            ],
            "description": "JSON object containing properties for setting tasks, their histories, and optional custom property ID for retrieving records.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "fetch_only_archived",
              "include_archived_exclusively"
            ],
            "description": "Set to true to return only archived records from HubSpot.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tasks/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of tasks by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/tasks/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_hubspot_tasks",
        "description": {
          "tagline": "Create or update tasks in HubSpot using a unique property.",
          "detailed": "This tool creates or updates HubSpot CRM tasks identified by a unique property value specified by the `idProperty` query parameter. Use this tool when you need to batch upsert tasks based on unique identifiers."
        },
        "return_annotation": "Acknowledgment of task creation or update in HubSpot.",
        "arguments": [
          {
            "name": "tasks_data",
            "alternative_names": [
              "tasks_info",
              "tasks_input"
            ],
            "description": "An array of task objects to be upserted. Each object must include `idProperty`, `objectWriteTraceId`, `id`, and `properties`.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tasks/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of tasks by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/tasks/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_hubspot_tasks",
        "description": {
          "tagline": "Search for tasks in HubSpot CRM.",
          "detailed": "Use this tool to search for tasks within HubSpot CRM. It should be called when you need to find specific tasks based on certain search criteria."
        },
        "return_annotation": "Search results for tasks in HubSpot CRM.",
        "arguments": [
          {
            "name": "task_search_criteria",
            "alternative_names": [
              "task_search_parameters",
              "task_filter_criteria"
            ],
            "description": "A JSON object containing search criteria such as query strings, limit, sort order, properties, and filters to query tasks in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tasks/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/tasks_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_tasks_list",
        "description": {
          "tagline": "Retrieve a page of tasks from HubSpot CRM.",
          "detailed": "Use this tool to read a page of tasks from HubSpot CRM. Specify which properties to return using the 'properties' query parameter."
        },
        "return_annotation": "A list of tasks with specified properties.",
        "arguments": [
          {
            "name": "max_results_per_page",
            "alternative_names": [
              "results_limit",
              "page_size"
            ],
            "description": "Specify the maximum number of task results to retrieve per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "cursor_after"
            ],
            "description": "The token indicating the last resource read, used for pagination to continue from the next page.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "task_properties_to_return",
            "alternative_names": [
              "properties_list",
              "attributes_to_retrieve"
            ],
            "description": "A list of property names to include in the response. Ignored if not present on the tasks.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_history_list",
              "historical_properties"
            ],
            "description": "Specify properties to return along with their full change history. Note: This reduces the number of tasks per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associated_object_ids",
            "alternative_names": [
              "fetch_associated_ids",
              "get_linked_object_ids"
            ],
            "description": "A list of object types to retrieve associated IDs for. If specified associations do not exist, they will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "filter_archived",
              "show_only_archived"
            ],
            "description": "Set to true to return only archived tasks; false for active tasks.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/tasks",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of tasks. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of tasks that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of tasks that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/tasks_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_task_in_crm",
        "description": {
          "tagline": "Create a task in HubSpot CRM and return task details.",
          "detailed": "This tool creates a task in HubSpot CRM with specified properties and returns the task details, including the ID. It should be called when you need to add a new task to the CRM system."
        },
        "return_annotation": "Details of the created task, including the task ID.",
        "arguments": [
          {
            "name": "task_properties",
            "alternative_names": [
              "task_details",
              "task_configuration"
            ],
            "description": "A JSON object containing key-value pairs for the task properties, including associations. The 'associations' key should list entities and their types related to the task.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tasks",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a task with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard tasks is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.contacts.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/taxes_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_taxes_page",
        "description": {
          "tagline": "Retrieve a page of tax details from HubSpot CRM.",
          "detailed": "Use this tool to read a specific page of tax details from the HubSpot CRM. You can control which properties are returned by specifying them in the query parameters."
        },
        "return_annotation": "A list of taxes details for a page.",
        "arguments": [
          {
            "name": "max_results_per_page",
            "alternative_names": [
              "results_limit_per_page",
              "page_results_count"
            ],
            "description": "Specify the maximum number of tax results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "next_page_token",
              "cursor_token"
            ],
            "description": "The token for the paging cursor from the last read resource for fetching the next page of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "included_properties",
            "alternative_names": [
              "return_properties",
              "specified_properties"
            ],
            "description": "List the properties to be returned for each tax. Specify as an array of strings.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_with_past_values"
            ],
            "description": "Specify properties to return with their history. Reduces max number of taxes per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "retrieve_associated_object_ids",
            "alternative_names": [
              "fetch_associated_objects",
              "get_association_ids"
            ],
            "description": "Comma-separated list of object types to retrieve associated IDs for. Non-existent associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "archived_only",
            "alternative_names": [
              "show_only_archived",
              "return_only_archived"
            ],
            "description": "Set to true to return only archived tax results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/taxes",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of taxes. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of taxes that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of taxes that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/taxes_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_hubspot_tax",
        "description": {
          "tagline": "Create a tax in HubSpot CRM and retrieve its details.",
          "detailed": "This tool creates a tax with specified properties in HubSpot CRM and returns a detailed object including the newly assigned ID. Use this for adding new tax records to your CRM system."
        },
        "return_annotation": "Details of the created tax object, including its ID.",
        "arguments": [
          {
            "name": "tax_creation_details",
            "alternative_names": [
              "tax_creation_data",
              "tax_creation_payload"
            ],
            "description": "JSON object with properties for the new tax, including any associations. Include key-value pairs to set properties, and optionally add associations with IDs and types.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/taxes",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a tax with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard taxes is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/taxes/{taxId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_tax_details_by_id",
        "description": {
          "tagline": "Retrieve tax details using a specific tax ID.",
          "detailed": "This tool retrieves tax object details from HubSpot CRM by specifying a tax ID. The ID can be the internal object ID or any unique property value as set by the `idProperty` query parameter. Useful for accessing specific tax information within HubSpot."
        },
        "return_annotation": "Tax object details from HubSpot CRM.",
        "arguments": [
          {
            "name": "tax_id",
            "alternative_names": [
              "tax_identifier",
              "unique_tax_id"
            ],
            "description": "The unique ID or property value for the tax object. Default is the internal object ID.",
            "endpoint_argument_name": "taxId"
          },
          {
            "name": "return_properties",
            "alternative_names": [
              "property_list",
              "response_properties"
            ],
            "description": "Comma-separated list of properties to be included in the response. Non-existing properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_property_list",
              "property_history_inclusion"
            ],
            "description": "List properties to return with their historical values. Use a comma-separated format.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "A list of object types to retrieve associated IDs for. Non-existent associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_as_id"
            ],
            "description": "The name of a property whose values are unique for the tax object. Use this to specify an alternative ID property instead of the default internal ID.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "fetch_archived_records",
              "show_archived_records_only"
            ],
            "description": "Set to true to return only archived results. False returns non-archived records.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/taxes/{taxId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{taxId}`. `{taxId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "taxId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/taxes/{taxId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_tax_entry",
        "description": {
          "tagline": "Archive a tax entry in HubSpot CRM.",
          "detailed": "Use this tool to move a tax object identified by `taxId` to the recycling bin in HubSpot CRM."
        },
        "return_annotation": "Confirms the tax entry has been archived.",
        "arguments": [
          {
            "name": "tax_entry_id",
            "alternative_names": [
              "tax_object_id",
              "tax_record_id"
            ],
            "description": "The unique identifier for the tax entry you want to archive in HubSpot CRM.",
            "endpoint_argument_name": "taxId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/taxes/{taxId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{taxId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "taxId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/taxes/{taxId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_tax_object",
        "description": {
          "tagline": "Update properties of a tax object in HubSpot CRM.",
          "detailed": "This tool updates specified properties of a tax object in HubSpot CRM using its ID or a unique property value. It's used to perform partial updates where only certain fields need modification. Fields to be updated are specified in the request, and read-only or non-existent fields will cause errors. To clear a property, pass an empty string."
        },
        "return_annotation": "Information about the updated tax object.",
        "arguments": [
          {
            "name": "tax_object_identifier",
            "alternative_names": [
              "tax_id_value",
              "unique_property_tax_id"
            ],
            "description": "The identifier for the tax object. Use the internal `taxId` by default or provide a unique property value specified by the `idProperty`.",
            "endpoint_argument_name": "taxId"
          },
          {
            "name": "tax_object_properties",
            "alternative_names": [
              "tax_fields_update",
              "tax_details_patch"
            ],
            "description": "JSON object containing key-value pairs of properties to update. Read-only or non-existent fields will cause errors. Empty strings can clear values.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "identifier_property_name",
              "unique_identifier_property"
            ],
            "description": "The name of a property uniquely identifying this tax object. Used instead of `taxId` if specified.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/taxes/{taxId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{taxId}`or optionally a unique property value as specified by the `idProperty` query param. `{taxId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "taxId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/taxes/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_or_update_tax_records",
        "description": {
          "tagline": "Create or update tax records based on unique properties.",
          "detailed": "This tool creates or updates tax records in HubSpot CRM by using unique property values specified by the `idProperty` parameter. It should be called when you need to ensure tax records are correctly up-to-date by leveraging existing unique identifiers."
        },
        "return_annotation": "Confirmation of created or updated tax records.",
        "arguments": [
          {
            "name": "tax_records_payload",
            "alternative_names": [
              "tax_records_input",
              "payload_data"
            ],
            "description": "JSON object containing an array of tax record objects to create or update. Each object must include `idProperty`, `objectWriteTraceId`, `id`, and `properties` to specify the unique identifiers and details of the record.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/taxes/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of taxes by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/taxes/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_batch_taxes",
        "description": {
          "tagline": "Update taxes in batch using IDs or unique values.",
          "detailed": "Call this tool to update multiple tax records at once in HubSpot CRM using either internal IDs or unique property values."
        },
        "return_annotation": "Confirmation of batch tax updates.",
        "arguments": [
          {
            "name": "batch_taxes_update_payload",
            "alternative_names": [
              "tax_update_data",
              "batch_update_info"
            ],
            "description": "JSON payload for updating batch taxes, including IDs or unique property values, property updates, and tracing ID.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/taxes/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of taxes by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/taxes/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_tax_records",
        "description": {
          "tagline": "Retrieve tax records by ID or custom property.",
          "detailed": "Use this tool to retrieve tax records by specifying record IDs or using a custom unique value property. It's useful when you need detailed tax information for specific records."
        },
        "return_annotation": "Tax records retrieved by ID or custom property.",
        "arguments": [
          {
            "name": "tax_records_request_data",
            "alternative_names": [
              "tax_details_request_payload",
              "tax_data_retrieval_parameters"
            ],
            "description": "A JSON object containing the details for retrieving tax records. Include 'propertiesWithHistory', 'idProperty', 'inputs', and 'properties'. Use 'idProperty' to specify a custom property for retrieval, or 'inputs' to list record IDs.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_only",
            "alternative_names": [
              "fetch_archived_only",
              "include_archived_only"
            ],
            "description": "Set to true to retrieve only archived records, false to exclude them.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/taxes/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of taxes by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/taxes/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_tax_batch",
        "description": {
          "tagline": "Create a batch of taxes in HubSpot CRM.",
          "detailed": "Use this tool to create multiple tax records at once in HubSpot CRM. Ideal for situations where bulk tax data entry is required."
        },
        "return_annotation": "Confirmation of tax batch creation.",
        "arguments": [
          {
            "name": "tax_batch_data",
            "alternative_names": [
              "batch_tax_records",
              "multiple_tax_entries"
            ],
            "description": "JSON structured data for creating multiple tax records. It includes tax properties, associations, and an optional object write trace ID.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/taxes/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of taxes",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/taxes/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_taxes",
        "description": {
          "tagline": "Search for tax entries within HubSpot CRM.",
          "detailed": "Use this tool to find specific tax records in HubSpot CRM based on search criteria. It returns relevant tax entries from the CRM database."
        },
        "return_annotation": "Returns search results of tax entries in the CRM.",
        "arguments": [
          {
            "name": "search_criteria",
            "alternative_names": [
              "query_parameters",
              "tax_search_filters"
            ],
            "description": "A JSON object defining search criteria, including query, limit, sorts, and filters.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/taxes/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/taxes/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_tax_batch",
        "description": {
          "tagline": "Archive a batch of taxes by their IDs.",
          "detailed": "This tool archives a batch of taxes in the HubSpot CRM by their IDs. It should be called when you need to remove or deactivate multiple tax records at once."
        },
        "return_annotation": "Batch archive confirmation for taxes.",
        "arguments": [
          {
            "name": "tax_ids_to_archive",
            "alternative_names": [
              "archive_tax_ids",
              "remove_tax_ids"
            ],
            "description": "A JSON array of tax IDs to archive. Each ID should be a string representing a tax record in the HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/taxes/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of taxes by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.line_items.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/tickets/merge_merge",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "merge_support_tickets",
        "description": {
          "tagline": "Merge two support tickets into one unified record.",
          "detailed": "This tool merges two separate support tickets into a single ticket record, combining all the relevant information. It should be used when consolidating duplicate or related tickets is necessary to streamline customer support operations."
        },
        "return_annotation": "Details of the merged ticket record.",
        "arguments": [
          {
            "name": "secondary_ticket_id",
            "alternative_names": [
              "ticket_id_to_merge",
              "merge_target_ticket_id"
            ],
            "description": "The ID of the support ticket to be merged into the primary ticket. It specifies which ticket will be combined with the primary ticket record.",
            "endpoint_argument_name": "objectIdToMerge"
          },
          {
            "name": "primary_ticket_id",
            "alternative_names": [
              "main_ticket_id",
              "lead_ticket_id"
            ],
            "description": "The ID of the ticket designated as the primary record in the merge operation. After merging, this ticket will contain all combined information.",
            "endpoint_argument_name": "primaryObjectId"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tickets/merge",
      "tags": [
        "Basic"
      ],
      "summary": "Merge two tickets",
      "description": "Merge two tickets, combining them into one ticket record.",
      "requires_security": true,
      "oauth_scopes": [
        "tickets"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "objectIdToMerge",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "primaryObjectId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"objectIdToMerge\",\n          \"primaryObjectId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"objectIdToMerge\": {\n            \"type\": \"string\"\n          },\n          \"primaryObjectId\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "post-/crm/v3/objects/tickets/batch/archive_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_hubspot_tickets_batch",
        "description": {
          "tagline": "Delete a batch of tickets in HubSpot CRM.",
          "detailed": "Use this tool to delete multiple tickets by ID in HubSpot CRM. Deleted tickets can be restored within 90 days."
        },
        "return_annotation": "Confirmation of batch ticket deletion in HubSpot CRM.",
        "arguments": [
          {
            "name": "ticket_ids_batch",
            "alternative_names": [
              "batch_ticket_ids",
              "multiple_ticket_ids"
            ],
            "description": "A JSON array of ticket IDs to be deleted. Each ID should be a string representing a ticket in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tickets/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of tickets by ID",
      "description": "Delete a batch of tickets by ID. Deleted tickets can be restored within 90 days of deletion. Learn more about [restoring records](https://knowledge.hubspot.com/records/restore-deleted-records).",
      "requires_security": true,
      "oauth_scopes": [
        "tickets"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/tickets/{ticketId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_ticket_details",
        "description": {
          "tagline": "Retrieve details of a ticket by ID from HubSpot CRM.",
          "detailed": "This tool retrieves detailed information about a specific ticket in HubSpot CRM identified by `ticketId`. It's useful for obtaining comprehensive ticket data."
        },
        "return_annotation": "Ticket details retrieved from HubSpot CRM.",
        "arguments": [
          {
            "name": "ticket_id",
            "alternative_names": [
              "ticket_identifier",
              "ticket_id_number"
            ],
            "description": "The ID of the ticket to retrieve from HubSpot CRM. This can be the internal object ID or a unique property value based on the `idProperty`.",
            "endpoint_argument_name": "ticketId"
          },
          {
            "name": "properties_to_return",
            "alternative_names": [
              "desired_properties",
              "fetch_properties"
            ],
            "description": "A list of properties to include in the response. Properties not present will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "historical_properties",
              "properties_history_list"
            ],
            "description": "List of properties with their history to be returned. If properties are missing, they'll be ignored.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "List of object types for retrieving associated IDs. Non-existent associations will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_identifier_property",
            "alternative_names": [
              "unique_property_name",
              "identifier_property_name"
            ],
            "description": "Specifies the property name with unique values for identifying the ticket.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "only_return_archived",
            "alternative_names": [
              "show_archived_only",
              "archived_filter"
            ],
            "description": "Set to true to return only archived results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/tickets/{ticketId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{ticketId}`. `{ticketId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "tickets"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "ticketId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/tickets/{ticketId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_ticket",
        "description": {
          "tagline": "Move a ticket to the recycling bin by ticket ID.",
          "detailed": "Use this tool to delete a CRM ticket by moving it to the recycling bin using its unique ticket ID."
        },
        "return_annotation": "Confirmation of ticket deletion to recycling bin.",
        "arguments": [
          {
            "name": "ticket_id",
            "alternative_names": [
              "ticket_identifier",
              "ticket_code"
            ],
            "description": "The unique ID of the ticket to move to the recycling bin. Must be a valid string representing the ticket identifier.",
            "endpoint_argument_name": "ticketId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/tickets/{ticketId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{ticketId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "tickets"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "ticketId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/tickets/{ticketId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_ticket_info",
        "description": {
          "tagline": "Partially update ticket details in HubSpot CRM.",
          "detailed": "Use this tool to perform a partial update on a ticket identified by its `{ticketId}` or a unique property value specified by `idProperty` in HubSpot CRM. Read-only and non-existent properties will cause errors. Clear property values by passing an empty string."
        },
        "return_annotation": "Details of the updated ticket in the CRM.",
        "arguments": [
          {
            "name": "ticket_id",
            "alternative_names": [
              "unique_ticket_identifier",
              "ticket_identifier"
            ],
            "description": "The internal ID of the ticket to be updated. This is used to identify the specific ticket in HubSpot CRM.",
            "endpoint_argument_name": "ticketId"
          },
          {
            "name": "ticket_update_properties",
            "alternative_names": [
              "ticket_property_updates",
              "ticket_attribute_changes"
            ],
            "description": "A JSON object with key-value pairs representing the properties to update on the ticket. Each key is a property name, and its value is the new value for that property. Clear a property by setting its value to an empty string.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier",
              "property_key"
            ],
            "description": "The name of a property whose values are unique for the ticket object. Specify if not using the default ticket ID.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/tickets/{ticketId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{ticketId}`or optionally a unique property value as specified by the `idProperty` query param. `{ticketId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "tickets"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "ticketId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/tickets/batch/upsert_upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_crm_tickets",
        "description": {
          "tagline": "Create or update CRM tickets in bulk using unique identifiers.",
          "detailed": "This tool allows you to create or update ticket records in HubSpot CRM by using a unique identifier specified through the `idProperty` query parameter. This is useful for ensuring ticket data is up-to-date or for adding new ticket entries in bulk."
        },
        "return_annotation": "Details of tickets that were created or updated.",
        "arguments": [
          {
            "name": "ticket_data_list",
            "alternative_names": [
              "ticket_records",
              "tickets_input"
            ],
            "description": "A list of ticket data objects to be upserted, each containing a unique identifier and property details.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tickets/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of tickets by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "tickets"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/tickets/batch/read_read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_ticket_batch",
        "description": {
          "tagline": "Retrieve a batch of tickets by ID or property value.",
          "detailed": "Use this tool to fetch a batch of CRM tickets by providing their IDs or a specific unique property value. Ideal for obtaining detailed information about multiple tickets simultaneously."
        },
        "return_annotation": "Batch of tickets retrieved by ID or unique property.",
        "arguments": [
          {
            "name": "ticket_request_batch",
            "alternative_names": [
              "ticket_input_data",
              "tickets_query_payload"
            ],
            "description": "JSON object specifying the properties, ID property, and input ticket IDs or properties for retrieval.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_archived_tickets_only",
            "alternative_names": [
              "include_archived_tickets",
              "fetch_archived_tickets"
            ],
            "description": "Set to true to return only archived tickets. If false, include non-archived tickets as well.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tickets/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of tickets by internal ID, or unique property values",
      "description": "Retrieve a batch of tickets by ID (`ticketId`) or unique property value (`idProperty`). ",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/tickets_getPage",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "fetch_tickets_page",
        "description": {
          "tagline": "Retrieve a page of tickets from HubSpot CRM.",
          "detailed": "Use this tool to read a page of tickets from HubSpot CRM. You can control the returned data using the `properties` query parameter."
        },
        "return_annotation": "A page of ticket data from HubSpot CRM.",
        "arguments": [
          {
            "name": "results_per_page",
            "alternative_names": [
              "max_results",
              "per_page_limit"
            ],
            "description": "The maximum number of results to display per page. Must be a positive integer.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "cursor_token",
              "pagination_token"
            ],
            "description": "The token for the last read resource to continue paging results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "include_properties",
            "alternative_names": [
              "select_properties",
              "return_properties"
            ],
            "description": "A list of properties to return for each ticket. Specify as strings; unlisted properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_previous_values",
              "historical_properties"
            ],
            "description": "A list of property names to return with their historical values. Reduces the number of tickets retrievable per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_object_types"
            ],
            "description": "A list of object types (e.g. 'contacts', 'companies') to retrieve associated IDs for tickets. Ignore if they don't exist.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived",
            "alternative_names": [
              "show_only_archived",
              "filter_archived_results"
            ],
            "description": "Return only archived tickets if set to 'True'.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/tickets",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of tickets. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "tickets"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of tickets that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of tickets that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/tickets_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_ticket",
        "description": {
          "tagline": "Create a support ticket in HubSpot CRM.",
          "detailed": "Use this tool to create a new support ticket with specified properties in HubSpot CRM and receive a copy of the ticket object along with its ID."
        },
        "return_annotation": "Details of the created ticket including the ID.",
        "arguments": [
          {
            "name": "ticket_properties",
            "alternative_names": [
              "ticket_details",
              "ticket_data"
            ],
            "description": "JSON object containing key-value pairs for setting properties for the new ticket, including optional associations.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tickets",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a ticket with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard tickets is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "tickets"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/tickets/search_doSearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_tickets",
        "description": {
          "tagline": "Search and filter CRM tickets based on properties and associations.",
          "detailed": "Utilize this tool to search for tickets within the CRM by applying specific filters on properties, examining associations, and sorting the results. Ideal for retrieving detailed ticket information based on particular criteria."
        },
        "return_annotation": "Search results for CRM tickets.",
        "arguments": [
          {
            "name": "ticket_search_criteria",
            "alternative_names": [
              "ticket_search_parameters",
              "ticket_search_filters"
            ],
            "description": "JSON object containing the criteria for ticket search, including query string, sort options, pagination, and filters.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tickets/search",
      "tags": [
        "Search"
      ],
      "summary": "Search for tickets",
      "description": "Search for tickets by filtering on properties, searching through associations, and sorting results. Learn more about [CRM search](https://developers.hubspot.com/docs/guides/api/crm/search#make-a-search-request).",
      "requires_security": true,
      "oauth_scopes": [
        "tickets"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/tickets/batch/create_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_batch_tickets",
        "description": {
          "tagline": "Create a batch of tickets in HubSpot CRM.",
          "detailed": "Use this tool to create multiple tickets in HubSpot CRM at once. You can specify property values for each ticket and define associations with other CRM records."
        },
        "return_annotation": "Information about the created tickets.",
        "arguments": [
          {
            "name": "ticket_batch_request",
            "alternative_names": [
              "batch_ticket_data",
              "ticket_creation_payload"
            ],
            "description": "A JSON object containing an array of `inputs`, each with `properties` for ticket details and optional `associations` to connect with other CRM records.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tickets/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of tickets",
      "description": "Create a batch of tickets. The `inputs` array can contain a `properties` object to define property values for the ticket, along with an `associations` array to define [associations](https://developers.hubspot.com/docs/guides/api/crm/associations/associations-v4) with other CRM records.",
      "requires_security": true,
      "oauth_scopes": [
        "tickets"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/tickets/batch/update_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_ticket_batch",
        "description": {
          "tagline": "Update multiple tickets in HubSpot CRM by ID or property.",
          "detailed": "This tool updates a batch of tickets in the HubSpot CRM using their IDs or a unique property value. Use it when you need to modify several tickets at once. Properties that are read-only or non-existent will cause an error, and providing an empty string will clear a property value."
        },
        "return_annotation": "Confirmation of batch ticket updates.",
        "arguments": [
          {
            "name": "ticket_update_data",
            "alternative_names": [
              "tickets_update_payload",
              "batch_ticket_details"
            ],
            "description": "A JSON array of ticket objects to update, each with 'idProperty', 'objectWriteTraceId', 'id', and 'properties'.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/tickets/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of tickets by internal ID, or unique property values",
      "description": "Update a batch of tickets by ID (`ticketId`) or unique property value (`idProperty`). Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "tickets"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/integrators/timeline/v3/events/{eventTemplateId}/{eventId}/detail_getDetailById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_event_details",
        "description": {
          "tagline": "Retrieve detailed information for a specific HubSpot event.",
          "detailed": "Use this tool to get detailed information about a specific event in HubSpot CRM, identified by its template ID and event ID."
        },
        "return_annotation": "Details of the specified event from HubSpot CRM.",
        "arguments": [
          {
            "name": "event_template_id",
            "alternative_names": [
              "template_id",
              "template_identifier"
            ],
            "description": "The ID of the event template used to identify and retrieve specific event details in HubSpot CRM.",
            "endpoint_argument_name": "eventTemplateId"
          },
          {
            "name": "event_id",
            "alternative_names": [
              "event_identifier",
              "id_of_event"
            ],
            "description": "Specify the event ID to retrieve detailed information for a specific event in HubSpot CRM.",
            "endpoint_argument_name": "eventId"
          }
        ]
      },
      "method": "GET",
      "path": "/integrators/timeline/v3/events/{eventTemplateId}/{eventId}/detail",
      "tags": [
        "Events"
      ],
      "summary": "Get event details",
      "description": "Retrieve details for a specific event, specified by template ID and event ID.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.schemas.companies.read",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.contacts.read",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.schemas.deals.read",
        "crm.objects.deals.read",
        "tickets",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.objects.companies.read",
        "timeline"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "eventTemplateId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The event template ID."
            },
            "description": "The event template ID.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "eventId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The event ID."
            },
            "description": "The event ID.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/integrators/timeline/v3/events_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "send_event_to_hubspot",
        "description": {
          "tagline": "Send event data to a specified HubSpot event type.",
          "detailed": "This tool is used to send a single instance of event data to a specified event type in HubSpot CRM. It should be called when there's a need to submit event data to HubSpot for tracking or analysis."
        },
        "return_annotation": "Confirmation of event submission to HubSpot.",
        "arguments": [
          {
            "name": "event_definition",
            "alternative_names": [
              "timeline_event_data",
              "event_data_payload"
            ],
            "description": "A JSON object defining the timeline event with details such as event template ID, additional data, iframe details, domain, tokens, event identifier, user token, email, CRM object ID, and timestamp.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/integrators/timeline/v3/events",
      "tags": [
        "Events"
      ],
      "summary": "Send event data (single)",
      "description": "Send a single instance of event data to a specified event type.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.deals.write",
        "crm.objects.contacts.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "tickets.sensitive.v2",
        "tickets.highly_sensitive.v2",
        "crm.schemas.companies.write",
        "crm.objects.companies.write",
        "tickets",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.schemas.contacts.write",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "eventTemplateId": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The event template ID."
                },
                "extraData": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Additional event-specific data that can be interpreted by the template's markdown."
                },
                "timelineIFrame": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "linkLabel": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The text displaying the link that will display the iframe."
                    },
                    "headerLabel": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The label of the modal window that displays the iframe contents."
                    },
                    "width": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The width of the modal window in pixels."
                    },
                    "url": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The URI of the iframe contents."
                    },
                    "height": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The height of the modal window in pixels."
                    }
                  },
                  "inner_properties": null,
                  "description": null
                },
                "domain": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The event domain (often paired with utk)."
                },
                "tokens": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A collection of token keys and values associated with the template tokens."
                },
                "id": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Identifier for the event. This is optional, and we recommend you do not pass this in. We will create one for you if you omit this. You can also use `{{uuid}}` anywhere in the ID to generate a unique string, guaranteeing uniqueness."
                },
                "utk": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Use the `utk` parameter to associate an event with a contact by `usertoken`. This is recommended if you don't know a user's email, but have an identifying user token in your cookie."
                },
                "email": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The email address used for contact-specific events. This can be used to identify existing contacts, create new ones, or change the email for an existing contact (if paired with the `objectId`)."
                },
                "objectId": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The CRM object identifier. This is required for every event other than contacts (where utk or email can be used)."
                },
                "timestamp": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The time the event occurred. If not passed in, the curren time will be assumed. This is used to determine where an event is shown on a CRM object's timeline."
                }
              },
              "inner_properties": null,
              "description": "The timeline event definition."
            },
            "description": "The timeline event definition.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "The state of the timeline event.",
              "properties": {
                "eventTemplateId": {
                  "type": "string",
                  "description": "The event template ID."
                },
                "extraData": {
                  "type": "object",
                  "description": "Additional event-specific data that can be interpreted by the template's markdown.",
                  "properties": {}
                },
                "timelineIFrame": {
                  "type": "object",
                  "properties": {
                    "linkLabel": {
                      "type": "string",
                      "description": "The text displaying the link that will display the iframe."
                    },
                    "headerLabel": {
                      "type": "string",
                      "description": "The label of the modal window that displays the iframe contents."
                    },
                    "width": {
                      "type": "integer",
                      "description": "The width of the modal window in pixels.",
                      "format": "int32"
                    },
                    "url": {
                      "type": "string",
                      "description": "The URI of the iframe contents."
                    },
                    "height": {
                      "type": "integer",
                      "description": "The height of the modal window in pixels.",
                      "format": "int32"
                    }
                  },
                  "required": [
                    "headerLabel",
                    "height",
                    "linkLabel",
                    "url",
                    "width"
                  ]
                },
                "domain": {
                  "type": "string",
                  "description": "The event domain (often paired with utk)."
                },
                "tokens": {
                  "type": "object",
                  "description": "A collection of token keys and values associated with the template tokens.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string",
                  "description": "Identifier for the event. This is optional, and we recommend you do not pass this in. We will create one for you if you omit this. You can also use `{{uuid}}` anywhere in the ID to generate a unique string, guaranteeing uniqueness."
                },
                "utk": {
                  "type": "string",
                  "description": "Use the `utk` parameter to associate an event with a contact by `usertoken`. This is recommended if you don't know a user's email, but have an identifying user token in your cookie."
                },
                "email": {
                  "type": "string",
                  "description": "The email address used for contact-specific events. This can be used to identify existing contacts, create new ones, or change the email for an existing contact (if paired with the `objectId`)."
                },
                "objectId": {
                  "type": "string",
                  "description": "The CRM object identifier. This is required for every event other than contacts (where utk or email can be used)."
                },
                "timestamp": {
                  "type": "string",
                  "description": "The time the event occurred. If not passed in, the curren time will be assumed. This is used to determine where an event is shown on a CRM object's timeline.",
                  "format": "date-time"
                }
              },
              "required": [
                "eventTemplateId",
                "tokens"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"The timeline event definition.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"eventTemplateId\",\n          \"tokens\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"eventTemplateId\": {\n            \"type\": \"string\",\n            \"description\": \"The event template ID.\"\n          },\n          \"extraData\": {\n            \"type\": \"object\",\n            \"properties\": {},\n            \"description\": \"Additional event-specific data that can be interpreted by the template's markdown.\"\n          },\n          \"timelineIFrame\": {\n            \"required\": [\n              \"headerLabel\",\n              \"height\",\n              \"linkLabel\",\n              \"url\",\n              \"width\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"linkLabel\": {\n                \"type\": \"string\",\n                \"description\": \"The text displaying the link that will display the iframe.\"\n              },\n              \"headerLabel\": {\n                \"type\": \"string\",\n                \"description\": \"The label of the modal window that displays the iframe contents.\"\n              },\n              \"width\": {\n                \"type\": \"integer\",\n                \"description\": \"The width of the modal window in pixels.\",\n                \"format\": \"int32\"\n              },\n              \"url\": {\n                \"type\": \"string\",\n                \"description\": \"The URI of the iframe contents.\"\n              },\n              \"height\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the modal window in pixels.\",\n                \"format\": \"int32\"\n              }\n            },\n            \"example\": {\n              \"linkLabel\": \"View Art3mis\",\n              \"headerLabel\": \"Art3mis dog\",\n              \"url\": \"https://my.petspot.com/pets/Art3mis\",\n              \"width\": 600,\n              \"height\": 400\n            }\n          },\n          \"domain\": {\n            \"type\": \"string\",\n            \"description\": \"The event domain (often paired with utk).\"\n          },\n          \"tokens\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"A collection of token keys and values associated with the template tokens.\"\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier for the event. This is optional, and we recommend you do not pass this in. We will create one for you if you omit this. You can also use `{{uuid}}` anywhere in the ID to generate a unique string, guaranteeing uniqueness.\"\n          },\n          \"utk\": {\n            \"type\": \"string\",\n            \"description\": \"Use the `utk` parameter to associate an event with a contact by `usertoken`. This is recommended if you don't know a user's email, but have an identifying user token in your cookie.\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"The email address used for contact-specific events. This can be used to identify existing contacts, create new ones, or change the email for an existing contact (if paired with the `objectId`).\"\n          },\n          \"objectId\": {\n            \"type\": \"string\",\n            \"description\": \"The CRM object identifier. This is required for every event other than contacts (where utk or email can be used).\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"The time the event occurred. If not passed in, the curren time will be assumed. This is used to determine where an event is shown on a CRM object's timeline.\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"description\": \"The state of the timeline event.\",\n        \"example\": {\n          \"eventTemplateId\": \"1001298\",\n          \"email\": \"art3mis-pup@petspot.com\",\n          \"tokens\": {\n            \"petName\": \"Art3mis\",\n            \"petAge\": 3,\n            \"petColor\": \"black\"\n          },\n          \"extraData\": {\n            \"questions\": [\n              {\n                \"question\": \"Who's a good girl?\",\n                \"answer\": \"Bark!\"\n              },\n              {\n                \"question\": \"Do you wanna go on a walk?\",\n                \"answer\": \"Woof!\"\n              }\n            ]\n          },\n          \"timelineIFrame\": {\n            \"linkLabel\": \"View Art3mis\",\n            \"headerLabel\": \"Art3mis dog\",\n            \"url\": \"https://my.petspot.com/pets/Art3mis\",\n            \"width\": 600,\n            \"height\": 400\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "put-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens/{tokenName}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['developer_hapikey']]",
      "wrapper_tool": null,
      "method": "PUT",
      "path": "/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens/{tokenName}",
      "tags": [
        "Tokens"
      ],
      "summary": "Update a template token",
      "description": "Update an event type template token, specified by token name.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "developer_hapikey"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "eventTemplateId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The event template ID."
            },
            "description": "The event template ID.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "tokenName",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The token name."
            },
            "description": "The token name.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "appId",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the target app."
            },
            "description": "The ID of the target app.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "options": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "label": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "value": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": "If type is `enumeration`, we should have a list of options to choose from."
                },
                "label": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Used for list segmentation and reporting."
                },
                "objectPropertyName": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The name of the CRM object property. This will populate the CRM object property associated with the event. With enough of these, you can fully build CRM objects via the Timeline API."
                }
              },
              "inner_properties": null,
              "description": "The updated token definition."
            },
            "description": "The updated token definition.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "State of the token definition for update requests.",
              "properties": {
                "options": {
                  "type": "array",
                  "description": "If type is `enumeration`, we should have a list of options to choose from.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "label",
                      "value"
                    ]
                  }
                },
                "label": {
                  "type": "string",
                  "description": "Used for list segmentation and reporting."
                },
                "objectPropertyName": {
                  "type": "string",
                  "description": "The name of the CRM object property. This will populate the CRM object property associated with the event. With enough of these, you can fully build CRM objects via the Timeline API."
                }
              },
              "required": [
                "label"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens/{tokenName}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['developer_hapikey']]",
      "wrapper_tool": null,
      "method": "DELETE",
      "path": "/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens/{tokenName}",
      "tags": [
        "Tokens"
      ],
      "summary": "Delete a template token",
      "description": "Delete an existing token from a specific event type template.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "developer_hapikey"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "eventTemplateId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The event template ID."
            },
            "description": "The event template ID.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "tokenName",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The token name."
            },
            "description": "The token name.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "appId",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the target app."
            },
            "description": "The ID of the target app.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/integrators/timeline/v3/events/{eventTemplateId}/{eventId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_event_instance",
        "description": {
          "tagline": "Retrieve an event instance using template and event ID.",
          "detailed": "Use this tool to access detailed information about a specific event instance by providing the event template ID and event ID."
        },
        "return_annotation": "Event instance details based on template and event ID.",
        "arguments": [
          {
            "name": "event_template_id",
            "alternative_names": [
              "template_id",
              "event_template_identifier"
            ],
            "description": "The unique ID of the event template required to retrieve the event instance.",
            "endpoint_argument_name": "eventTemplateId"
          },
          {
            "name": "event_id",
            "alternative_names": [
              "event_identifier",
              "event_key"
            ],
            "description": "The unique identifier for the specific event you want to retrieve.",
            "endpoint_argument_name": "eventId"
          }
        ]
      },
      "method": "GET",
      "path": "/integrators/timeline/v3/events/{eventTemplateId}/{eventId}",
      "tags": [
        "Events"
      ],
      "summary": "Get an event instance",
      "description": "Retrieve an event instance, specified by template ID and event ID.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.companies.highly_sensitive.read.v2",
        "crm.schemas.companies.read",
        "tickets.sensitive.v2",
        "crm.schemas.contacts.read",
        "tickets.highly_sensitive.v2",
        "crm.objects.contacts.read",
        "crm.objects.deals.highly_sensitive.read.v2",
        "crm.schemas.deals.read",
        "crm.objects.deals.read",
        "tickets",
        "crm.objects.companies.sensitive.read.v2",
        "crm.objects.deals.sensitive.read.v2",
        "crm.objects.contacts.highly_sensitive.read.v2",
        "crm.objects.contacts.sensitive.read.v2",
        "crm.objects.companies.read",
        "timeline"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "eventTemplateId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The event template ID."
            },
            "description": "The event template ID.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "eventId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The event ID."
            },
            "description": "The event ID.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/integrators/timeline/v3/events/batch/create_createBatch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "batch_create_timeline_events",
        "description": {
          "tagline": "Batch create multiple timeline event instances.",
          "detailed": "Batch create multiple timeline events using an event template. Created events are immutable and can trigger updates to object properties if configured in the template."
        },
        "return_annotation": "Confirmation of timeline events creation.",
        "arguments": [
          {
            "name": "timeline_event_definitions",
            "alternative_names": [
              "event_payload",
              "batch_event_data"
            ],
            "description": "A JSON array of event definitions, each requiring an eventTemplateId, domain, and additional optional fields like extraData, timelineIFrame, tokens, and more. This defines the timeline events to create.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/integrators/timeline/v3/events/batch/create",
      "tags": [
        "Events"
      ],
      "summary": "Create multiple events",
      "description": "Batch create multiple instances of timeline events based on an event template. Once created, these event are immutable on the object timeline and cannot be modified. If the event template was configured to update object properties via `objectPropertyName`, this call will also attempt to updates those properties, or add them if they don't exist.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.schemas.deals.write",
        "crm.objects.contacts.write",
        "crm.objects.companies.highly_sensitive.write.v2",
        "tickets.sensitive.v2",
        "tickets.highly_sensitive.v2",
        "crm.schemas.companies.write",
        "crm.objects.companies.write",
        "tickets",
        "crm.objects.deals.highly_sensitive.write.v2",
        "crm.objects.deals.write",
        "crm.schemas.contacts.write",
        "crm.objects.contacts.sensitive.write.v2",
        "crm.objects.contacts.highly_sensitive.write.v2",
        "timeline",
        "crm.objects.companies.sensitive.write.v2",
        "crm.objects.deals.sensitive.write.v2"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "eventTemplateId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The event template ID."
                    },
                    "extraData": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Additional event-specific data that can be interpreted by the template's markdown."
                    },
                    "timelineIFrame": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "linkLabel": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The text displaying the link that will display the iframe."
                        },
                        "headerLabel": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The label of the modal window that displays the iframe contents."
                        },
                        "width": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The width of the modal window in pixels."
                        },
                        "url": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The URI of the iframe contents."
                        },
                        "height": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The height of the modal window in pixels."
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    },
                    "domain": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The event domain (often paired with utk)."
                    },
                    "tokens": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A collection of token keys and values associated with the template tokens."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Identifier for the event. This is optional, and we recommend you do not pass this in. We will create one for you if you omit this. You can also use `{{uuid}}` anywhere in the ID to generate a unique string, guaranteeing uniqueness."
                    },
                    "utk": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Use the `utk` parameter to associate an event with a contact by `usertoken`. This is recommended if you don't know a user's email, but have an identifying user token in your cookie."
                    },
                    "email": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The email address used for contact-specific events. This can be used to identify existing contacts, create new ones, or change the email for an existing contact (if paired with the `objectId`)."
                    },
                    "objectId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The CRM object identifier. This is required for every event other than contacts (where utk or email can be used)."
                    },
                    "timestamp": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The time the event occurred. If not passed in, the curren time will be assumed. This is used to determine where an event is shown on a CRM object's timeline."
                    }
                  },
                  "description": "A collection of timeline events we want to create."
                }
              },
              "inner_properties": null,
              "description": "The timeline event definition."
            },
            "description": "The timeline event definition.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Used to create timeline events in batches.",
              "properties": {
                "inputs": {
                  "type": "array",
                  "description": "A collection of timeline events we want to create.",
                  "items": {
                    "type": "object",
                    "description": "The state of the timeline event.",
                    "properties": {
                      "eventTemplateId": {
                        "type": "string",
                        "description": "The event template ID."
                      },
                      "extraData": {
                        "type": "object",
                        "description": "Additional event-specific data that can be interpreted by the template's markdown.",
                        "properties": {}
                      },
                      "timelineIFrame": {
                        "type": "object",
                        "properties": {
                          "linkLabel": {
                            "type": "string",
                            "description": "The text displaying the link that will display the iframe."
                          },
                          "headerLabel": {
                            "type": "string",
                            "description": "The label of the modal window that displays the iframe contents."
                          },
                          "width": {
                            "type": "integer",
                            "description": "The width of the modal window in pixels.",
                            "format": "int32"
                          },
                          "url": {
                            "type": "string",
                            "description": "The URI of the iframe contents."
                          },
                          "height": {
                            "type": "integer",
                            "description": "The height of the modal window in pixels.",
                            "format": "int32"
                          }
                        },
                        "required": [
                          "headerLabel",
                          "height",
                          "linkLabel",
                          "url",
                          "width"
                        ]
                      },
                      "domain": {
                        "type": "string",
                        "description": "The event domain (often paired with utk)."
                      },
                      "tokens": {
                        "type": "object",
                        "description": "A collection of token keys and values associated with the template tokens.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "id": {
                        "type": "string",
                        "description": "Identifier for the event. This is optional, and we recommend you do not pass this in. We will create one for you if you omit this. You can also use `{{uuid}}` anywhere in the ID to generate a unique string, guaranteeing uniqueness."
                      },
                      "utk": {
                        "type": "string",
                        "description": "Use the `utk` parameter to associate an event with a contact by `usertoken`. This is recommended if you don't know a user's email, but have an identifying user token in your cookie."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address used for contact-specific events. This can be used to identify existing contacts, create new ones, or change the email for an existing contact (if paired with the `objectId`)."
                      },
                      "objectId": {
                        "type": "string",
                        "description": "The CRM object identifier. This is required for every event other than contacts (where utk or email can be used)."
                      },
                      "timestamp": {
                        "type": "string",
                        "description": "The time the event occurred. If not passed in, the curren time will be assumed. This is used to determine where an event is shown on a CRM object's timeline.",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "eventTemplateId",
                      "tokens"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"The timeline event definition.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"description\": \"A collection of timeline events we want to create.\",\n            \"items\": {\n              \"required\": [\n                \"eventTemplateId\",\n                \"tokens\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"eventTemplateId\": {\n                  \"type\": \"string\",\n                  \"description\": \"The event template ID.\"\n                },\n                \"extraData\": {\n                  \"type\": \"object\",\n                  \"properties\": {},\n                  \"description\": \"Additional event-specific data that can be interpreted by the template's markdown.\"\n                },\n                \"timelineIFrame\": {\n                  \"required\": [\n                    \"headerLabel\",\n                    \"height\",\n                    \"linkLabel\",\n                    \"url\",\n                    \"width\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"linkLabel\": {\n                      \"type\": \"string\",\n                      \"description\": \"The text displaying the link that will display the iframe.\"\n                    },\n                    \"headerLabel\": {\n                      \"type\": \"string\",\n                      \"description\": \"The label of the modal window that displays the iframe contents.\"\n                    },\n                    \"width\": {\n                      \"type\": \"integer\",\n                      \"description\": \"The width of the modal window in pixels.\",\n                      \"format\": \"int32\"\n                    },\n                    \"url\": {\n                      \"type\": \"string\",\n                      \"description\": \"The URI of the iframe contents.\"\n                    },\n                    \"height\": {\n                      \"type\": \"integer\",\n                      \"description\": \"The height of the modal window in pixels.\",\n                      \"format\": \"int32\"\n                    }\n                  },\n                  \"example\": {\n                    \"linkLabel\": \"View Art3mis\",\n                    \"headerLabel\": \"Art3mis dog\",\n                    \"url\": \"https://my.petspot.com/pets/Art3mis\",\n                    \"width\": 600,\n                    \"height\": 400\n                  }\n                },\n                \"domain\": {\n                  \"type\": \"string\",\n                  \"description\": \"The event domain (often paired with utk).\"\n                },\n                \"tokens\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"A collection of token keys and values associated with the template tokens.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"Identifier for the event. This is optional, and we recommend you do not pass this in. We will create one for you if you omit this. You can also use `{{uuid}}` anywhere in the ID to generate a unique string, guaranteeing uniqueness.\"\n                },\n                \"utk\": {\n                  \"type\": \"string\",\n                  \"description\": \"Use the `utk` parameter to associate an event with a contact by `usertoken`. This is recommended if you don't know a user's email, but have an identifying user token in your cookie.\"\n                },\n                \"email\": {\n                  \"type\": \"string\",\n                  \"description\": \"The email address used for contact-specific events. This can be used to identify existing contacts, create new ones, or change the email for an existing contact (if paired with the `objectId`).\"\n                },\n                \"objectId\": {\n                  \"type\": \"string\",\n                  \"description\": \"The CRM object identifier. This is required for every event other than contacts (where utk or email can be used).\"\n                },\n                \"timestamp\": {\n                  \"type\": \"string\",\n                  \"description\": \"The time the event occurred. If not passed in, the curren time will be assumed. This is used to determine where an event is shown on a CRM object's timeline.\",\n                  \"format\": \"date-time\"\n                }\n              },\n              \"description\": \"The state of the timeline event.\",\n              \"example\": {\n                \"eventTemplateId\": \"1001298\",\n                \"email\": \"art3mis-pup@petspot.com\",\n                \"tokens\": {\n                  \"petName\": \"Art3mis\",\n                  \"petAge\": 3,\n                  \"petColor\": \"black\"\n                },\n                \"extraData\": {\n                  \"questions\": [\n                    {\n                      \"question\": \"Who's a good girl?\",\n                      \"answer\": \"Bark!\"\n                    },\n                    {\n                      \"question\": \"Do you wanna go on a walk?\",\n                      \"answer\": \"Woof!\"\n                    }\n                  ]\n                },\n                \"timelineIFrame\": {\n                  \"linkLabel\": \"View Art3mis\",\n                  \"headerLabel\": \"Art3mis dog\",\n                  \"url\": \"https://my.petspot.com/pets/Art3mis\",\n                  \"width\": 600,\n                  \"height\": 400\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Used to create timeline events in batches.\",\n        \"example\": {\n          \"inputs\": [\n            {\n              \"eventTemplateId\": \"1001298\",\n              \"email\": \"art3mis-pup@petspot.com\",\n              \"tokens\": {\n                \"petName\": \"Art3mis\",\n                \"petAge\": 3,\n                \"petColor\": \"black\"\n              },\n              \"extraData\": {\n                \"questions\": [\n                  {\n                    \"question\": \"Who's a good girl?\",\n                    \"answer\": \"Bark!\"\n                  },\n                  {\n                    \"question\": \"Do you wanna go on a walk?\",\n                    \"answer\": \"Woof!\"\n                  }\n                ]\n              },\n              \"timelineIFrame\": {\n                \"linkLabel\": \"View Art3mis\",\n                \"headerLabel\": \"Art3mis dog\",\n                \"url\": \"https://my.petspot.com/pets/Art3mis\",\n                \"width\": 600,\n                \"height\": 400\n              }\n            },\n            {\n              \"eventTemplateId\": \"1001298\",\n              \"email\": \"pocket-tiger@petspot.com\",\n              \"tokens\": {\n                \"petName\": \"Pocket\",\n                \"petAge\": 3,\n                \"petColor\": \"yellow\"\n              },\n              \"extraData\": {\n                \"questions\": [\n                  {\n                    \"question\": \"Who's a good kitty?\",\n                    \"answer\": \"Purr...\"\n                  },\n                  {\n                    \"question\": \"Will you stop playing with that?\",\n                    \"answer\": \"Meow!\"\n                  }\n                ]\n              },\n              \"timelineIFrame\": {\n                \"linkLabel\": \"View Pocket\",\n                \"headerLabel\": \"Pocket Tiger\",\n                \"url\": \"https://my.petspot.com/pets/Pocket\",\n                \"width\": 600,\n                \"height\": 400\n              }\n            }\n          ]\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/integrators/timeline/v3/{appId}/event-templates_getAll",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['developer_hapikey']]",
      "wrapper_tool": null,
      "method": "GET",
      "path": "/integrators/timeline/v3/{appId}/event-templates",
      "tags": [
        "Templates"
      ],
      "summary": "Get all event templates",
      "description": "Retrieve all templates defined for an app.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "developer_hapikey"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "appId",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the target app."
            },
            "description": "The ID of the target app.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/integrators/timeline/v3/{appId}/event-templates_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['developer_hapikey']]",
      "wrapper_tool": null,
      "method": "POST",
      "path": "/integrators/timeline/v3/{appId}/event-templates",
      "tags": [
        "Templates"
      ],
      "summary": "Create an event template",
      "description": "Event templates define the general structure for a custom timeline event, and enable you to send event data to HubSpot. A template includes formatted copy for its heading and details, as well as any custom property definitions. A single app can include up to 750 event templates.<br/><Warning>the `v1` and `v3` timeline events APIs are only available for app partners with existing `v1`/`v3` timeline events defined in their public app. <ul><li>If your app doesn't include any timeline events yet, requests to this endpoint will fail. Instead, you can get started on [latest version of the developer platform](/apps/developer-platform/build-apps/overview). Note that you'll need to request approval before you can define app events for your app. Learn more in the [app events overview](/apps/developer-platform/add-features/app-events/overview).</li><li>If your app includes a `v1`/`v3` timeline event, learn how to [migrate it to the developer platform](/apps/developer-platform/add-features/app-events/create-and-manage-event-types#migrate-an-existing-timeline-event-type). You don't need to request approval before migrating existing event types.</li></ul>If you're not an app partner, you can send custom event data to HubSpot using the [custom events API](/api-reference/events-manage-event-definitions-v3/guide).</Warning>",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "developer_hapikey"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "appId",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the target app."
            },
            "description": "The ID of the target app.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "detailTemplate": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline when you expand the details."
                },
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The template name."
                },
                "tokens": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "createdAt": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The date and time that the Event Template Token was created, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020."
                    },
                    "options": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "label": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": "If type is `enumeration`, we should have a list of options to choose from."
                    },
                    "name": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of the token referenced in the templates. This must be unique for the specific template. It may only contain alphanumeric characters, periods, dashes, or underscores (. - _)."
                    },
                    "label": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Used for list segmentation and reporting."
                    },
                    "objectPropertyName": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of the CRM object property. This will populate the CRM object property associated with the event. With enough of these, you can fully build CRM objects via the Timeline API."
                    },
                    "type": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "date",
                        "enumeration",
                        "number",
                        "string"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": "The data type of the token. You can currently choose from [string, number, date, enumeration]."
                    },
                    "updatedAt": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The date and time that the Event Template Token was last updated, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020."
                    }
                  },
                  "description": "A collection of tokens that can be used as custom properties on the event and to create fully fledged CRM objects."
                },
                "headerTemplate": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline as a header."
                },
                "objectType": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The type of CRM object this template is for. [Contacts, companies, tickets, and deals] are supported."
                }
              },
              "inner_properties": null,
              "description": "The new event template definition."
            },
            "description": "The new event template definition.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "State of the template definition being created.",
              "properties": {
                "detailTemplate": {
                  "type": "string",
                  "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline when you expand the details."
                },
                "name": {
                  "type": "string",
                  "description": "The template name."
                },
                "tokens": {
                  "type": "array",
                  "description": "A collection of tokens that can be used as custom properties on the event and to create fully fledged CRM objects.",
                  "items": {
                    "type": "object",
                    "description": "State of the token definition.",
                    "properties": {
                      "createdAt": {
                        "type": "string",
                        "description": "The date and time that the Event Template Token was created, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.",
                        "format": "date-time"
                      },
                      "options": {
                        "type": "array",
                        "description": "If type is `enumeration`, we should have a list of options to choose from.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "label": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "label",
                            "value"
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the token referenced in the templates. This must be unique for the specific template. It may only contain alphanumeric characters, periods, dashes, or underscores (. - _)."
                      },
                      "label": {
                        "type": "string",
                        "description": "Used for list segmentation and reporting."
                      },
                      "objectPropertyName": {
                        "type": "string",
                        "description": "The name of the CRM object property. This will populate the CRM object property associated with the event. With enough of these, you can fully build CRM objects via the Timeline API."
                      },
                      "type": {
                        "type": "string",
                        "description": "The data type of the token. You can currently choose from [string, number, date, enumeration].",
                        "enum": [
                          "date",
                          "enumeration",
                          "number",
                          "string"
                        ]
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The date and time that the Event Template Token was last updated, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "label",
                      "name",
                      "type"
                    ]
                  }
                },
                "headerTemplate": {
                  "type": "string",
                  "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline as a header."
                },
                "objectType": {
                  "type": "string",
                  "description": "The type of CRM object this template is for. [Contacts, companies, tickets, and deals] are supported."
                }
              },
              "required": [
                "name",
                "objectType",
                "tokens"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "get-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}_getById",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['developer_hapikey']]",
      "wrapper_tool": null,
      "method": "GET",
      "path": "/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}",
      "tags": [
        "Templates"
      ],
      "summary": "Get an event template",
      "description": "Retrieve an event type template by ID.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "developer_hapikey"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "eventTemplateId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The event template ID."
            },
            "description": "The event template ID.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "appId",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the target app."
            },
            "description": "The ID of the target app.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "put-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}_update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['developer_hapikey']]",
      "wrapper_tool": null,
      "method": "PUT",
      "path": "/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}",
      "tags": [
        "Templates"
      ],
      "summary": "Update an event template",
      "description": "Update an existing event template, specified by ID.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "developer_hapikey"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "eventTemplateId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The event template ID."
            },
            "description": "The event template ID.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "appId",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the target app."
            },
            "description": "The ID of the target app.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "detailTemplate": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline when you expand the details."
                },
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The template name."
                },
                "tokens": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "createdAt": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The date and time that the Event Template Token was created, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020."
                    },
                    "options": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "label": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": "If type is `enumeration`, we should have a list of options to choose from."
                    },
                    "name": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of the token referenced in the templates. This must be unique for the specific template. It may only contain alphanumeric characters, periods, dashes, or underscores (. - _)."
                    },
                    "label": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Used for list segmentation and reporting."
                    },
                    "objectPropertyName": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of the CRM object property. This will populate the CRM object property associated with the event. With enough of these, you can fully build CRM objects via the Timeline API."
                    },
                    "type": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "date",
                        "enumeration",
                        "number",
                        "string"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": "The data type of the token. You can currently choose from [string, number, date, enumeration]."
                    },
                    "updatedAt": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The date and time that the Event Template Token was last updated, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020."
                    }
                  },
                  "description": "A collection of tokens that can be used as custom properties on the event and to create fully fledged CRM objects."
                },
                "id": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The template ID."
                },
                "headerTemplate": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline as a header."
                }
              },
              "inner_properties": null,
              "description": "The updated event template definition."
            },
            "description": "The updated event template definition.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "State of the template definition being updated.",
              "properties": {
                "detailTemplate": {
                  "type": "string",
                  "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline when you expand the details."
                },
                "name": {
                  "type": "string",
                  "description": "The template name."
                },
                "tokens": {
                  "type": "array",
                  "description": "A collection of tokens that can be used as custom properties on the event and to create fully fledged CRM objects.",
                  "items": {
                    "type": "object",
                    "description": "State of the token definition.",
                    "properties": {
                      "createdAt": {
                        "type": "string",
                        "description": "The date and time that the Event Template Token was created, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.",
                        "format": "date-time"
                      },
                      "options": {
                        "type": "array",
                        "description": "If type is `enumeration`, we should have a list of options to choose from.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "label": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "label",
                            "value"
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the token referenced in the templates. This must be unique for the specific template. It may only contain alphanumeric characters, periods, dashes, or underscores (. - _)."
                      },
                      "label": {
                        "type": "string",
                        "description": "Used for list segmentation and reporting."
                      },
                      "objectPropertyName": {
                        "type": "string",
                        "description": "The name of the CRM object property. This will populate the CRM object property associated with the event. With enough of these, you can fully build CRM objects via the Timeline API."
                      },
                      "type": {
                        "type": "string",
                        "description": "The data type of the token. You can currently choose from [string, number, date, enumeration].",
                        "enum": [
                          "date",
                          "enumeration",
                          "number",
                          "string"
                        ]
                      },
                      "updatedAt": {
                        "type": "string",
                        "description": "The date and time that the Event Template Token was last updated, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "label",
                      "name",
                      "type"
                    ]
                  }
                },
                "id": {
                  "type": "string",
                  "description": "The template ID."
                },
                "headerTemplate": {
                  "type": "string",
                  "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline as a header."
                }
              },
              "required": [
                "id",
                "name",
                "tokens"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}_archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['developer_hapikey']]",
      "wrapper_tool": null,
      "method": "DELETE",
      "path": "/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}",
      "tags": [
        "Templates"
      ],
      "summary": "Delete an event template",
      "description": "Delete an event type template by ID.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "developer_hapikey"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "eventTemplateId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The event template ID."
            },
            "description": "The event template ID.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "appId",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the target app."
            },
            "description": "The ID of the target app.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens_create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Security scheme 'oauth2' not available. Available: [['developer_hapikey']]",
      "wrapper_tool": null,
      "method": "POST",
      "path": "/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens",
      "tags": [
        "Tokens"
      ],
      "summary": "Add tokens to an existing template",
      "description": "Update an existing event type template with new tokens.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "developer_hapikey"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "eventTemplateId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The event template ID."
            },
            "description": "The event template ID.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "appId",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the target app."
            },
            "description": "The ID of the target app.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "createdAt": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The date and time that the Event Template Token was created, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020."
                },
                "options": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "label": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "value": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": "If type is `enumeration`, we should have a list of options to choose from."
                },
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The name of the token referenced in the templates. This must be unique for the specific template. It may only contain alphanumeric characters, periods, dashes, or underscores (. - _)."
                },
                "label": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Used for list segmentation and reporting."
                },
                "objectPropertyName": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The name of the CRM object property. This will populate the CRM object property associated with the event. With enough of these, you can fully build CRM objects via the Timeline API."
                },
                "type": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "date",
                    "enumeration",
                    "number",
                    "string"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The data type of the token. You can currently choose from [string, number, date, enumeration]."
                },
                "updatedAt": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The date and time that the Event Template Token was last updated, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020."
                }
              },
              "inner_properties": null,
              "description": "The new token definition."
            },
            "description": "The new token definition.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "State of the token definition.",
              "properties": {
                "createdAt": {
                  "type": "string",
                  "description": "The date and time that the Event Template Token was created, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.",
                  "format": "date-time"
                },
                "options": {
                  "type": "array",
                  "description": "If type is `enumeration`, we should have a list of options to choose from.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "label",
                      "value"
                    ]
                  }
                },
                "name": {
                  "type": "string",
                  "description": "The name of the token referenced in the templates. This must be unique for the specific template. It may only contain alphanumeric characters, periods, dashes, or underscores (. - _)."
                },
                "label": {
                  "type": "string",
                  "description": "Used for list segmentation and reporting."
                },
                "objectPropertyName": {
                  "type": "string",
                  "description": "The name of the CRM object property. This will populate the CRM object property associated with the event. With enough of these, you can fully build CRM objects via the Timeline API."
                },
                "type": {
                  "type": "string",
                  "description": "The data type of the token. You can currently choose from [string, number, date, enumeration].",
                  "enum": [
                    "date",
                    "enumeration",
                    "number",
                    "string"
                  ]
                },
                "updatedAt": {
                  "type": "string",
                  "description": "The date and time that the Event Template Token was last updated, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.",
                  "format": "date-time"
                }
              },
              "required": [
                "label",
                "name",
                "type"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/extensions/calling/transcripts",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upload_call_transcripts",
        "description": {
          "tagline": "Upload call transcripts to HubSpot CRM.",
          "detailed": "Use this tool to upload call transcripts to HubSpot CRM. It should be called when you need to store transcripts for CRM purposes."
        },
        "return_annotation": "Confirmation of transcript upload success.",
        "arguments": [
          {
            "name": "transcript_data",
            "alternative_names": [
              "call_transcript_payload",
              "transcript_input"
            ],
            "description": "A JSON object containing transcript details with utterances and engagement ID to upload to HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/extensions/calling/transcripts",
      "tags": [
        "Transcripts"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.extensions_calling_transcripts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "transcriptCreateUtterances": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "endTimeMillis": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "startTimeMillis": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "speaker": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "name": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        },
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        },
                        "email": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    },
                    "text": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "languageCode": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "engagementId": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "transcriptCreateUtterances": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "endTimeMillis": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "startTimeMillis": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "speaker": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name"
                        ]
                      },
                      "text": {
                        "type": "string"
                      },
                      "languageCode": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "endTimeMillis",
                      "speaker",
                      "startTimeMillis",
                      "text"
                    ]
                  }
                },
                "engagementId": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "required": [
                "engagementId",
                "transcriptCreateUtterances"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"engagementId\",\n          \"transcriptCreateUtterances\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"transcriptCreateUtterances\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"endTimeMillis\",\n                \"speaker\",\n                \"startTimeMillis\",\n                \"text\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"endTimeMillis\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                },\n                \"startTimeMillis\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                },\n                \"speaker\": {\n                  \"required\": [\n                    \"id\",\n                    \"name\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"text\": {\n                  \"type\": \"string\"\n                },\n                \"languageCode\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"engagementId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/extensions/calling/transcripts/{transcriptId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_transcript_by_id",
        "description": {
          "tagline": "Retrieve call transcript details by transcript ID.",
          "detailed": "This tool retrieves details of a call transcript for a given transcript ID in the HubSpot CRM. Use it to access specific call records and transcript data."
        },
        "return_annotation": "Transcript details for a specific transcript ID.",
        "arguments": [
          {
            "name": "transcript_id",
            "alternative_names": [
              "transcript_identifier",
              "transcript_reference"
            ],
            "description": "The unique identifier of the call transcript to retrieve from HubSpot CRM.",
            "endpoint_argument_name": "transcriptId"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/extensions/calling/transcripts/{transcriptId}",
      "tags": [
        "Transcripts"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.extensions_calling_transcripts.read"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "transcriptId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/extensions/calling/transcripts/{transcriptId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_call_transcript",
        "description": {
          "tagline": "Delete a call transcript by transcript ID.",
          "detailed": "Removes a call transcript identified by transcript ID from the HubSpot CRM."
        },
        "return_annotation": "Confirmation of transcript deletion.",
        "arguments": [
          {
            "name": "transcript_id",
            "alternative_names": [
              "call_transcript_id",
              "transcript_identifier"
            ],
            "description": "The unique identifier for the call transcript you want to delete from the HubSpot CRM.",
            "endpoint_argument_name": "transcriptId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/extensions/calling/transcripts/{transcriptId}",
      "tags": [
        "Transcripts"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.extensions_calling_transcripts.write"
      ],
      "security_schemes": [
        "oauth2",
        "private_apps"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "transcriptId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/users/search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_crm_users",
        "description": {
          "tagline": "Perform a user search in the CRM database.",
          "detailed": "Use this tool to search for users within the HubSpot CRM. It should be called when you need to retrieve user information based on specific criteria."
        },
        "return_annotation": "Search results for CRM users.",
        "arguments": [
          {
            "name": "search_criteria",
            "alternative_names": [
              "user_search_filters",
              "query_parameters"
            ],
            "description": "A JSON object containing search parameters such as query string, limit, sorting order, properties to include, and filters for refining the CRM user search.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/users/search",
      "tags": [
        "Search"
      ],
      "summary": "",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.users.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "query": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The maximum results to return, up to 200 objects."
                },
                "after": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Specifies sorting order based on object properties."
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A list of property names to include in the response."
                },
                "filterGroups": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "filters": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "highValue": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The upper boundary value when using ranged-based filters."
                        },
                        "propertyName": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The name of the property to apply the filter to."
                        },
                        "values": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The values to match against the property."
                        },
                        "value": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The value to match against the property."
                        },
                        "operator": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "LTE",
                            "GT",
                            "GTE",
                            "BETWEEN",
                            "IN",
                            "NOT_IN",
                            "HAS_PROPERTY",
                            "NOT_HAS_PROPERTY",
                            "CONTAINS_TOKEN",
                            "NOT_CONTAINS_TOKEN"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "null"
                        }
                      },
                      "description": null
                    }
                  },
                  "description": "Up to 6 groups of filters defining additional query criteria."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Describes a search request",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The search query string, up to 3000 characters."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum results to return, up to 200 objects.",
                  "format": "int32"
                },
                "after": {
                  "type": "string",
                  "description": "A paging cursor token for retrieving subsequent pages."
                },
                "sorts": {
                  "type": "array",
                  "description": "Specifies sorting order based on object properties.",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "A list of property names to include in the response.",
                  "items": {
                    "type": "string"
                  }
                },
                "filterGroups": {
                  "type": "array",
                  "description": "Up to 6 groups of filters defining additional query criteria.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. ",
                          "properties": {
                            "highValue": {
                              "type": "string",
                              "description": "The upper boundary value when using ranged-based filters."
                            },
                            "propertyName": {
                              "type": "string",
                              "description": "The name of the property to apply the filter to."
                            },
                            "values": {
                              "type": "array",
                              "description": "The values to match against the property.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "value": {
                              "type": "string",
                              "description": "The value to match against the property."
                            },
                            "operator": {
                              "type": "string",
                              "description": "null",
                              "enum": [
                                "EQ",
                                "NEQ",
                                "LT",
                                "LTE",
                                "GT",
                                "GTE",
                                "BETWEEN",
                                "IN",
                                "NOT_IN",
                                "HAS_PROPERTY",
                                "NOT_HAS_PROPERTY",
                                "CONTAINS_TOKEN",
                                "NOT_CONTAINS_TOKEN"
                              ]
                            }
                          },
                          "required": [
                            "operator",
                            "propertyName"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/users/batch/create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_users_batch",
        "description": {
          "tagline": "Create a batch of users in the CRM system.",
          "detailed": "Use this tool to create multiple users at once in the HubSpot CRM. It should be called when there is a need to add multiple users efficiently through a single command."
        },
        "return_annotation": "Information about the created users batch.",
        "arguments": [
          {
            "name": "users_batch_request",
            "alternative_names": [
              "users_creation_payload",
              "user_batch_data"
            ],
            "description": "A JSON object containing an array of user objects to be created. Each user must include details such as associations, properties, and an optional objectWriteTraceId. Use for bulk user creation in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/users/batch/create",
      "tags": [
        "Batch"
      ],
      "summary": "Create a batch of users",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.users.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "associations": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "types": {
                          "val_type": "array",
                          "inner_val_type": "json",
                          "enum": null,
                          "properties": null,
                          "inner_properties": {
                            "associationCategory": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ],
                              "properties": null,
                              "inner_properties": null,
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                            },
                            "associationTypeId": {
                              "val_type": "integer",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": "The ID representing the specific type of association."
                            }
                          },
                          "description": null
                        },
                        "to": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "id": {
                              "val_type": "string",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": null,
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "description": null
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "associations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                                "properties": {
                                  "associationCategory": {
                                    "type": "string",
                                    "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                                    "enum": [
                                      "HUBSPOT_DEFINED",
                                      "USER_DEFINED",
                                      "INTEGRATOR_DEFINED"
                                    ]
                                  },
                                  "associationTypeId": {
                                    "type": "integer",
                                    "description": "The ID representing the specific type of association.",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "associationCategory",
                                  "associationTypeId"
                                ]
                              }
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "to",
                            "types"
                          ]
                        }
                      },
                      "objectWriteTraceId": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "associations",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"associations\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"associations\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"to\",\n                      \"types\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"types\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"required\": [\n                            \"associationCategory\",\n                            \"associationTypeId\"\n                          ],\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"associationCategory\": {\n                              \"type\": \"string\",\n                              \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                              \"enum\": [\n                                \"HUBSPOT_DEFINED\",\n                                \"USER_DEFINED\",\n                                \"INTEGRATOR_DEFINED\"\n                              ]\n                            },\n                            \"associationTypeId\": {\n                              \"type\": \"integer\",\n                              \"description\": \"The ID representing the specific type of association.\",\n                              \"format\": \"int32\"\n                            }\n                          },\n                          \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                        }\n                      },\n                      \"to\": {\n                        \"required\": [\n                          \"id\"\n                        ],\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/users/batch/archive",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "archive_users_batch",
        "description": {
          "tagline": "Archives a batch of users by their IDs in HubSpot CRM.",
          "detailed": "Use this tool to archive multiple users at once by providing their IDs to the HubSpot CRM system."
        },
        "return_annotation": "Confirmation of user batch archiving.",
        "arguments": [
          {
            "name": "user_ids_to_archive",
            "alternative_names": [
              "ids_of_users_to_archive",
              "user_identifiers"
            ],
            "description": "A JSON array of user IDs to be archived in HubSpot CRM.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/users/batch/archive",
      "tags": [
        "Batch"
      ],
      "summary": "Archive a batch of users by ID",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.users.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/users/batch/read",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_hubspot_user_records",
        "description": {
          "tagline": "Retrieve HubSpot user records by ID or unique property.",
          "detailed": "Use this tool to fetch HubSpot CRM user records by providing a record ID or specifying a custom unique value property with the `idProperty` parameter."
        },
        "return_annotation": "User records retrieved by ID or unique property.",
        "arguments": [
          {
            "name": "user_record_retrieval_request",
            "alternative_names": [
              "user_data_request_body",
              "hubspot_record_input"
            ],
            "description": "Details for retrieving HubSpot user records, including custom properties, IDs, and historic changes.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "fetch_archived_results_only",
              "include_only_archived_records"
            ],
            "description": "Specify True to return only results that have been archived.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/users/batch/read",
      "tags": [
        "Batch"
      ],
      "summary": "Read a batch of users by internal ID, or unique property values",
      "description": "Retrieve records by record ID or include the `idProperty` parameter to retrieve records by a custom unique value property. ",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.users.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "propertiesWithHistory": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object and their histories."
                },
                "idProperty": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.",
              "properties": {
                "propertiesWithHistory": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object and their histories.",
                  "items": {
                    "type": "string"
                  }
                },
                "idProperty": {
                  "type": "string",
                  "description": "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
                },
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "properties": {
                  "type": "array",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "inputs",
                "properties",
                "propertiesWithHistory"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\",\n          \"properties\",\n          \"propertiesWithHistory\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"propertiesWithHistory\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object and their histories.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"idProperty\": {\n            \"type\": \"string\",\n            \"description\": \"When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID.\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"Key-value pairs for setting properties for the new object.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/users/batch/upsert",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "upsert_hubspot_users",
        "description": {
          "tagline": "Create or update user records in HubSpot CRM.",
          "detailed": "This tool is used to create or update user records in HubSpot CRM by specifying a unique property value through the `idProperty` query parameter. It is helpful for maintaining and synchronizing user data in HubSpot."
        },
        "return_annotation": "Confirmation of user records created or updated.",
        "arguments": [
          {
            "name": "user_records_data",
            "alternative_names": [
              "user_object_data",
              "user_entries"
            ],
            "description": "A JSON array of user objects to be upserted. Each object must include `idProperty`, `objectWriteTraceId`, `id`, and `properties` to define unique user records and their attributes.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/users/batch/upsert",
      "tags": [
        "Batch"
      ],
      "summary": "Create or update a batch of users by unique property values",
      "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.users.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "An identifier for tracing the creation request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The unique ID of the object."
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents an object used in batch upsert operations, containing an object\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "An identifier for tracing the creation request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the object."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"An identifier for tracing the creation request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The unique ID of the object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Represents an object used in batch upsert operations, containing an object\\u2019s unique identifier, its properties, and optionally the unique property name and a write trace ID.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/users/{userId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_user_info",
        "description": {
          "tagline": "Retrieves user information from HubSpot CRM using user ID.",
          "detailed": "Use this tool to fetch detailed information about a user in HubSpot CRM by specifying the user's unique ID. You can control the returned data by using specific query parameters."
        },
        "return_annotation": "Detailed user information from HubSpot CRM.",
        "arguments": [
          {
            "name": "user_identifier",
            "alternative_names": [
              "user_id",
              "user_unique_id"
            ],
            "description": "The unique identifier for the user. This can be the internal object ID or a property value specified by `idProperty`.",
            "endpoint_argument_name": "userId"
          },
          {
            "name": "properties_to_return",
            "alternative_names": [
              "requested_properties",
              "properties_list"
            ],
            "description": "A list of user properties to return in the response. If any specified properties are not present, they will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "history_properties_list",
              "properties_with_past_values"
            ],
            "description": "List of property names to return with their value history for the user.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "object_associations",
            "alternative_names": [
              "related_object_types",
              "association_types"
            ],
            "description": "Comma separated list of object types to retrieve associated IDs for in the user info response.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "identifier_property",
              "unique_id_property"
            ],
            "description": "The name of a property with unique values to identify the object.",
            "endpoint_argument_name": "idProperty"
          },
          {
            "name": "return_only_archived_results",
            "alternative_names": [
              "fetch_archived_only",
              "include_only_archived"
            ],
            "description": "Set to true to return only archived results. Set to false to exclude archived items from results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/users/{userId}",
      "tags": [
        "Basic"
      ],
      "summary": "Read",
      "description": "Read an Object identified by `{userId}`. `{userId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.users.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "userId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "delete-/crm/v3/objects/users/{userId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_user",
        "description": {
          "tagline": "Delete a user and move to recycling bin.",
          "detailed": ""
        },
        "return_annotation": "Confirmation of user deletion from the CRM.",
        "arguments": [
          {
            "name": "user_id_to_delete",
            "alternative_names": [
              "target_user_id",
              "user_identifier"
            ],
            "description": "The unique identifier of the user to delete and move to the recycling bin.",
            "endpoint_argument_name": "userId"
          }
        ]
      },
      "method": "DELETE",
      "path": "/crm/v3/objects/users/{userId}",
      "tags": [
        "Basic"
      ],
      "summary": "Archive",
      "description": "Move an Object identified by `{userId}` to the recycling bin.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.users.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "userId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "patch-/crm/v3/objects/users/{userId}",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_hubspot_user",
        "description": {
          "tagline": "Update user details in HubSpot CRM.",
          "detailed": "This tool updates specific user information in HubSpot CRM for a given user ID or a unique property value if specified. Use this tool when you need to modify or clear user property values, bearing in mind read-only and non-existent properties will cause errors."
        },
        "return_annotation": "Result of updating user details in HubSpot CRM.",
        "arguments": [
          {
            "name": "user_id",
            "alternative_names": [
              "unique_user_identifier",
              "hubspot_user_id"
            ],
            "description": "The internal user ID or unique property value to identify the user for updating.",
            "endpoint_argument_name": "userId"
          },
          {
            "name": "user_properties_to_update",
            "alternative_names": [
              "user_update_properties",
              "user_details_update"
            ],
            "description": "A JSON object containing key-value pairs of user properties to update. Specify properties to modify or clear.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "unique_property_name",
            "alternative_names": [
              "unique_identifier_property",
              "property_name_for_identification"
            ],
            "description": "Specifies the name of a property with unique values for identifying the user object. Use this if not using userId.",
            "endpoint_argument_name": "idProperty"
          }
        ]
      },
      "method": "PATCH",
      "path": "/crm/v3/objects/users/{userId}",
      "tags": [
        "Basic"
      ],
      "summary": "Update",
      "description": "Perform a partial update of an Object identified by `{userId}`or optionally a unique property value as specified by the `idProperty` query param. `{userId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.users.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "idProperty",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of a property whose values are unique for this object"
            },
            "description": "The name of a property whose values are unique for this object",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "userId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key value pairs representing the properties of the object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
              "properties": {
                "properties": {
                  "type": "object",
                  "description": "Key value pairs representing the properties of the object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key value pairs representing the properties of the object.\"\n          }\n        },\n        \"description\": \"Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.\",\n        \"example\": {\n          \"properties\": {\n            \"property_checkbox\": \"false\",\n            \"property_date\": \"1572480000000\",\n            \"property_dropdown\": \"choice_b\",\n            \"property_multiple_checkboxes\": \"chocolate;strawberry\",\n            \"property_number\": \"17\",\n            \"property_radio\": \"option_1\",\n            \"property_string\": \"value\"\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/users/batch/update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_multiple_users",
        "description": {
          "tagline": "Update multiple users in HubSpot CRM by internal ID or unique properties.",
          "detailed": "This tool updates a batch of users in HubSpot CRM using either their internal IDs or unique property values. Use this tool to efficiently update information for multiple users at once."
        },
        "return_annotation": "Information about the updated users.",
        "arguments": [
          {
            "name": "user_update_data",
            "alternative_names": [
              "users_update_payload",
              "batch_users_update_data"
            ],
            "description": "A JSON object containing an array of user update data, each with unique identifiers and property updates. Includes idProperty, objectWriteTraceId, id, and properties for each user.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/users/batch/update",
      "tags": [
        "Batch"
      ],
      "summary": "Update a batch of users by internal ID, or unique property values",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.users.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "inputs": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "idProperty": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of a property whose values are unique for this object"
                    },
                    "objectWriteTraceId": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A unique identifier for tracing the request."
                    },
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                    },
                    "properties": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Key-value pairs representing the properties of the object."
                    }
                  },
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.",
                    "properties": {
                      "idProperty": {
                        "type": "string",
                        "description": "The name of a property whose values are unique for this object",
                        "example": "my_unique_property_name"
                      },
                      "objectWriteTraceId": {
                        "type": "string",
                        "description": "A unique identifier for tracing the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
                      },
                      "properties": {
                        "type": "object",
                        "description": "Key-value pairs representing the properties of the object.",
                        "properties": {},
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "properties"
                    ]
                  }
                }
              },
              "required": [
                "inputs"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"inputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"id\",\n                \"properties\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"idProperty\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of a property whose values are unique for this object\",\n                  \"example\": \"my_unique_property_name\"\n                },\n                \"objectWriteTraceId\": {\n                  \"type\": \"string\",\n                  \"description\": \"A unique identifier for tracing the request.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The id to be updated. This can be the object id, or the unique property value of the idProperty property\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": \"Key-value pairs representing the properties of the object.\"\n                }\n              },\n              \"description\": \"Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "get-/crm/v3/objects/users",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_users_page",
        "description": {
          "tagline": "Fetch a page of users from the CRM.",
          "detailed": "Use this tool to read a page of users from the HubSpot CRM. You can control which user properties are returned by using the appropriate query parameters."
        },
        "return_annotation": "A page of user data from the CRM.",
        "arguments": [
          {
            "name": "max_results_per_page",
            "alternative_names": [
              "page_size_limit",
              "results_count"
            ],
            "description": "Specify the maximum number of results to display per page.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "paging_cursor_token",
            "alternative_names": [
              "last_read_resource_token",
              "pagination_token"
            ],
            "description": "The paging cursor token from the last read resource, used to fetch next set of results.",
            "endpoint_argument_name": "after"
          },
          {
            "name": "user_properties",
            "alternative_names": [
              "user_attributes",
              "user_details"
            ],
            "description": "A list of user property names to include in the response. Any non-existent properties will be ignored.",
            "endpoint_argument_name": "properties"
          },
          {
            "name": "properties_with_history",
            "alternative_names": [
              "properties_with_history_list",
              "detailed_properties_history"
            ],
            "description": "List of properties to return with their history. Reduces the maximum number of users per request.",
            "endpoint_argument_name": "propertiesWithHistory"
          },
          {
            "name": "associated_object_types",
            "alternative_names": [
              "related_object_types",
              "linked_entity_types"
            ],
            "description": "A list of object types for which associated IDs should be retrieved. If specified associations do not exist, they will be ignored.",
            "endpoint_argument_name": "associations"
          },
          {
            "name": "return_only_archived",
            "alternative_names": [
              "include_only_archived",
              "show_archived_only"
            ],
            "description": "Set to true to return only results that have been archived.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/crm/v3/objects/users",
      "tags": [
        "Basic"
      ],
      "summary": "List",
      "description": "Read a page of users. Control what is returned via the `properties` query param.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.users.read"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [
          {
            "name": "limit",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum number of results to display per page."
            },
            "description": "The maximum number of results to display per page.",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer",
              "format": "int32"
            },
            "schema_required": false
          },
          {
            "name": "after",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
            },
            "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "properties",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored."
            },
            "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "propertiesWithHistory",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of users that can be read by a single request."
            },
            "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of users that can be read by a single request.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "associations",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored."
            },
            "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Whether to return only results that have been archived."
            },
            "description": "Whether to return only results that have been archived.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "post-/crm/v3/objects/users",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_crm_user",
        "description": {
          "tagline": "Create a new user in the CRM and retrieve their ID.",
          "detailed": "Use this tool to create a new user in the HubSpot CRM system. The tool will return a detailed user object, including the newly assigned ID. This is useful for adding new users to your CRM database."
        },
        "return_annotation": "Details of the created user, including their ID.",
        "arguments": [
          {
            "name": "user_properties",
            "alternative_names": [
              "user_details",
              "user_data"
            ],
            "description": "A JSON object containing key-value pairs for setting properties of the new user. It can include user associations and specific property settings.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/crm/v3/objects/users",
      "tags": [
        "Basic"
      ],
      "summary": "Create",
      "description": "Create a user with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard users is provided.",
      "requires_security": true,
      "oauth_scopes": [
        "crm.objects.users.write"
      ],
      "security_schemes": [
        "oauth2",
        "oauth2_legacy",
        "private_apps",
        "private_apps_legacy"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "associations": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "types": {
                      "val_type": "array",
                      "inner_val_type": "json",
                      "enum": null,
                      "properties": null,
                      "inner_properties": {
                        "associationCategory": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": [
                            "HUBSPOT_DEFINED",
                            "USER_DEFINED",
                            "INTEGRATOR_DEFINED"
                          ],
                          "properties": null,
                          "inner_properties": null,
                          "description": "The category of the association, such as \"HUBSPOT_DEFINED\"."
                        },
                        "associationTypeId": {
                          "val_type": "integer",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "The ID representing the specific type of association."
                        }
                      },
                      "description": null
                    },
                    "to": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "id": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": null
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Key-value pairs for setting properties for the new object."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.",
              "properties": {
                "associations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Defines the type, direction, and details of the relationship between two CRM objects.",
                          "properties": {
                            "associationCategory": {
                              "type": "string",
                              "description": "The category of the association, such as \"HUBSPOT_DEFINED\".",
                              "enum": [
                                "HUBSPOT_DEFINED",
                                "USER_DEFINED",
                                "INTEGRATOR_DEFINED"
                              ]
                            },
                            "associationTypeId": {
                              "type": "integer",
                              "description": "The ID representing the specific type of association.",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "associationCategory",
                            "associationTypeId"
                          ]
                        }
                      },
                      "to": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "to",
                      "types"
                    ]
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Key-value pairs for setting properties for the new object.",
                  "properties": {},
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"associations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"required\": [\n                \"to\",\n                \"types\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"types\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"associationCategory\",\n                      \"associationTypeId\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"associationCategory\": {\n                        \"type\": \"string\",\n                        \"description\": \"The category of the association, such as \\\"HUBSPOT_DEFINED\\\".\",\n                        \"enum\": [\n                          \"HUBSPOT_DEFINED\",\n                          \"USER_DEFINED\",\n                          \"INTEGRATOR_DEFINED\"\n                        ]\n                      },\n                      \"associationTypeId\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID representing the specific type of association.\",\n                        \"format\": \"int32\"\n                      }\n                    },\n                    \"description\": \"Defines the type, direction, and details of the relationship between two CRM objects.\"\n                  }\n                },\n                \"to\": {\n                  \"required\": [\n                    \"id\"\n                  ],\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Key-value pairs for setting properties for the new object.\"\n          }\n        },\n        \"description\": \"Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects.\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    }
  ],
  "security_scheme_key_selected": "oauth2",
  "security_scheme_selected": {
    "type": "oauth2",
    "flows": {
      "authorizationCode": {
        "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
        "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
        "scopes": {
          "oauth": "User and Account Information",
          "crm.objects.deals.read": "View deal records",
          "crm.objects.subscriptions.read": "Read Commerce Subscriptions",
          "crm.objects.services.read": "Read services",
          "crm.objects.orders.read": "Read Orders",
          "crm.objects.listings.write": "Write listings",
          "crm.objects.custom.read": "View custom object records",
          "crm.objects.companies.write": "View company records",
          "crm.objects.custom.sensitive.write.v2": "Change custom object records (sensitive)",
          "crm.objects.custom.highly_sensitive.write.v2": "Change custom object records (highly-sensitive)",
          "crm.objects.companies.read": "Create or update company records",
          "crm.objects.appointments.sensitive.read.v2": "Read appointments (sensitive)",
          "crm.objects.contacts.highly_sensitive.read.v2": "View contact records (highly-sensitive)",
          "crm.objects.companies.sensitive.read.v2": "View sensitive properties on company records",
          "media_bridge.read": "Read media and media events",
          "crm.objects.deals.highly_sensitive.read.v2": "View deal records (highly-sensitive)",
          "crm.objects.contacts.highly_sensitive.write.v2": "Change contact records (highly-sensitive)",
          "crm.objects.companies.highly_sensitive.read.v2": "View company records (highly-sensitive)",
          "crm.objects.commercepayments.write": "Write commerce payments",
          "crm.objects.invoices.write": "Write invoices",
          "crm.objects.contacts.sensitive.write.v2": "Create or update sensitive properties on contact records",
          "crm.objects.users.write": "Write User CRM objects",
          "crm.objects.custom.sensitive.read.v2": "View custom object records (sensitive)",
          "crm.objects.users.read": "Read User CRM objects",
          "crm.objects.partner-services.read": "View Partner Service CRM objects",
          "crm.objects.orders.write": "Write orders",
          "crm.objects.partner-services.write": "Modify Partner Service CRM objects",
          "crm.objects.appointments.write": "Write appointments",
          "crm.objects.carts.write": "Write cart",
          "tickets": "Read and write tickets",
          "crm.objects.commercepayments.read": "Read the COMMERCE_PAYMENT object.",
          "crm.objects.products.write": "Write to my Product Library",
          "crm.objects.services.write": "Write services",
          "crm.objects.subscriptions.write": "Write to Commerce Subscriptions",
          "crm.objects.deals.sensitive.write.v2": "Create or update sensitive properties on deal records",
          "crm.objects.contacts.read": "View contact records",
          "crm.objects.appointments.sensitive.write.v2": "Write appointments (sensitive)",
          "crm.objects.invoices.read": "Read invoices objects",
          "tickets.sensitive.v2": "Tickets (sensitive)",
          "crm.objects.custom.write": "Change custom object records",
          "crm.objects.deals.write": "Create or update deal records",
          "e-commerce": "e-commerce",
          "crm.objects.appointments.read": "Read appointments",
          "crm.objects.companies.sensitive.write.v2": "Create or update sensitive properties on company records",
          "crm.objects.deals.highly_sensitive.write.v2": "Change deal records (highly-sensitive)",
          "crm.objects.custom.highly_sensitive.read.v2": "View custom object records (highly-sensitive)",
          "crm.objects.companies.highly_sensitive.write.v2": "Change company records (highly-sensitive)",
          "crm.objects.goals.write": "Write goals",
          "crm.objects.line_items.write": "Line Items",
          "crm.objects.contacts.write": "Create or update contact records",
          "crm.objects.goals.read": "Read goals",
          "crm.objects.partner-clients.write": "Modify Partner Client CRM objects",
          "crm.objects.line_items.read": "Line Items",
          "crm.objects.deals.sensitive.read.v2": "View sensitive properties on deal records",
          "tickets.highly_sensitive.v2": "Tickets (highly-sensitive)",
          "crm.objects.quotes.write": "Quotes",
          "crm.objects.leads.read": "Read lead objects",
          "crm.objects.leads.write": "Modify lead objects",
          "crm.objects.carts.read": "Read carts",
          "crm.objects.quotes.read": "Quotes",
          "crm.objects.courses.write": "Write courses",
          "crm.objects.partner-clients.read": "View Partner Client CRM objects",
          "crm.objects.courses.read": "Read courses",
          "crm.objects.listings.read": "Read listings",
          "crm.objects.contacts.sensitive.read.v2": "View sensitive properties on contact records",
          "crm.objects.products.read": "Read from my Product Library",
          "crm.objects.owners.read": "View owner records",
          "crm.dealsplits.read_write": "Create or retrieve deal splits on a deal",
          "crm.objects.feedback_submissions.read": "View feedback survey submissions",
          "crm.schemas.custom.read": "View custom object definitions",
          "crm.schemas.custom.write": "Change custom object definitions",
          "crm.lists.read": "View segments",
          "crm.lists.write": "Create or update segments",
          "cms.membership.access_groups.write": "Write membership access groups.",
          "automation": "Read from and write to my Workflows",
          "crm.schemas.carts.read": "Read cart property settings",
          "crm.schemas.quotes.read": "Quotes schemas",
          "crm.schemas.listings.read": "Read listings property settings",
          "crm.schemas.services.read": "Read services property settings",
          "crm.schemas.line_items.read": "Line Items schemas",
          "crm.schemas.subscriptions.read": "Read subscriptions schema",
          "crm.schemas.companies.read": "View company property settings",
          "crm.schemas.orders.read": "Read order property settings",
          "crm.schemas.deals.read": "View deals property settings",
          "crm.schemas.appointments.read": "Read appointments property settings",
          "crm.schemas.courses.read": "Read courses property settings",
          "crm.objects.marketing_events.write": "Write marketing events",
          "crm.schemas.contacts.read": "View contacts property settings",
          "crm.schemas.invoices.read": "Read invoices schema",
          "timeline": "Create timeline events",
          "crm.schemas.commercepayments.read": "Read the COMMERCE_PAYMENT properties.",
          "crm.pipelines.orders.read": "View details about your cart pipelines including pipeline stage information",
          "crm.objects.marketing_events.read": "Read marketing events",
          "crm.schemas.subscriptions.write": "Write to Subscription properties",
          "crm.schemas.listings.write": "Write listings property settings",
          "crm.schemas.invoices.write": "Write invoices schema",
          "crm.schemas.orders.write": "Write order property settings",
          "crm.pipelines.orders.write": "Create, delete, or make to your order pipelines or their respective stages",
          "crm.schemas.commercepayments.write": "Write commerce payments property settings",
          "crm.schemas.services.write": "Write services property settings",
          "crm.schemas.courses.write": "Write courses property settings",
          "crm.schemas.deals.write": "Create new deal properties or change deal property settings",
          "crm.schemas.appointments.write": "Write appointments property settings",
          "crm.schemas.contacts.write": "Create new contact properties or change contact property settings",
          "crm.schemas.carts.write": "Write cart property settings",
          "crm.schemas.companies.write": "Create new company properties or change company property settings",
          "crm.extensions_calling_transcripts.write": "Provides possibility to save and delete transcriptions",
          "crm.extensions_calling_transcripts.read": "Provides possibility to read transcriptions"
        }
      }
    }
  }
}
