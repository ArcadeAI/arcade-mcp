{
  "name": "SearchHubspotObjects",
  "fully_qualified_name": "HubspotCrmApi.SearchHubspotObjects@0.1.0",
  "description": "Perform a search on HubSpot CRM objects by type.\n\nUse this tool to search for objects in HubSpot CRM by specifying the object type. It helps in locating contacts, companies, deals, and other entities based on defined criteria.",
  "toolkit": {
    "name": "ArcadeHubspotCrmApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "object_type",
        "required": true,
        "description": "Specify the type of object to search for in HubSpot, such as contacts, companies, or deals.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "objectType"
      },
      {
        "name": "search_criteria",
        "required": true,
        "description": "JSON object specifying the search query, filters, limits, sorting, and properties to include in the results for a HubSpot CRM search.",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "query": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The search query string, up to 3000 characters."
            },
            "limit": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum results to return, up to 200 objects."
            },
            "after": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A paging cursor token for retrieving subsequent pages."
            },
            "sorts": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Specifies sorting order based on object properties."
            },
            "properties": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A list of property names to include in the response."
            },
            "filterGroups": {
              "val_type": "array",
              "inner_val_type": "json",
              "enum": null,
              "properties": null,
              "inner_properties": {
                "filters": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "highValue": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The upper boundary value when using ranged-based filters."
                    },
                    "propertyName": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of the property to apply the filter to."
                    },
                    "values": {
                      "val_type": "array",
                      "inner_val_type": "string",
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The values to match against the property."
                    },
                    "value": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The value to match against the property."
                    },
                    "operator": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "EQ",
                        "NEQ",
                        "LT",
                        "LTE",
                        "GT",
                        "GTE",
                        "BETWEEN",
                        "IN",
                        "NOT_IN",
                        "HAS_PROPERTY",
                        "NOT_HAS_PROPERTY",
                        "CONTAINS_TOKEN",
                        "NOT_CONTAINS_TOKEN"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": "null"
                    }
                  },
                  "description": null
                }
              },
              "description": "Up to 6 groups of filters defining additional query criteria."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "requestBody"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'post-/crm/v3/objects/{objectType}/search_doSearch'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-hubspot",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "crm.objects.carts.read",
          "crm.objects.services.write",
          "tickets.sensitive.v2",
          "crm.objects.contacts.write",
          "crm.objects.courses.read",
          "crm.objects.goals.write",
          "crm.objects.custom.read",
          "crm.objects.deals.read",
          "crm.objects.custom.write",
          "crm.objects.commercepayments.read",
          "crm.objects.contacts.highly_sensitive.read.v2",
          "crm.objects.leads.read",
          "crm.objects.contacts.sensitive.write.v2",
          "crm.objects.partner-services.write",
          "e-commerce",
          "crm.objects.products.read",
          "crm.objects.custom.sensitive.write.v2",
          "crm.objects.orders.write",
          "crm.objects.subscriptions.write",
          "tickets.highly_sensitive.v2",
          "crm.objects.deals.highly_sensitive.read.v2",
          "crm.objects.companies.write",
          "crm.objects.partner-services.read",
          "tickets",
          "crm.objects.quotes.read",
          "oauth",
          "crm.objects.contacts.highly_sensitive.write.v2",
          "crm.objects.companies.read",
          "crm.objects.custom.highly_sensitive.read.v2",
          "crm.objects.carts.write",
          "crm.objects.quotes.write",
          "crm.objects.companies.highly_sensitive.read.v2",
          "crm.objects.users.write",
          "crm.objects.companies.highly_sensitive.write.v2",
          "crm.objects.users.read",
          "crm.objects.contacts.read",
          "crm.objects.appointments.write",
          "crm.objects.partner-clients.write",
          "crm.objects.line_items.write",
          "crm.objects.deals.highly_sensitive.write.v2",
          "crm.objects.deals.write",
          "crm.objects.services.read",
          "crm.objects.custom.sensitive.read.v2",
          "crm.objects.companies.sensitive.write.v2",
          "crm.objects.appointments.read",
          "crm.objects.invoices.read",
          "crm.objects.partner-clients.read",
          "crm.objects.courses.write",
          "crm.objects.custom.highly_sensitive.write.v2",
          "crm.objects.listings.read",
          "crm.objects.listings.write",
          "crm.objects.subscriptions.read",
          "crm.objects.appointments.sensitive.write.v2",
          "crm.objects.invoices.write",
          "crm.objects.line_items.read",
          "crm.objects.companies.sensitive.read.v2",
          "crm.objects.appointments.sensitive.read.v2",
          "crm.objects.commercepayments.write",
          "crm.objects.leads.write",
          "crm.objects.deals.sensitive.read.v2",
          "crm.objects.goals.read",
          "crm.objects.orders.read",
          "crm.objects.contacts.sensitive.read.v2",
          "media_bridge.read",
          "crm.objects.deals.sensitive.write.v2",
          "crm.objects.products.write"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the hubspot_crm API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.hubapi.com/crm/v3/objects/{objectType}/search",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "objectType",
        "tool_parameter_name": "object_type",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "requestBody",
        "tool_parameter_name": "search_criteria",
        "description": "",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "query": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The search query string, up to 3000 characters."
            },
            "limit": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The maximum results to return, up to 200 objects."
            },
            "after": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A paging cursor token for retrieving subsequent pages."
            },
            "sorts": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Specifies sorting order based on object properties."
            },
            "properties": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "A list of property names to include in the response."
            },
            "filterGroups": {
              "val_type": "array",
              "inner_val_type": "json",
              "enum": null,
              "properties": null,
              "inner_properties": {
                "filters": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "highValue": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The upper boundary value when using ranged-based filters."
                    },
                    "propertyName": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The name of the property to apply the filter to."
                    },
                    "values": {
                      "val_type": "array",
                      "inner_val_type": "string",
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The values to match against the property."
                    },
                    "value": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The value to match against the property."
                    },
                    "operator": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "EQ",
                        "NEQ",
                        "LT",
                        "LTE",
                        "GT",
                        "GTE",
                        "BETWEEN",
                        "IN",
                        "NOT_IN",
                        "HAS_PROPERTY",
                        "NOT_HAS_PROPERTY",
                        "CONTAINS_TOKEN",
                        "NOT_CONTAINS_TOKEN"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": "null"
                    }
                  },
                  "description": null
                }
              },
              "description": "Up to 6 groups of filters defining additional query criteria."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The search query string, up to 3000 characters.\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"description\": \"The maximum results to return, up to 200 objects.\",\n            \"format\": \"int32\"\n          },\n          \"after\": {\n            \"type\": \"string\",\n            \"description\": \"A paging cursor token for retrieving subsequent pages.\"\n          },\n          \"sorts\": {\n            \"type\": \"array\",\n            \"description\": \"Specifies sorting order based on object properties.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"properties\": {\n            \"type\": \"array\",\n            \"description\": \"A list of property names to include in the response.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"filterGroups\": {\n            \"type\": \"array\",\n            \"description\": \"Up to 6 groups of filters defining additional query criteria.\",\n            \"items\": {\n              \"required\": [\n                \"filters\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"filters\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"required\": [\n                      \"operator\",\n                      \"propertyName\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"highValue\": {\n                        \"type\": \"string\",\n                        \"description\": \"The upper boundary value when using ranged-based filters.\"\n                      },\n                      \"propertyName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the property to apply the filter to.\"\n                      },\n                      \"values\": {\n                        \"type\": \"array\",\n                        \"description\": \"The values to match against the property.\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"value\": {\n                        \"type\": \"string\",\n                        \"description\": \"The value to match against the property.\"\n                      },\n                      \"operator\": {\n                        \"type\": \"string\",\n                        \"description\": \"null\",\n                        \"enum\": [\n                          \"EQ\",\n                          \"NEQ\",\n                          \"LT\",\n                          \"LTE\",\n                          \"GT\",\n                          \"GTE\",\n                          \"BETWEEN\",\n                          \"IN\",\n                          \"NOT_IN\",\n                          \"HAS_PROPERTY\",\n                          \"NOT_HAS_PROPERTY\",\n                          \"CONTAINS_TOKEN\",\n                          \"NOT_CONTAINS_TOKEN\"\n                        ]\n                      }\n                    },\n                    \"description\": \"Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. \"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"Describes a search request\"\n      }\n    }\n  },\n  \"required\": true\n}",
    "use_request_body_schema_mode": true,
    "validate_request_body_schema": true
  }
}
