{
  "name": "RetrieveBlogPosts",
  "fully_qualified_name": "HubspotCmsApi.RetrieveBlogPosts@0.1.0",
  "description": "Retrieve all blog posts with optional paging and filtering.\n\nUse this tool to access and browse all blog posts available, with additional options for paging and filtering. Ideal for integrating services that need to ingest blog content and suggest edits.",
  "toolkit": {
    "name": "ArcadeHubspotCmsApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "filter_by_creation_time",
        "required": false,
        "description": "Return only blog posts created at the specified time in ISO 8601 format.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only return blog posts created at exactly the specified time."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "createdAt"
      },
      {
        "name": "created_after",
        "required": false,
        "description": "Return blog posts created after the specified time. Use ISO 8601 format for the date-time.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only return blog posts created after the specified time."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "createdAfter"
      },
      {
        "name": "created_before",
        "required": false,
        "description": "Only return blog posts created before the specified time in ISO 8601 format.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only return blog posts created before the specified time."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "createdBefore"
      },
      {
        "name": "updated_at_exact",
        "required": false,
        "description": "Return blog posts last updated at the exact specified time in ISO 8601 format.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only return blog posts last updated at exactly the specified time."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "updatedAt"
      },
      {
        "name": "filter_by_update_after",
        "required": false,
        "description": "Only return blog posts last updated after the specified timestamp. Use a format such as ISO 8601 for date and time.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only return blog posts last updated after the specified time."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "updatedAfter"
      },
      {
        "name": "updated_before_date",
        "required": false,
        "description": "Return blog posts last updated before this date. Use ISO 8601 format (e.g., '2023-09-04T15:00:00Z').",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only return blog posts last updated before the specified time."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "updatedBefore"
      },
      {
        "name": "sort_fields_for_results",
        "required": false,
        "description": "An array specifying fields to sort blog posts. Use fields like `createdAt`, `name`, `updatedAt`, `createdBy`, `updatedBy`.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Specifies which fields to use for sorting results. Valid fields are `createdAt` (default), `name`, `updatedAt`, `createdBy`, `updatedBy`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sort"
      },
      {
        "name": "pagination_cursor_token",
        "required": false,
        "description": "The cursor token to retrieve the next set of blog post results. Obtain from `paging.next.after` in a previous response.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "after"
      },
      {
        "name": "max_results",
        "required": false,
        "description": "The maximum number of blog post results to return. Default is 20.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The maximum number of results to return. Default is 20."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "limit"
      },
      {
        "name": "return_specific_properties",
        "required": false,
        "description": "Comma-separated list of specific fields to return for each blog post (e.g., 'title,author,date'). Leave empty to return all fields.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "property"
      },
      {
        "name": "include_archived_posts",
        "required": false,
        "description": "Specify true to include archived (deleted) blog posts in the results. Defaults to false.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Specifies whether to return deleted blog posts. Defaults to `false`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "archived"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'get-/cms/v3/blogs/posts_getPage'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-hubspot",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "content"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the hubspot_cms API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.hubapi.com/cms/v3/blogs/posts",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "createdAt",
        "tool_parameter_name": "filter_by_creation_time",
        "description": "Only return blog posts created at exactly the specified time.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only return blog posts created at exactly the specified time."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "createdAfter",
        "tool_parameter_name": "created_after",
        "description": "Only return blog posts created after the specified time.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only return blog posts created after the specified time."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "createdBefore",
        "tool_parameter_name": "created_before",
        "description": "Only return blog posts created before the specified time.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only return blog posts created before the specified time."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "updatedAt",
        "tool_parameter_name": "updated_at_exact",
        "description": "Only return blog posts last updated at exactly the specified time.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only return blog posts last updated at exactly the specified time."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "updatedAfter",
        "tool_parameter_name": "filter_by_update_after",
        "description": "Only return blog posts last updated after the specified time.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only return blog posts last updated after the specified time."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "updatedBefore",
        "tool_parameter_name": "updated_before_date",
        "description": "Only return blog posts last updated before the specified time.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only return blog posts last updated before the specified time."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "sort",
        "tool_parameter_name": "sort_fields_for_results",
        "description": "Specifies which fields to use for sorting results. Valid fields are `createdAt` (default), `name`, `updatedAt`, `createdBy`, `updatedBy`.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Specifies which fields to use for sorting results. Valid fields are `createdAt` (default), `name`, `updatedAt`, `createdBy`, `updatedBy`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "after",
        "tool_parameter_name": "pagination_cursor_token",
        "description": "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "limit",
        "tool_parameter_name": "max_results",
        "description": "The maximum number of results to return. Default is 20.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The maximum number of results to return. Default is 20."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "archived",
        "tool_parameter_name": "include_archived_posts",
        "description": "Specifies whether to return deleted blog posts. Defaults to `false`.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Specifies whether to return deleted blog posts. Defaults to `false`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "property",
        "tool_parameter_name": "return_specific_properties",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
